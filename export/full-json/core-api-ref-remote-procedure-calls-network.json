{
 "_id": "5db1fe83f2d77f00687251e4",
 "version": "5daf2e65f4109c0040fd51e5",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5af39863989da435b05d284d",
 "parentDoc": "5db1fe2da9cec2002e8eb1e0",
 "category": "5db200d330c9ba002c4ae2d9",
 "__v": 1,
 "updates": [],
 "updatedAt": "2019-11-20T20:39:12.668Z",
 "createdAt": "2019-10-24T19:41:55.814Z",
 "next": {
  "pages": [
   {
    "category": "Core API Reference",
    "slug": "core-api-ref-remote-procedure-calls-raw-transactions",
    "name": "Raw Transaction RPCs",
    "icon": "file-text-o",
    "type": "doc"
   }
  ],
  "description": ""
 },
 "link_external": false,
 "link_url": "",
 "sync_unique": "",
 "hidden": false,
 "api": {
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "auth": "required",
  "params": [],
  "url": "",
  "method": "get"
 },
 "isReference": false,
 "order": 8,
 "body": "# AddNode\n\nThe [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode) attempts to add or remove a node from the addnode list, or to try a connection to a node once.\n\n*Parameter #1---hostname/IP address and port of node to add or remove*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`node` | string | Required<br>(exactly 1) | The node to add as a string in the form of `<IP address>:<port>`.\n\n*Parameter #2---whether to add or remove the node, or to try only once to connect*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`command` | string | Required<br>(exactly 1) | What to do with the IP address above.  Options are:<br>\u2022 `add` to add a node to the addnode list.  Up to 8 nodes can be added additional to the default 8 nodes. Not limited by `-maxconnections`<br>\u2022 `remove` to remove a node from the list.  If currently connected, this will disconnect immediately<br>\u2022 `onetry` to immediately attempt connection to the node even if the outgoing connection slots are full; this will only attempt the connection once\n\n*Result---`null` plus error on failed remove*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | null | Required<br>(exactly 1) | Always JSON `null` whether the node was added, removed, tried-and-connected, or tried-and-not-connected.  The JSON-RPC error field will be set only if you try adding a node that was already added or removing a node that is not on the addnodes list\n\n*Example from Dash Core 0.12.2*\n\nTry connecting to the following node.\n\n``` bash\ndash-cli -testnet addnode 192.0.2.113:19999 onetry\n```\n\nResult (no output from `dash-cli` because result is set to `null`).\n\n*See also*\n\n* [GetAddedNodeInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo): returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode) will have their information displayed.\n\n# ClearBanned\n\n*Added in Bitcoin Core 0.12.0*\n\nThe [`clearbanned` RPC](core-api-ref-remote-procedure-calls-network#section-clearbanned) clears list of banned nodes.\n\n*Parameters: none*\n\n*Result---`null` on success*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | null | Required<br>(exactly 1) | JSON `null` when the list was cleared\n\n*Example from Dash Core 0.12.2*\n\nClears the ban list.\n\n``` bash\ndash-cli clearbanned\n```\n\nResult (no output from `dash-cli` because result is set to `null`).\n\n*See also*\n\n* [ListBanned](/docs/core-api-ref-remote-procedure-calls-network#section-listbanned): lists all banned IPs/Subnets.\n* [SetBan](/docs/core-api-ref-remote-procedure-calls-network#section-setban): attempts add or remove a IP/Subnet from the banned list.\n\n# DisconnectNode\n\n*Added in Bitcoin Core 0.12.0*\n\nThe [`disconnectnode` RPC](core-api-ref-remote-procedure-calls-network#section-disconnectnode) immediately disconnects from a specified node.\n\n*Parameter #1---hostname/IP address and port of node to disconnect*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`address` | string | Required<br>(exactly 1) | The node you want to disconnect from as a string in the form of `<IP address>:<port>`.<br><br>*Updated in Bitcoin Core 0.14.1*\n\n*Parameter #2---nodeid*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nnodeid | number | Optional | The node ID (see `getpeerinfo` for node IDs)\n\n*Result---`null` on success or error on failed disconnect*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | null | Required<br>(exactly 1) | JSON `null` when the node was disconnected\n\n*Example from Dash Core 0.15.0*\n\nDisconnects following node by address.\n\n``` bash\ndash-cli -testnet disconnectnode 192.0.2.113:19999\n```\n\nResult (no output from `dash-cli` because result is set to `null`).\n\nDisconnects following node by id.\n\n``` bash\ndash-cli -testnet disconnectnode \"\" 3\n```\n\nResult (no output from `dash-cli` because result is set to `null`).\n\n*See also*\n\n* [AddNode](/docs/core-api-ref-remote-procedure-calls-network#section-addnode): attempts to add or remove a node from the addnode list, or to try a connection to a node once.\n* [GetAddedNodeInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo): returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode) will have their information displayed.\n\n# GetAddedNodeInfo\n\nThe [`getaddednodeinfo` RPC](core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo) returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode) will have their information displayed.\n\nPrior to Dash Core 0.12.3, this dummy parameter was required for historical purposes but not used:\n\n*DEPRECATED Parameter #1---whether to display connection information*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n_Dummy_ | _bool_ | _Required<br>(exactly 1)_ | _Removed in Dash Core 0.12.3_\n\nBeginning with Dash Core 0.12.3, this is the single (optional) parameter:\n\n*Parameter #1---what node to display information about*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`node` | string | Optional<br>(0 or 1) | The node to get information about in the same `<IP address>:<port>` format as the [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode).  If this parameter is not provided, information about all added nodes will be returned\n\n*Result---a list of added nodes*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | array | Required<br>(exactly 1) | An array containing objects describing each added node.  If no added nodes are present, the array will be empty.  Nodes added with `onetry` will not be returned\n\u2192<br>Added Node | object | Optional<br>(0 or more) | An object containing details about a single added node\n\u2192 \u2192<br>`addednode` | string | Required<br>(exactly 1) | An added node in the same `<IP address>:<port>` format as used in the [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode).\n\u2192 \u2192<br>`connected` | bool | Optional<br>(0 or 1) | This will be set to `true` if the node is currently connected and `false` if it is not\n\u2192 \u2192<br>`addresses` | array | Required<br>(exactly 1) | This will be an array of addresses belonging to the added node\n\u2192 \u2192 \u2192<br>Address | object | Optional<br>(0 or more) | An object describing one of this node's addresses\n\u2192 \u2192 \u2192 \u2192<br>`address` | string | Required<br>(exactly 1) | An IP address and port number of the node.  If the node was added using a DNS address, this will be the resolved IP address\n\u2192 \u2192 \u2192 \u2192<br>`connected` | string | Required<br>(exactly 1) | Whether or not the local node is connected to this addnode using this IP address.  Valid values are:<br>\u2022 `false` for not connected<br>\u2022 `inbound` if the addnode connected to us<br>\u2022 `outbound` if we connected to the addnode\n\n*Example from Dash Core 0.12.3*\n\n``` bash\ndash-cli getaddednodeinfo\n```\n\nResult (real hostname and IP address replaced with [RFC5737](http://tools.ietf.org/html/rfc5737) reserved address):\n\n``` json\n[\n  {\n    \"addednode\": \"192.0.2.113:19999\",\n    \"connected\": true,\n    \"addresses\": [\n      {\n        \"address\": \"192.0.2.113:19999\",\n        \"connected\": \"outbound\"\n      }\n    ]\n  }\n]\n```\n\n*See also*\n\n* [AddNode](/docs/core-api-ref-remote-procedure-calls-network#section-addnode): attempts to add or remove a node from the addnode list, or to try a connection to a node once.\n* [GetPeerInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo): returns data about each connected network node.\n\n# GetConnectionCount\n\nThe [`getconnectioncount` RPC](core-api-ref-remote-procedure-calls-network#section-getconnectioncount) returns the number of connections to other nodes.\n\n*Parameters: none*\n\n*Result---the number of connections to other nodes*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | number (int) | Required<br>(exactly 1) | The total number of connections to other nodes (both inbound and outbound)\n\n*Example from Dash Core 0.12.2*\n\n``` bash\ndash-cli -testnet getconnectioncount\n```\n\nResult:\n\n``` text\n14\n```\n\n*See also*\n\n* [GetNetTotals](/docs/core-api-ref-remote-procedure-calls-network#section-getnettotals): returns information about network traffic, including bytes in, bytes out, and the current time.\n* [GetPeerInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo): returns data about each connected network node.\n* [GetNetworkInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo): returns information about the node's connection to the network.\n\n# GetNetTotals\n\nThe [`getnettotals` RPC](core-api-ref-remote-procedure-calls-network#section-getnettotals) returns information about network traffic, including bytes in, bytes out, and the current time.\n\n*Parameters: none*\n\n*Result---the current bytes in, bytes out, and current time*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | An object containing information about the node's network totals\n\u2192<br>`totalbytesrecv` | number (int) | Required<br>(exactly 1) | The total number of bytes received since the node was last restarted\n\u2192<br>`totalbytessent` | number (int) | Required<br>(exactly 1) | The total number of bytes sent since the node was last restarted\n\u2192<br>`timemillis` | number (int) | Required<br>(exactly 1) | Unix epoch time in milliseconds according to the operating system's clock (not the node adjusted time)\n\u2192<br>`uploadtarget` | string : <br>object | Required<br>(exactly 1) | The upload target information\n\u2192 \u2192<br>`timeframe` | number (int) | Required<br>(exactly 1) | Length of the measuring timeframe in seconds (currently set to `24` hours)\n\u2192 \u2192<br>`target` | number (int) | Required<br>(exactly 1) | The maximum allowed outbound traffic in bytes (default is `0`).  Can be changed with `-maxuploadtarget`\n\u2192 \u2192<br>`target_reached` | bool | Required<br>(exactly 1) | Indicates if the target is reached.  If the target is reached the node won't serve SPV and historical block requests anymore  \n\u2192 \u2192<br>`serve_historical_blocks` | bool | Required<br>(exactly 1) | Indicates if historical blocks are served  \n\u2192 \u2192<br>`bytes_left_in_cycle` | number (int) | Required<br>(exactly 1) | Amount of bytes left in current time cycle.  `0` is displayed if no upload target is set  \n\u2192 \u2192<br>`time_left_in_cycle` | number (int) | Required<br>(exactly 1) | Seconds left in current time cycle.  `0` is displayed if no upload target is set    \n\n*Example from Dash Core 0.12.2*\n\n``` bash\ndash-cli getnettotals\n```\n\nResult:\n\n``` json\n{\n  \"totalbytesrecv\": 4661588,\n  \"totalbytessent\": 2899423,\n  \"timemillis\": 1507815162756,\n  \"uploadtarget\": {\n    \"timeframe\": 86400,\n    \"target\": 0,\n    \"target_reached\": false,\n    \"serve_historical_blocks\": true,\n    \"bytes_left_in_cycle\": 0,\n    \"time_left_in_cycle\": 0\n  }\n}\n```\n\n*See also*\n\n* [GetNetworkInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo): returns information about the node's connection to the network.\n* [GetPeerInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo): returns data about each connected network node.\n\n# GetNetworkInfo\n\nThe [`getnetworkinfo` RPC](core-api-ref-remote-procedure-calls-network#section-getnetworkinfo) returns information about the node's connection to the network.\n\n*Parameters: none*\n\n*Result---information about the node's connection to the network*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | Information about this node's connection to the network\n\u2192<br>`version` | number | Required<br>(exactly 1) | This node's version of Dash Core in its internal integer format.  For example, Dash Core 0.12.2 has the integer version number 120200\n\u2192<br>`subversion` | string | Required<br>(exactly 1) | The user agent this node sends in its [`version` message](core-ref-p2p-network-control-messages#section-version)\n\u2192<br>`protocolversion` | number (int) | Required<br>(exactly 1) | The protocol version number used by this node.  See the [protocol versions section](core-ref-p2p-network-protocol-versions) for more information\n\u2192<br>`localservices` | string (hex) | Required<br>(exactly 1) | The services supported by this node as advertised in its [`version` message](core-ref-p2p-network-control-messages#section-version)\n\u2192<br>`localrelay` | bool | Required<br>(exactly 1) | *Added in Bitcoin Core 0.13.0*<br><br>The services supported by this node as advertised in its [`version` message](core-ref-p2p-network-control-messages#section-version)\n\u2192<br>`timeoffset` | number (int) | Required<br>(exactly 1) | The offset of the node's clock from the computer's clock (both in UTC) in seconds.  The offset may be up to 4200 seconds (70 minutes)\n\u2192<br>`networkactive` | bool | Required<br>(exactly 1) | Set to `true` if P2P networking is enabled.  Set to `false` if P2P networking is disabled. Enabling/disabling done via [SetNetworkActive](/docs/core-api-ref-remote-procedure-calls-network#section-setnetworkactive)\n\u2192<br>`connections` | number (int) | Required<br>(exactly 1) | The total number of open connections (both outgoing and incoming) between this node and other nodes\n\u2192<br>`networks` | array | Required<br>(exactly 1) | An array with three objects: one describing the IPv4 connection, one describing the IPv6 connection, and one describing the Tor hidden service (onion) connection\n\u2192 \u2192<br>Network | object | Optional<br>(0 to 3) | An object describing a network.  If the network is unroutable, it will not be returned\n\u2192 \u2192 \u2192<br>`name` | string | Required<br>(exactly 1) | The name of the network.  Either `ipv4`, `ipv6`, or `onion`\n\u2192 \u2192 \u2192<br>`limited` | bool | Required<br>(exactly 1) | Set to `true` if only connections to this network are allowed according to the `-onlynet` Dash Core command-line/configuration-file parameter.  Otherwise set to `false`\n\u2192 \u2192 \u2192<br>`reachable` | bool | Required<br>(exactly 1) | Set to `true` if connections can be made to or from this network.  Otherwise set to `false`\n\u2192 \u2192 \u2192<br>`proxy` | string | Required<br>(exactly 1) | The hostname and port of any proxy being used for this network.  If a proxy is not in use, an empty string\n\u2192 \u2192 \u2192<br>`proxy_randomize_credentials` | bool | Required<br>(exactly 1) | *Added in Bitcoin Core 0.11.0*<br><br>Set to `true` if randomized credentials are set for this proxy. Otherwise set to `false`\n\u2192<br>`relayfee` | number (DASH) | Required<br>(exactly 1) | The minimum relay fee per kilobyte for transactions in order for this node to accept it into its memory pool\n\u2192<br>`incrementalfee` | number (DASH) | Required<br>(exactly 1) | *Added in Dash Core 0.12.3*<br><br>The minimum fee increment for mempool limiting or BIP 125 replacement in DASH/kB\n\u2192<br>`localaddresses` | array | Required<br>(exactly 1) | An array of objects each describing the local addresses this node believes it listens on\n\u2192 \u2192<br>Address | object | Optional<br>(0 or more) | An object describing a particular address this node believes it listens on\n\u2192 \u2192 \u2192<br>`address` | string | Required<br>(exactly 1) | An IP address or .onion address this node believes it listens on.  This may be manually configured, auto detected, or based on [`version` messages](core-ref-p2p-network-control-messages#section-version) this node received from its peers\n\u2192 \u2192 \u2192<br>`port` | number (int) | Required<br>(exactly 1) | The port number this node believes it listens on for the associated `address`.  This may be manually configured, auto detected, or based on [`version` messages](core-ref-p2p-network-control-messages#section-version) this node received from its peers\n\u2192 \u2192 \u2192<br>`score` | number (int) | Required<br>(exactly 1) | The number of incoming connections during the uptime of this node that have used this `address` in their [`version` message](core-ref-p2p-network-control-messages#section-version)\n\u2192<br>`warnings` | string | Required<br>(exactly 1) | *Added in Bitcoin Core 0.11.0*<br><br>A plain-text description of any network warnings. If there are no warnings, an empty string will be returned.\n\n*Example from Dash Core 0.12.3*\n\n``` bash\ndash-cli getnetworkinfo\n```\n\nResult (actual addresses have been replaced with [RFC5737](http://tools.ietf.org/html/rfc5737) reserved addresses):\n\n``` json\n{\n  \"version\": 120300,\n  \"subversion\": \"/Dash Core:0.12.3/\",\n  \"protocolversion\": 70208,\n  \"localservices\": \"0000000000000005\",\n  \"localrelay\": true,\n  \"timeoffset\": 0,\n  \"networkactive\": true,\n  \"connections\": 9,\n  \"networks\": [\n    {\n      \"name\": \"ipv4\",\n      \"limited\": false,\n      \"reachable\": true,\n      \"proxy\": \"\",\n      \"proxy_randomize_credentials\": false\n    },\n    {\n      \"name\": \"ipv6\",\n      \"limited\": false,\n      \"reachable\": true,\n      \"proxy\": \"\",\n      \"proxy_randomize_credentials\": false\n    },\n    {\n      \"name\": \"onion\",\n      \"limited\": true,\n      \"reachable\": false,\n      \"proxy\": \"\",\n      \"proxy_randomize_credentials\": false\n    }\n  ],\n  \"relayfee\": 0.00001000,\n  \"incrementalfee\": 0.00001000,\n  \"localaddresses\": [\n    {\n      \"address\": \"192.0.2.113\",\n      \"port\": 19999,\n      \"score\": 4\n    }\n  ],\n  \"warnings\": \"\"\n}\n\n```\n\n*See also*\n\n* [GetPeerInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo): returns data about each connected network node.\n* [GetNetTotals](/docs/core-api-ref-remote-procedure-calls-network#section-getnettotals): returns information about network traffic, including bytes in, bytes out, and the current time.\n* [SetNetworkActive](/docs/core-api-ref-remote-procedure-calls-network#section-setnetworkactive): disables/enables all P2P network activity.\n\n# GetPeerInfo\n\nThe [`getpeerinfo` RPC](core-api-ref-remote-procedure-calls-network#section-getpeerinfo) returns data about each connected network node.\n\n*Parameters: none*\n\n*Result---information about each currently-connected network node*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | array | Required<br>(exactly 1) | An array of objects each describing one connected node.  If there are no connections, the array will be empty\n\u2192<br>Node | object | Optional<br>(0 or more) | An object describing a particular connected node\n\u2192 \u2192<br>`id` | number (int) | Required<br>(exactly 1) | The node's index number in the local node address database\n\u2192 \u2192<br>`addr` | string | Required<br>(exactly 1) | The IP address and port number used for the connection to the remote node\n\u2192 \u2192<br>`addrlocal` | string | Optional<br>(0 or 1) | Our IP address and port number according to the remote node.  May be incorrect due to error or lying.  Most SPV nodes set this to `127.0.0.1:9999`\n\u2192 \u2192<br>`addrbind` | string | Optional<br>(0 or 1) | Bind address of the connection to the peer\n\u2192 \u2192<br>`services` | string (hex) | Required<br>(exactly 1) | The services advertised by the remote node in its [`version` message](core-ref-p2p-network-control-messages#section-version)\n\u2192 \u2192<br>`lastsend` | number (int) | Required<br>(exactly 1) | The Unix epoch time when we last successfully sent data to the TCP socket for this node\n\u2192 \u2192<br>`lastrecv` | number (int) | Required<br>(exactly 1) | The Unix epoch time when we last received data from this node\n\u2192 \u2192<br>`bytessent` | number (int) | Required<br>(exactly 1) | The total number of bytes we've sent to this node\n\u2192 \u2192<br>`bytesrecv` | number (int) | Required<br>(exactly 1) | The total number of bytes we've received from this node\n\u2192 \u2192<br>`conntime` | number (int) | Required<br>(exactly 1) | The Unix epoch time when we connected to this node\n\u2192 \u2192<br>`timeoffset` | number (int) | Required<br>(exactly 1) | *Added in Bitcoin Core 0.12.0*<br><br>The time offset in seconds\n\u2192 \u2192<br>`pingtime` | number (real) | Required<br>(exactly 1) | The number of seconds this node took to respond to our last P2P [`ping` message](core-ref-p2p-network-control-messages#section-ping)\n\u2192 \u2192<br>`minping` | number (real) | Optional<br>(0 or 1) | *Updated in Bitcoin Core 0.13.0*<br><br>The minimum observed ping time (if any at all)\n\u2192 \u2192<br>`pingwait` | number (real) | Optional<br>(0 or 1) | The number of seconds we've been waiting for this node to respond to a P2P [`ping` message](core-ref-p2p-network-control-messages#section-ping).  Only shown if there's an outstanding [`ping` message](core-ref-p2p-network-control-messages#section-ping)\n\u2192 \u2192<br>`version` | number (int) | Required<br>(exactly 1) | The protocol version number used by this node.  See the [protocol versions section](core-ref-p2p-network-protocol-versions) for more information\n\u2192 \u2192<br>`subver` | string | Required<br>(exactly 1) | The user agent this node sends in its [`version` message](core-ref-p2p-network-control-messages#section-version).  This string will have been sanitized to prevent corrupting the JSON results.  May be an empty string\n\u2192 \u2192<br>`inbound` | bool | Required<br>(exactly 1) | Set to `true` if this node connected to us (inbound); set to `false` if we connected to this node (outbound)\n\u2192 \u2192<br>`addnode` | bool | Required<br>(exactly 1) | Set to `true` if this node was added via the [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode).\n\u2192 \u2192<br>`startingheight` | number (int) | Required<br>(exactly 1) | The height of the remote node's block chain when it connected to us as reported in its [`version` message](core-ref-p2p-network-control-messages#section-version)\n\u2192 \u2192<br>`banscore` | number (int) | Required<br>(exactly 1) | The ban score we've assigned the node based on any misbehavior it's made.  By default, Dash Core disconnects when the ban score reaches `100`\n\u2192 \u2192<br>`synced_headers` | number (int) | Required<br>(exactly 1) | The highest-height header we have in common with this node based the last P2P [`headers` message](core-ref-p2p-network-data-messages#section-headers) it sent us.  If a [`headers` message](core-ref-p2p-network-data-messages#section-headers) has not been received, this will be set to `-1`\n\u2192 \u2192<br>`synced_blocks` | number (int) | Required<br>(exactly 1) | The highest-height block we have in common with this node based on P2P [`inv` messages](core-ref-p2p-network-data-messages#section-inv) this node sent us.  If no block [`inv` messages](core-ref-p2p-network-data-messages#section-inv) have been received from this node, this will be set to `-1`\n\u2192 \u2192<br>`inflight` | array | Required<br>(exactly 1) | An array of blocks which have been requested from this peer.  May be empty\n\u2192 \u2192 \u2192<br>Blocks | number (int) | Optional<br>(0 or more) | The height of a block being requested from the remote peer\n\u2192 \u2192<br>`whitelisted` | bool | Required<br>(exactly 1) | Set to `true` if the remote peer has been whitelisted; otherwise, set to `false`.  Whitelisted peers will not be banned if their ban score exceeds the maximum (100 by default).  By default, peers connecting from localhost are whitelisted\n\u2192 \u2192<br>`bytessent_per_msg` | string : <br>object | Required<br>(exactly 1) | *Added in Bitcoin Core 0.13.0*<br><br>Information about total sent bytes aggregated by message type\n\u2192 \u2192 \u2192<br>Message Type | number (int) | Required<br>(1 or more) | Total sent bytes aggregated by message type. One field for every used message type\n\u2192 \u2192<br>`bytesrecv_per_msg` | string : <br>object | Required<br>(exactly 1) | *Added in Bitcoin Core 0.13.0*<br><br>Information about total received bytes aggregated by message type\n\u2192 \u2192 \u2192<br>Message Type | number (int) | Required<br>(1 or more) | Total received bytes aggregated by message type. One field for every used message type\n\n*Example from Dash Core 0.12.2*\n\n``` bash\ndash-cli getpeerinfo\n```\n\nResult (edited to show only a single entry, with IP addresses changed to\n[RFC5737](http://tools.ietf.org/html/rfc5737) reserved IP addresses):\n\n``` json\n[\n  {\n    \"id\": 3,\n    \"addr\": \"192.0.2.113:19999\",\n    \"addrlocal\": \"127.0.0.1:56332\",\n    \"addrbind\": \"192.168.10.111:56332\",\n    \"services\": \"0000000000000005\",\n    \"relaytxes\": true,\n    \"lastsend\": 1507818327,\n    \"lastrecv\": 1507818327,\n    \"bytessent\": 844135,\n    \"bytesrecv\": 887651,\n    \"conntime\": 1507808575,\n    \"timeoffset\": 0,\n    \"pingtime\": 0.113646,\n    \"minping\": 0.106826,\n    \"version\": 70215,\n    \"subver\": \"/Dash Core:0.14.0.3/\",\n    \"inbound\": false,\n    \"addnode\": false,\n    \"startingheight\": 159292,\n    \"banscore\": 0,\n    \"synced_headers\": 159350,\n    \"synced_blocks\": 159350,\n    \"inflight\": [\n    ],\n    \"whitelisted\": false,\n    \"bytessent_per_msg\": {\n      \"addr\": 55,\n      \"dsq\": 69530,\n      \"getaddr\": 24,\n      \"getdata\": 9224,\n      \"getheaders\": 989,\n      \"getsporks\": 24,\n      \"govsync\": 66,\n      \"headers\": 6148,\n      \"inv\": 837,\n      \"ping\": 1856,\n      \"pong\": 1856,\n      \"qsendrecsigs\": 25,\n      \"sendcmpct\": 33,\n      \"senddsq\": 25,\n      \"sendheaders\": 24,\n      \"tx\": 5808,\n      \"verack\": 24,\n      \"version\": 160\n    },\n    \"bytesrecv_per_msg\": {\n      \"*other*\": 25,\n      \"addr\": 17362,\n      \"clsig\": 3276,\n      \"getdata\": 122,\n      \"getheaders\": 989,\n      \"headers\": 5300,\n      \"inv\": 24611,\n      \"islock\": 3249,\n      \"mnauth\": 152,\n      \"ping\": 1856,\n      \"pong\": 1856,\n      \"qsigrec\": 16492,\n      \"sendcmpct\": 33,\n      \"senddsq\": 25,\n      \"sendheaders\": 24,\n      \"spork\": 2090,\n      \"ssc\": 32,\n      \"tx\": 11523,\n      \"verack\": 24,\n      \"version\": 162\n    }\n  }\n]\n```\n\n*See also*\n\n* [GetAddedNodeInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo): returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the [`addnode` RPC](core-api-ref-remote-procedure-calls-network#section-addnode) will have their information displayed.\n* [GetNetTotals](/docs/core-api-ref-remote-procedure-calls-network#section-getnettotals): returns information about network traffic, including bytes in, bytes out, and the current time.\n* [GetNetworkInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo): returns information about the node's connection to the network.\n\n# ListBanned\n\n*Added in Bitcoin Core 0.12.0*\n\nThe [`listbanned` RPC](core-api-ref-remote-procedure-calls-network#section-listbanned) lists all banned IPs/Subnets.\n\n*Parameters: none*\n\n*Result---information about each banned IP/Subnet*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | An array of objects each describing one entry. If there are no entries in the ban list, the array will be empty\n\u2192<br>Node | object | Optional<br>(0 or more) | A ban list entry\n\u2192 \u2192<br>`address` | string | Required<br>(exactly 1) | The IP/Subnet of the entry\n\u2192 \u2192<br>`banned_until` | number<br>(int) | Required<br>(exactly 1) | The Unix epoch time when the entry was added to the ban list\n\u2192 \u2192<br>`ban_created` | number<br>(int) | Required<br>(exactly 1) | The Unix epoch time until the IP/Subnet is banned\n\u2192 \u2192<br>`ban_reason` | string | Required<br>(exactly 1) | Set to one of the following reasons:<br>\u2022 `node misbehaving` if the node was banned by the client because of DoS violations<br>\u2022 `manually added` if the node was manually banned by the user\n\n*Examples from Dash Core 0.12.2*\n\nThe default (`false`):\n\n``` bash\ndash-cli listbanned\n```\n\nResult:\n\n``` json\n[\n  {\n    \"address\": \"192.0.2.201/32\",\n    \"banned_until\": 1507906175,\n    \"ban_created\": 1507819775,\n    \"ban_reason\": \"node misbehaving\"\n  },\n  {\n    \"address\": \"192.0.2.101/32\",\n    \"banned_until\": 1507906199,\n    \"ban_created\": 1507819799,\n    \"ban_reason\": \"manually added\"\n  }\n]\n```\n\n*See also*\n\n* [SetBan](/docs/core-api-ref-remote-procedure-calls-network#section-setban): attempts add or remove a IP/Subnet from the banned list.\n* [ClearBanned](/docs/core-api-ref-remote-procedure-calls-network#section-clearbanned): clears list of banned nodes.\n\n# Ping\n\nThe [`ping` RPC](core-api-ref-remote-procedure-calls-network#section-ping) sends a P2P ping message to all connected nodes to measure ping time. Results are provided by the [`getpeerinfo` RPC](core-api-ref-remote-procedure-calls-network#section-getpeerinfo) pingtime and pingwait fields as decimal seconds. The P2P [`ping` message](core-ref-p2p-network-control-messages#section-ping) is handled in a queue with all other commands, so it measures processing backlog, not just network ping.\n\n*Parameters: none*\n\n*Result---`null`*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | null | Required | Always JSON `null`\n\n*Example from Dash Core 0.12.2*\n\n``` bash\ndash-cli -testnet ping\n```\n\n(Success: no result printed.)\n\nGet the results using the [`getpeerinfo` RPC](core-api-ref-remote-procedure-calls-network#section-getpeerinfo):\n\n``` bash\ndash-cli -testnet getpeerinfo | grep ping\n```\n\nResults:\n\n``` json\n        \"pingtime\" : 0.11790800,\n        \"pingtime\" : 0.22673400,\n        \"pingtime\" : 0.16451900,\n        \"pingtime\" : 0.12465200,\n        \"pingtime\" : 0.13267900,\n        \"pingtime\" : 0.23983300,\n        \"pingtime\" : 0.16764700,\n        \"pingtime\" : 0.11337300,\n```\n\n*See also*\n\n* [GetPeerInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo): returns data about each connected network node.\n* [P2P Ping Message](core-ref-p2p-network-control-messages#section-ping)\n\n# SetBan\n\n*Added in Bitcoin Core 0.12.0*\n\nThe [`setban` RPC](core-api-ref-remote-procedure-calls-network#section-setban) attempts add or remove a IP/Subnet from the banned list.\n\n*Parameter #1---IP/Subnet of the node*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nIP(/Netmask) | string | Required<br>(exactly 1) | The node to add or remove as a string in the form of `<IP address>`.  The IP address may be a hostname resolvable through DNS, an IPv4 address, an IPv4-as-IPv6 address, or an IPv6 address\n\n*Parameter #2---whether to add or remove the node*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nCommand | string | Required<br>(exactly 1) | What to do with the IP/Subnet address above.  Options are:<br>\u2022 `add` to add a node to the addnode list<br>\u2022 `remove` to remove a node from the list.  If currently connected, this will disconnect immediately\n\n*Parameter #3---time how long the ip is banned*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nBantime | numeric<br>(int) | Optional<br>(0 or 1) | Time in seconds how long (or until when if `absolute` is set) the entry is banned. The default is 24h which can also be overwritten by the -bantime startup argument\n\n*Parameter #4---whether a relative or absolute timestamp*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nAbsolute | bool | Optional<br>(0 or 1) | If set, the bantime must be a absolute timestamp in seconds since epoch (Jan 1 1970 GMT)\n\n*Result---`null` on success*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | null | Required<br>(exactly 1) | Always JSON `null`\n\n*Example from Dash Core 0.12.2*\n\nBan the following node.\n\n``` bash\ndash-cli -testnet setban 192.0.2.113 add 2592000\n```\n\nResult (no output from `dash-cli` because result is set to `null`).\n\n*See also*\n\n* [ListBanned](/docs/core-api-ref-remote-procedure-calls-network#section-listbanned): lists all banned IPs/Subnets.\n* [ClearBanned](/docs/core-api-ref-remote-procedure-calls-network#section-clearbanned): clears list of banned nodes.\n\n# SetNetworkActive\n\n*Added in Bitcoin Core 0.14.0*\n\nThe [`setnetworkactive` RPC](core-api-ref-remote-procedure-calls-network#section-setnetworkactive) disables/enables all P2P network activity.\n\n*Parameter #1---whether to disable or enable all P2P network activity*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nActivate | bool | Required<br>(exactly 1) | Set to `true` to enable all P2P network activity. Set to `false` to disable all P2P network activity\n\n*Result---`null` or error on failure*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | null | Required<br>(exactly 1) | JSON `null`.  The JSON-RPC error field will be set only if you entered an invalid parameter\n\n*Example from Dash Core 0.12.2*\n\n``` bash\ndash-cli setnetworkactive true\n```\n\nResult (no output from `dash-cli` because result is set to `null`).\n\n*See also*\n\n* [GetNetworkInfo](/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo): returns information about the node's connection to the network.",
 "excerpt": "",
 "slug": "core-api-ref-remote-procedure-calls-network",
 "type": "basic",
 "metadata": {
  "description": "",
  "title": "",
  "image": []
 },
 "title": "Network RPCs",
 "id": "5db1fe83f2d77f00687251e4",
 "isApi": false,
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-add-node\"></div>AddNode<a class=\"fa fa-anchor\" href=\"#section-add-node\"></a></h1>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a> attempts to add or remove a node from the addnode list, or to try a connection to a node once.</p>\n<p><em>Parameter #1---hostname/IP address and port of node to add or remove</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>node</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The node to add as a string in the form of <code>&lt;IP address&gt;:&lt;port&gt;</code>.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---whether to add or remove the node, or to try only once to connect</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>command</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>What to do with the IP address above.  Options are:<br>\u2022 <code>add</code> to add a node to the addnode list.  Up to 8 nodes can be added additional to the default 8 nodes. Not limited by <code>-maxconnections</code><br>\u2022 <code>remove</code> to remove a node from the list.  If currently connected, this will disconnect immediately<br>\u2022 <code>onetry</code> to immediately attempt connection to the node even if the outgoing connection slots are full; this will only attempt the connection once</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---<code>null</code> plus error on failed remove</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>null</td>\n<td>Required<br>(exactly 1)</td>\n<td>Always JSON <code>null</code> whether the node was added, removed, tried-and-connected, or tried-and-not-connected.  The JSON-RPC error field will be set only if you try adding a node that was already added or removing a node that is not on the addnodes list</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Try connecting to the following node.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> addnode <span class=\"cm-number\">192</span>.0.2.113:19999 onetry</span>\n</code></pre>\n<p>Result (no output from <code>dash-cli</code> because result is set to <code>null</code>).</p>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo\">GetAddedNodeInfo</a>: returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a> will have their information displayed.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-clear-banned\"></div>ClearBanned<a class=\"fa fa-anchor\" href=\"#section-clear-banned\"></a></h1>\n<p><em>Added in Bitcoin Core 0.12.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-clearbanned\"><code>clearbanned</code> RPC</a> clears list of banned nodes.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---<code>null</code> on success</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>null</td>\n<td>Required<br>(exactly 1)</td>\n<td>JSON <code>null</code> when the list was cleared</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Clears the ban list.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli clearbanned</span>\n</code></pre>\n<p>Result (no output from <code>dash-cli</code> because result is set to <code>null</code>).</p>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-listbanned\">ListBanned</a>: lists all banned IPs/Subnets.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-setban\">SetBan</a>: attempts add or remove a IP/Subnet from the banned list.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-disconnect-node\"></div>DisconnectNode<a class=\"fa fa-anchor\" href=\"#section-disconnect-node\"></a></h1>\n<p><em>Added in Bitcoin Core 0.12.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-disconnectnode\"><code>disconnectnode</code> RPC</a> immediately disconnects from a specified node.</p>\n<p><em>Parameter #1---hostname/IP address and port of node to disconnect</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>address</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The node you want to disconnect from as a string in the form of <code>&lt;IP address&gt;:&lt;port&gt;</code>.<br><br><em>Updated in Bitcoin Core 0.14.1</em></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---nodeid</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nodeid</td>\n<td>number</td>\n<td>Optional</td>\n<td>The node ID (see <code>getpeerinfo</code> for node IDs)</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---<code>null</code> on success or error on failed disconnect</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>null</td>\n<td>Required<br>(exactly 1)</td>\n<td>JSON <code>null</code> when the node was disconnected</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.15.0</em></p>\n<p>Disconnects following node by address.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> disconnectnode <span class=\"cm-number\">192</span>.0.2.113:19999</span>\n</code></pre>\n<p>Result (no output from <code>dash-cli</code> because result is set to <code>null</code>).</p>\n<p>Disconnects following node by id.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> disconnectnode <span class=\"cm-string\">\"\"</span> <span class=\"cm-number\">3</span></span>\n</code></pre>\n<p>Result (no output from <code>dash-cli</code> because result is set to <code>null</code>).</p>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-addnode\">AddNode</a>: attempts to add or remove a node from the addnode list, or to try a connection to a node once.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo\">GetAddedNodeInfo</a>: returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a> will have their information displayed.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-added-node-info\"></div>GetAddedNodeInfo<a class=\"fa fa-anchor\" href=\"#section-get-added-node-info\"></a></h1>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo\"><code>getaddednodeinfo</code> RPC</a> returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a> will have their information displayed.</p>\n<p>Prior to Dash Core 0.12.3, this dummy parameter was required for historical purposes but not used:</p>\n<p><em>DEPRECATED Parameter #1---whether to display connection information</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>Dummy</em></td>\n<td><em>bool</em></td>\n<td><em>Required<br>(exactly 1)</em></td>\n<td><em>Removed in Dash Core 0.12.3</em></td>\n</tr>\n</tbody>\n</table></div>\n<p>Beginning with Dash Core 0.12.3, this is the single (optional) parameter:</p>\n<p><em>Parameter #1---what node to display information about</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>node</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The node to get information about in the same <code>&lt;IP address&gt;:&lt;port&gt;</code> format as the <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a>.  If this parameter is not provided, information about all added nodes will be returned</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---a list of added nodes</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array containing objects describing each added node.  If no added nodes are present, the array will be empty.  Nodes added with <code>onetry</code> will not be returned</td>\n</tr>\n<tr>\n<td>\u2192<br>Added Node</td>\n<td>object</td>\n<td>Optional<br>(0 or more)</td>\n<td>An object containing details about a single added node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>addednode</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>An added node in the same <code>&lt;IP address&gt;:&lt;port&gt;</code> format as used in the <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a>.</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>connected</code></td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>This will be set to <code>true</code> if the node is currently connected and <code>false</code> if it is not</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>addresses</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>This will be an array of addresses belonging to the added node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br>Address</td>\n<td>object</td>\n<td>Optional<br>(0 or more)</td>\n<td>An object describing one of this node&#39;s addresses</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br><code>address</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>An IP address and port number of the node.  If the node was added using a DNS address, this will be the resolved IP address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br><code>connected</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>Whether or not the local node is connected to this addnode using this IP address.  Valid values are:<br>\u2022 <code>false</code> for not connected<br>\u2022 <code>inbound</code> if the addnode connected to us<br>\u2022 <code>outbound</code> if we connected to the addnode</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.3</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli getaddednodeinfo</span>\n</code></pre>\n<p>Result (real hostname and IP address replaced with <a href=\"http://tools.ietf.org/html/rfc5737\">RFC5737</a> reserved address):</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n  {\n    <span class=\"cm-property\">\"addednode\"</span>: <span class=\"cm-string\">\"192.0.2.113:19999\"</span>,\n    <span class=\"cm-property\">\"connected\"</span>: <span class=\"cm-atom\">true</span>,\n    <span class=\"cm-property\">\"addresses\"</span>: [\n      {\n        <span class=\"cm-property\">\"address\"</span>: <span class=\"cm-string\">\"192.0.2.113:19999\"</span>,\n        <span class=\"cm-property\">\"connected\"</span>: <span class=\"cm-string\">\"outbound\"</span>\n      }\n    ]\n  }\n]</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-addnode\">AddNode</a>: attempts to add or remove a node from the addnode list, or to try a connection to a node once.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo\">GetPeerInfo</a>: returns data about each connected network node.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-connection-count\"></div>GetConnectionCount<a class=\"fa fa-anchor\" href=\"#section-get-connection-count\"></a></h1>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-getconnectioncount\"><code>getconnectioncount</code> RPC</a> returns the number of connections to other nodes.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---the number of connections to other nodes</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The total number of connections to other nodes (both inbound and outbound)</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> getconnectioncount</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-text\">14\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getnettotals\">GetNetTotals</a>: returns information about network traffic, including bytes in, bytes out, and the current time.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo\">GetPeerInfo</a>: returns data about each connected network node.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo\">GetNetworkInfo</a>: returns information about the node&#39;s connection to the network.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-net-totals\"></div>GetNetTotals<a class=\"fa fa-anchor\" href=\"#section-get-net-totals\"></a></h1>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-getnettotals\"><code>getnettotals</code> RPC</a> returns information about network traffic, including bytes in, bytes out, and the current time.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---the current bytes in, bytes out, and current time</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An object containing information about the node&#39;s network totals</td>\n</tr>\n<tr>\n<td>\u2192<br><code>totalbytesrecv</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The total number of bytes received since the node was last restarted</td>\n</tr>\n<tr>\n<td>\u2192<br><code>totalbytessent</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The total number of bytes sent since the node was last restarted</td>\n</tr>\n<tr>\n<td>\u2192<br><code>timemillis</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Unix epoch time in milliseconds according to the operating system&#39;s clock (not the node adjusted time)</td>\n</tr>\n<tr>\n<td>\u2192<br><code>uploadtarget</code></td>\n<td>string : <br>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>The upload target information</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>timeframe</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Length of the measuring timeframe in seconds (currently set to <code>24</code> hours)</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>target</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The maximum allowed outbound traffic in bytes (default is <code>0</code>).  Can be changed with <code>-maxuploadtarget</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>target_reached</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Indicates if the target is reached.  If the target is reached the node won&#39;t serve SPV and historical block requests anymore  </td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>serve_historical_blocks</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Indicates if historical blocks are served  </td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>bytes_left_in_cycle</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Amount of bytes left in current time cycle.  <code>0</code> is displayed if no upload target is set  </td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>time_left_in_cycle</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Seconds left in current time cycle.  <code>0</code> is displayed if no upload target is set    </td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli getnettotals</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"totalbytesrecv\"</span>: <span class=\"cm-number\">4661588</span>,\n  <span class=\"cm-property\">\"totalbytessent\"</span>: <span class=\"cm-number\">2899423</span>,\n  <span class=\"cm-property\">\"timemillis\"</span>: <span class=\"cm-number\">1507815162756</span>,\n  <span class=\"cm-property\">\"uploadtarget\"</span>: {\n    <span class=\"cm-property\">\"timeframe\"</span>: <span class=\"cm-number\">86400</span>,\n    <span class=\"cm-property\">\"target\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"target_reached\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"serve_historical_blocks\"</span>: <span class=\"cm-atom\">true</span>,\n    <span class=\"cm-property\">\"bytes_left_in_cycle\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"time_left_in_cycle\"</span>: <span class=\"cm-number\">0</span>\n  }\n}</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo\">GetNetworkInfo</a>: returns information about the node&#39;s connection to the network.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo\">GetPeerInfo</a>: returns data about each connected network node.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-network-info\"></div>GetNetworkInfo<a class=\"fa fa-anchor\" href=\"#section-get-network-info\"></a></h1>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-getnetworkinfo\"><code>getnetworkinfo</code> RPC</a> returns information about the node&#39;s connection to the network.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---information about the node&#39;s connection to the network</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>Information about this node&#39;s connection to the network</td>\n</tr>\n<tr>\n<td>\u2192<br><code>version</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>This node&#39;s version of Dash Core in its internal integer format.  For example, Dash Core 0.12.2 has the integer version number 120200</td>\n</tr>\n<tr>\n<td>\u2192<br><code>subversion</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The user agent this node sends in its <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192<br><code>protocolversion</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The protocol version number used by this node.  See the <a href=\"core-ref-p2p-network-protocol-versions\">protocol versions section</a> for more information</td>\n</tr>\n<tr>\n<td>\u2192<br><code>localservices</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The services supported by this node as advertised in its <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192<br><code>localrelay</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Bitcoin Core 0.13.0</em><br><br>The services supported by this node as advertised in its <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192<br><code>timeoffset</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The offset of the node&#39;s clock from the computer&#39;s clock (both in UTC) in seconds.  The offset may be up to 4200 seconds (70 minutes)</td>\n</tr>\n<tr>\n<td>\u2192<br><code>networkactive</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if P2P networking is enabled.  Set to <code>false</code> if P2P networking is disabled. Enabling/disabling done via <a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-setnetworkactive\">SetNetworkActive</a></td>\n</tr>\n<tr>\n<td>\u2192<br><code>connections</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The total number of open connections (both outgoing and incoming) between this node and other nodes</td>\n</tr>\n<tr>\n<td>\u2192<br><code>networks</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array with three objects: one describing the IPv4 connection, one describing the IPv6 connection, and one describing the Tor hidden service (onion) connection</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br>Network</td>\n<td>object</td>\n<td>Optional<br>(0 to 3)</td>\n<td>An object describing a network.  If the network is unroutable, it will not be returned</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>name</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The name of the network.  Either <code>ipv4</code>, <code>ipv6</code>, or <code>onion</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>limited</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if only connections to this network are allowed according to the <code>-onlynet</code> Dash Core command-line/configuration-file parameter.  Otherwise set to <code>false</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>reachable</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if connections can be made to or from this network.  Otherwise set to <code>false</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>proxy</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hostname and port of any proxy being used for this network.  If a proxy is not in use, an empty string</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>proxy_randomize_credentials</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Bitcoin Core 0.11.0</em><br><br>Set to <code>true</code> if randomized credentials are set for this proxy. Otherwise set to <code>false</code></td>\n</tr>\n<tr>\n<td>\u2192<br><code>relayfee</code></td>\n<td>number (DASH)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The minimum relay fee per kilobyte for transactions in order for this node to accept it into its memory pool</td>\n</tr>\n<tr>\n<td>\u2192<br><code>incrementalfee</code></td>\n<td>number (DASH)</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Dash Core 0.12.3</em><br><br>The minimum fee increment for mempool limiting or BIP 125 replacement in DASH/kB</td>\n</tr>\n<tr>\n<td>\u2192<br><code>localaddresses</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects each describing the local addresses this node believes it listens on</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br>Address</td>\n<td>object</td>\n<td>Optional<br>(0 or more)</td>\n<td>An object describing a particular address this node believes it listens on</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>address</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>An IP address or .onion address this node believes it listens on.  This may be manually configured, auto detected, or based on <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> messages</a> this node received from its peers</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>port</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The port number this node believes it listens on for the associated <code>address</code>.  This may be manually configured, auto detected, or based on <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> messages</a> this node received from its peers</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>score</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of incoming connections during the uptime of this node that have used this <code>address</code> in their <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192<br><code>warnings</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Bitcoin Core 0.11.0</em><br><br>A plain-text description of any network warnings. If there are no warnings, an empty string will be returned.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.3</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli getnetworkinfo</span>\n</code></pre>\n<p>Result (actual addresses have been replaced with <a href=\"http://tools.ietf.org/html/rfc5737\">RFC5737</a> reserved addresses):</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">120300</span>,\n  <span class=\"cm-property\">\"subversion\"</span>: <span class=\"cm-string\">\"&#47;Dash Core:0.12.3&#47;\"</span>,\n  <span class=\"cm-property\">\"protocolversion\"</span>: <span class=\"cm-number\">70208</span>,\n  <span class=\"cm-property\">\"localservices\"</span>: <span class=\"cm-string\">\"0000000000000005\"</span>,\n  <span class=\"cm-property\">\"localrelay\"</span>: <span class=\"cm-atom\">true</span>,\n  <span class=\"cm-property\">\"timeoffset\"</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"networkactive\"</span>: <span class=\"cm-atom\">true</span>,\n  <span class=\"cm-property\">\"connections\"</span>: <span class=\"cm-number\">9</span>,\n  <span class=\"cm-property\">\"networks\"</span>: [\n    {\n      <span class=\"cm-property\">\"name\"</span>: <span class=\"cm-string\">\"ipv4\"</span>,\n      <span class=\"cm-property\">\"limited\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"reachable\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"proxy\"</span>: <span class=\"cm-string\">\"\"</span>,\n      <span class=\"cm-property\">\"proxy_randomize_credentials\"</span>: <span class=\"cm-atom\">false</span>\n    },\n    {\n      <span class=\"cm-property\">\"name\"</span>: <span class=\"cm-string\">\"ipv6\"</span>,\n      <span class=\"cm-property\">\"limited\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"reachable\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"proxy\"</span>: <span class=\"cm-string\">\"\"</span>,\n      <span class=\"cm-property\">\"proxy_randomize_credentials\"</span>: <span class=\"cm-atom\">false</span>\n    },\n    {\n      <span class=\"cm-property\">\"name\"</span>: <span class=\"cm-string\">\"onion\"</span>,\n      <span class=\"cm-property\">\"limited\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"reachable\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"proxy\"</span>: <span class=\"cm-string\">\"\"</span>,\n      <span class=\"cm-property\">\"proxy_randomize_credentials\"</span>: <span class=\"cm-atom\">false</span>\n    }\n  ],\n  <span class=\"cm-property\">\"relayfee\"</span>: <span class=\"cm-number\">0.00001000</span>,\n  <span class=\"cm-property\">\"incrementalfee\"</span>: <span class=\"cm-number\">0.00001000</span>,\n  <span class=\"cm-property\">\"localaddresses\"</span>: [\n    {\n      <span class=\"cm-property\">\"address\"</span>: <span class=\"cm-string\">\"192.0.2.113\"</span>,\n      <span class=\"cm-property\">\"port\"</span>: <span class=\"cm-number\">19999</span>,\n      <span class=\"cm-property\">\"score\"</span>: <span class=\"cm-number\">4</span>\n    }\n  ],\n  <span class=\"cm-property\">\"warnings\"</span>: <span class=\"cm-string\">\"\"</span>\n}</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo\">GetPeerInfo</a>: returns data about each connected network node.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getnettotals\">GetNetTotals</a>: returns information about network traffic, including bytes in, bytes out, and the current time.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-setnetworkactive\">SetNetworkActive</a>: disables/enables all P2P network activity.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-peer-info\"></div>GetPeerInfo<a class=\"fa fa-anchor\" href=\"#section-get-peer-info\"></a></h1>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-getpeerinfo\"><code>getpeerinfo</code> RPC</a> returns data about each connected network node.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---information about each currently-connected network node</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects each describing one connected node.  If there are no connections, the array will be empty</td>\n</tr>\n<tr>\n<td>\u2192<br>Node</td>\n<td>object</td>\n<td>Optional<br>(0 or more)</td>\n<td>An object describing a particular connected node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>id</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The node&#39;s index number in the local node address database</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>addr</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The IP address and port number used for the connection to the remote node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>addrlocal</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Our IP address and port number according to the remote node.  May be incorrect due to error or lying.  Most SPV nodes set this to <code>127.0.0.1:9999</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>addrbind</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Bind address of the connection to the peer</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>services</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The services advertised by the remote node in its <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastsend</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Unix epoch time when we last successfully sent data to the TCP socket for this node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastrecv</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Unix epoch time when we last received data from this node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>bytessent</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The total number of bytes we&#39;ve sent to this node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>bytesrecv</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The total number of bytes we&#39;ve received from this node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>conntime</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Unix epoch time when we connected to this node</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>timeoffset</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Bitcoin Core 0.12.0</em><br><br>The time offset in seconds</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>pingtime</code></td>\n<td>number (real)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of seconds this node took to respond to our last P2P <a href=\"core-ref-p2p-network-control-messages#section-ping\"><code>ping</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>minping</code></td>\n<td>number (real)</td>\n<td>Optional<br>(0 or 1)</td>\n<td><em>Updated in Bitcoin Core 0.13.0</em><br><br>The minimum observed ping time (if any at all)</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>pingwait</code></td>\n<td>number (real)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The number of seconds we&#39;ve been waiting for this node to respond to a P2P <a href=\"core-ref-p2p-network-control-messages#section-ping\"><code>ping</code> message</a>.  Only shown if there&#39;s an outstanding <a href=\"core-ref-p2p-network-control-messages#section-ping\"><code>ping</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>version</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The protocol version number used by this node.  See the <a href=\"core-ref-p2p-network-protocol-versions\">protocol versions section</a> for more information</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>subver</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The user agent this node sends in its <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> message</a>.  This string will have been sanitized to prevent corrupting the JSON results.  May be an empty string</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>inbound</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if this node connected to us (inbound); set to <code>false</code> if we connected to this node (outbound)</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>addnode</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if this node was added via the <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a>.</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>startingheight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height of the remote node&#39;s block chain when it connected to us as reported in its <a href=\"core-ref-p2p-network-control-messages#section-version\"><code>version</code> message</a></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>banscore</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The ban score we&#39;ve assigned the node based on any misbehavior it&#39;s made.  By default, Dash Core disconnects when the ban score reaches <code>100</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>synced_headers</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The highest-height header we have in common with this node based the last P2P <a href=\"core-ref-p2p-network-data-messages#section-headers\"><code>headers</code> message</a> it sent us.  If a <a href=\"core-ref-p2p-network-data-messages#section-headers\"><code>headers</code> message</a> has not been received, this will be set to <code>-1</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>synced_blocks</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The highest-height block we have in common with this node based on P2P <a href=\"core-ref-p2p-network-data-messages#section-inv\"><code>inv</code> messages</a> this node sent us.  If no block <a href=\"core-ref-p2p-network-data-messages#section-inv\"><code>inv</code> messages</a> have been received from this node, this will be set to <code>-1</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>inflight</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of blocks which have been requested from this peer.  May be empty</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br>Blocks</td>\n<td>number (int)</td>\n<td>Optional<br>(0 or more)</td>\n<td>The height of a block being requested from the remote peer</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>whitelisted</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if the remote peer has been whitelisted; otherwise, set to <code>false</code>.  Whitelisted peers will not be banned if their ban score exceeds the maximum (100 by default).  By default, peers connecting from localhost are whitelisted</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>bytessent_per_msg</code></td>\n<td>string : <br>object</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Bitcoin Core 0.13.0</em><br><br>Information about total sent bytes aggregated by message type</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br>Message Type</td>\n<td>number (int)</td>\n<td>Required<br>(1 or more)</td>\n<td>Total sent bytes aggregated by message type. One field for every used message type</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>bytesrecv_per_msg</code></td>\n<td>string : <br>object</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Bitcoin Core 0.13.0</em><br><br>Information about total received bytes aggregated by message type</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br>Message Type</td>\n<td>number (int)</td>\n<td>Required<br>(1 or more)</td>\n<td>Total received bytes aggregated by message type. One field for every used message type</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli getpeerinfo</span>\n</code></pre>\n<p>Result (edited to show only a single entry, with IP addresses changed to<br><a href=\"http://tools.ietf.org/html/rfc5737\">RFC5737</a> reserved IP addresses):</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n  {\n    <span class=\"cm-property\">\"id\"</span>: <span class=\"cm-number\">3</span>,\n    <span class=\"cm-property\">\"addr\"</span>: <span class=\"cm-string\">\"192.0.2.113:19999\"</span>,\n    <span class=\"cm-property\">\"addrlocal\"</span>: <span class=\"cm-string\">\"127.0.0.1:56332\"</span>,\n    <span class=\"cm-property\">\"addrbind\"</span>: <span class=\"cm-string\">\"192.168.10.111:56332\"</span>,\n    <span class=\"cm-property\">\"services\"</span>: <span class=\"cm-string\">\"0000000000000005\"</span>,\n    <span class=\"cm-property\">\"relaytxes\"</span>: <span class=\"cm-atom\">true</span>,\n    <span class=\"cm-property\">\"lastsend\"</span>: <span class=\"cm-number\">1507818327</span>,\n    <span class=\"cm-property\">\"lastrecv\"</span>: <span class=\"cm-number\">1507818327</span>,\n    <span class=\"cm-property\">\"bytessent\"</span>: <span class=\"cm-number\">844135</span>,\n    <span class=\"cm-property\">\"bytesrecv\"</span>: <span class=\"cm-number\">887651</span>,\n    <span class=\"cm-property\">\"conntime\"</span>: <span class=\"cm-number\">1507808575</span>,\n    <span class=\"cm-property\">\"timeoffset\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"pingtime\"</span>: <span class=\"cm-number\">0.113646</span>,\n    <span class=\"cm-property\">\"minping\"</span>: <span class=\"cm-number\">0.106826</span>,\n    <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">70215</span>,\n    <span class=\"cm-property\">\"subver\"</span>: <span class=\"cm-string\">\"&#47;Dash Core:0.14.0.3&#47;\"</span>,\n    <span class=\"cm-property\">\"inbound\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"addnode\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"startingheight\"</span>: <span class=\"cm-number\">159292</span>,\n    <span class=\"cm-property\">\"banscore\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"synced_headers\"</span>: <span class=\"cm-number\">159350</span>,\n    <span class=\"cm-property\">\"synced_blocks\"</span>: <span class=\"cm-number\">159350</span>,\n    <span class=\"cm-property\">\"inflight\"</span>: [\n    ],\n    <span class=\"cm-property\">\"whitelisted\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"bytessent_per_msg\"</span>: {\n      <span class=\"cm-property\">\"addr\"</span>: <span class=\"cm-number\">55</span>,\n      <span class=\"cm-property\">\"dsq\"</span>: <span class=\"cm-number\">69530</span>,\n      <span class=\"cm-property\">\"getaddr\"</span>: <span class=\"cm-number\">24</span>,\n      <span class=\"cm-property\">\"getdata\"</span>: <span class=\"cm-number\">9224</span>,\n      <span class=\"cm-property\">\"getheaders\"</span>: <span class=\"cm-number\">989</span>,\n      <span class=\"cm-property\">\"getsporks\"</span>: <span class=\"cm-number\">24</span>,\n      <span class=\"cm-property\">\"govsync\"</span>: <span class=\"cm-number\">66</span>,\n      <span class=\"cm-property\">\"headers\"</span>: <span class=\"cm-number\">6148</span>,\n      <span class=\"cm-property\">\"inv\"</span>: <span class=\"cm-number\">837</span>,\n      <span class=\"cm-property\">\"ping\"</span>: <span class=\"cm-number\">1856</span>,\n      <span class=\"cm-property\">\"pong\"</span>: <span class=\"cm-number\">1856</span>,\n      <span class=\"cm-property\">\"qsendrecsigs\"</span>: <span class=\"cm-number\">25</span>,\n      <span class=\"cm-property\">\"sendcmpct\"</span>: <span class=\"cm-number\">33</span>,\n      <span class=\"cm-property\">\"senddsq\"</span>: <span class=\"cm-number\">25</span>,\n      <span class=\"cm-property\">\"sendheaders\"</span>: <span class=\"cm-number\">24</span>,\n      <span class=\"cm-property\">\"tx\"</span>: <span class=\"cm-number\">5808</span>,\n      <span class=\"cm-property\">\"verack\"</span>: <span class=\"cm-number\">24</span>,\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">160</span>\n    },\n    <span class=\"cm-property\">\"bytesrecv_per_msg\"</span>: {\n      <span class=\"cm-property\">\"*other*\"</span>: <span class=\"cm-number\">25</span>,\n      <span class=\"cm-property\">\"addr\"</span>: <span class=\"cm-number\">17362</span>,\n      <span class=\"cm-property\">\"clsig\"</span>: <span class=\"cm-number\">3276</span>,\n      <span class=\"cm-property\">\"getdata\"</span>: <span class=\"cm-number\">122</span>,\n      <span class=\"cm-property\">\"getheaders\"</span>: <span class=\"cm-number\">989</span>,\n      <span class=\"cm-property\">\"headers\"</span>: <span class=\"cm-number\">5300</span>,\n      <span class=\"cm-property\">\"inv\"</span>: <span class=\"cm-number\">24611</span>,\n      <span class=\"cm-property\">\"islock\"</span>: <span class=\"cm-number\">3249</span>,\n      <span class=\"cm-property\">\"mnauth\"</span>: <span class=\"cm-number\">152</span>,\n      <span class=\"cm-property\">\"ping\"</span>: <span class=\"cm-number\">1856</span>,\n      <span class=\"cm-property\">\"pong\"</span>: <span class=\"cm-number\">1856</span>,\n      <span class=\"cm-property\">\"qsigrec\"</span>: <span class=\"cm-number\">16492</span>,\n      <span class=\"cm-property\">\"sendcmpct\"</span>: <span class=\"cm-number\">33</span>,\n      <span class=\"cm-property\">\"senddsq\"</span>: <span class=\"cm-number\">25</span>,\n      <span class=\"cm-property\">\"sendheaders\"</span>: <span class=\"cm-number\">24</span>,\n      <span class=\"cm-property\">\"spork\"</span>: <span class=\"cm-number\">2090</span>,\n      <span class=\"cm-property\">\"ssc\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"tx\"</span>: <span class=\"cm-number\">11523</span>,\n      <span class=\"cm-property\">\"verack\"</span>: <span class=\"cm-number\">24</span>,\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">162</span>\n    }\n  }\n]</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getaddednodeinfo\">GetAddedNodeInfo</a>: returns information about the given added node, or all added nodes (except onetry nodes). Only nodes which have been manually added using the <a href=\"core-api-ref-remote-procedure-calls-network#section-addnode\"><code>addnode</code> RPC</a> will have their information displayed.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getnettotals\">GetNetTotals</a>: returns information about network traffic, including bytes in, bytes out, and the current time.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo\">GetNetworkInfo</a>: returns information about the node&#39;s connection to the network.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-list-banned\"></div>ListBanned<a class=\"fa fa-anchor\" href=\"#section-list-banned\"></a></h1>\n<p><em>Added in Bitcoin Core 0.12.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-listbanned\"><code>listbanned</code> RPC</a> lists all banned IPs/Subnets.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---information about each banned IP/Subnet</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects each describing one entry. If there are no entries in the ban list, the array will be empty</td>\n</tr>\n<tr>\n<td>\u2192<br>Node</td>\n<td>object</td>\n<td>Optional<br>(0 or more)</td>\n<td>A ban list entry</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>address</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The IP/Subnet of the entry</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>banned_until</code></td>\n<td>number<br>(int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Unix epoch time when the entry was added to the ban list</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ban_created</code></td>\n<td>number<br>(int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Unix epoch time until the IP/Subnet is banned</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ban_reason</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to one of the following reasons:<br>\u2022 <code>node misbehaving</code> if the node was banned by the client because of DoS violations<br>\u2022 <code>manually added</code> if the node was manually banned by the user</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Examples from Dash Core 0.12.2</em></p>\n<p>The default (<code>false</code>):</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli listbanned</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n  {\n    <span class=\"cm-property\">\"address\"</span>: <span class=\"cm-string\">\"192.0.2.201&#47;32\"</span>,\n    <span class=\"cm-property\">\"banned_until\"</span>: <span class=\"cm-number\">1507906175</span>,\n    <span class=\"cm-property\">\"ban_created\"</span>: <span class=\"cm-number\">1507819775</span>,\n    <span class=\"cm-property\">\"ban_reason\"</span>: <span class=\"cm-string\">\"node misbehaving\"</span>\n  },\n  {\n    <span class=\"cm-property\">\"address\"</span>: <span class=\"cm-string\">\"192.0.2.101&#47;32\"</span>,\n    <span class=\"cm-property\">\"banned_until\"</span>: <span class=\"cm-number\">1507906199</span>,\n    <span class=\"cm-property\">\"ban_created\"</span>: <span class=\"cm-number\">1507819799</span>,\n    <span class=\"cm-property\">\"ban_reason\"</span>: <span class=\"cm-string\">\"manually added\"</span>\n  }\n]</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-setban\">SetBan</a>: attempts add or remove a IP/Subnet from the banned list.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-clearbanned\">ClearBanned</a>: clears list of banned nodes.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-ping\"></div>Ping<a class=\"fa fa-anchor\" href=\"#section-ping\"></a></h1>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-ping\"><code>ping</code> RPC</a> sends a P2P ping message to all connected nodes to measure ping time. Results are provided by the <a href=\"core-api-ref-remote-procedure-calls-network#section-getpeerinfo\"><code>getpeerinfo</code> RPC</a> pingtime and pingwait fields as decimal seconds. The P2P <a href=\"core-ref-p2p-network-control-messages#section-ping\"><code>ping</code> message</a> is handled in a queue with all other commands, so it measures processing backlog, not just network ping.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---<code>null</code></em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>null</td>\n<td>Required</td>\n<td>Always JSON <code>null</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> <span class=\"cm-builtin\">ping</span></span>\n</code></pre>\n<p>(Success: no result printed.)</p>\n<p>Get the results using the <a href=\"core-api-ref-remote-procedure-calls-network#section-getpeerinfo\"><code>getpeerinfo</code> RPC</a>:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> getpeerinfo | <span class=\"cm-builtin\">grep</span> <span class=\"cm-builtin\">ping</span></span>\n</code></pre>\n<p>Results:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.11790800</span>,\n        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.22673400</span>,\n        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.16451900</span>,\n        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.12465200</span>,\n        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.13267900</span>,\n        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.23983300</span>,\n        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.16764700</span>,\n        <span class=\"cm-string\">\"pingtime\"</span> : <span class=\"cm-number\">0.11337300</span>,</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getpeerinfo\">GetPeerInfo</a>: returns data about each connected network node.</li><li ><a href=\"core-ref-p2p-network-control-messages#section-ping\">P2P Ping Message</a></li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-set-ban\"></div>SetBan<a class=\"fa fa-anchor\" href=\"#section-set-ban\"></a></h1>\n<p><em>Added in Bitcoin Core 0.12.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-setban\"><code>setban</code> RPC</a> attempts add or remove a IP/Subnet from the banned list.</p>\n<p><em>Parameter #1---IP/Subnet of the node</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IP(/Netmask)</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The node to add or remove as a string in the form of <code>&lt;IP address&gt;</code>.  The IP address may be a hostname resolvable through DNS, an IPv4 address, an IPv4-as-IPv6 address, or an IPv6 address</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---whether to add or remove the node</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Command</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>What to do with the IP/Subnet address above.  Options are:<br>\u2022 <code>add</code> to add a node to the addnode list<br>\u2022 <code>remove</code> to remove a node from the list.  If currently connected, this will disconnect immediately</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---time how long the ip is banned</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bantime</td>\n<td>numeric<br>(int)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Time in seconds how long (or until when if <code>absolute</code> is set) the entry is banned. The default is 24h which can also be overwritten by the -bantime startup argument</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---whether a relative or absolute timestamp</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Absolute</td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If set, the bantime must be a absolute timestamp in seconds since epoch (Jan 1 1970 GMT)</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---<code>null</code> on success</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>null</td>\n<td>Required<br>(exactly 1)</td>\n<td>Always JSON <code>null</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Ban the following node.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> setban <span class=\"cm-number\">192</span>.0.2.113 add <span class=\"cm-number\">2592000</span></span>\n</code></pre>\n<p>Result (no output from <code>dash-cli</code> because result is set to <code>null</code>).</p>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-listbanned\">ListBanned</a>: lists all banned IPs/Subnets.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-clearbanned\">ClearBanned</a>: clears list of banned nodes.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-set-network-active\"></div>SetNetworkActive<a class=\"fa fa-anchor\" href=\"#section-set-network-active\"></a></h1>\n<p><em>Added in Bitcoin Core 0.14.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-network#section-setnetworkactive\"><code>setnetworkactive</code> RPC</a> disables/enables all P2P network activity.</p>\n<p><em>Parameter #1---whether to disable or enable all P2P network activity</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Activate</td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> to enable all P2P network activity. Set to <code>false</code> to disable all P2P network activity</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---<code>null</code> or error on failure</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>null</td>\n<td>Required<br>(exactly 1)</td>\n<td>JSON <code>null</code>.  The JSON-RPC error field will be set only if you entered an invalid parameter</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli setnetworkactive <span class=\"cm-atom\">true</span></span>\n</code></pre>\n<p>Result (no output from <code>dash-cli</code> because result is set to <code>null</code>).</p>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-network#section-getnetworkinfo\">GetNetworkInfo</a>: returns information about the node&#39;s connection to the network.</li></ul>\n\n</div>"
}