{
 "_id": "5db72ae37bf0840067b40c28",
 "version": "5daf2e65f4109c0040fd51e5",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "5db72315f10c520072cce602",
 "category": "5db0a86967f978006336b1b5",
 "__v": 1,
 "updates": [],
 "updatedAt": "2019-11-13T17:44:37.642Z",
 "createdAt": "2019-10-28T17:52:35.418Z",
 "next": {
  "pages": [
   {
    "category": "Core Guides",
    "slug": "core-guide-transactions-signature-hash-types",
    "name": "Signature Hash Types",
    "icon": "file-text-o",
    "type": "doc"
   }
  ],
  "description": ""
 },
 "link_external": false,
 "link_url": "",
 "sync_unique": "",
 "hidden": false,
 "api": {
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "auth": "required",
  "params": [],
  "url": "",
  "method": "get"
 },
 "isReference": false,
 "order": 3,
 "body": "If you use anything besides a standard <<glossary:pubkey script>> in an <<glossary:output>>, <<glossary:peers>> and miners using the default Dash Core settings will neither accept, broadcast, nor mine your <<glossary:transaction>>. When you try to broadcast your transaction to a peer running the default settings, you will receive an error.\n\nIf you create a <<glossary:redeem script>>, hash it, and use the hash in a <<glossary:P2SH>> output, the network sees only the hash, so it will accept the output as valid no matter what the redeem script says. This allows payment to non-standard scripts, and as of Bitcoin Core 0.11, almost all valid redeem scripts can be spent. The exception is scripts that use unassigned [NOP opcodes](https://en.bitcoin.it/wiki/Script#Reserved_words); these opcodes are reserved for future soft forks and can only be relayed or mined by nodes that don't follow the standard mempool policy.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Note: standard transactions are designed to protect and help the network, not prevent you from making mistakes. It's easy to create standard transactions which make the duffs sent to them unspendable.\"\n}\n[/block]\nStandard transactions must also meet the following conditions:\n\n* The transaction must be finalized: either its locktime must be in the past (or less than or equal to the current block height), or all of its sequence numbers must be 0xffffffff.\n\n* The transaction must be smaller than 100,000 bytes. That's around 200 times larger than a typical single-input, single-output P2PKH transaction.\n\n* Each of the transaction's signature scripts must be smaller than 1,650 bytes. That's large enough to allow 15-of-15 multisig transactions in P2SH using compressed <<glossary:public keys>>.\n\n* Bare (non-P2SH) multisig transactions which require more than 3 public keys are currently non-standard.\n\n* The transaction's <<glossary:signature script>> must only push data to the script evaluation stack. It cannot push new opcodes, with the exception of opcodes which solely push data to the stack.\n\n* The transaction must not include any <<glossary:outputs>> which receive fewer than 1/3 as many <<glossary:duffs>> as it would take to spend it in a typical <<glossary:input>>. That's currently 5460 duffs for a P2PKH or P2SH output on a Dash Core node with the default relay fee. **Exception: standard null data outputs must receive zero duffs.**",
 "excerpt": "",
 "slug": "core-guide-transactions-non-standard-transactions",
 "type": "basic",
 "metadata": {
  "description": "",
  "title": "",
  "image": []
 },
 "title": "Non-Standard Transactions",
 "id": "5db72ae37bf0840067b40c28",
 "isApi": false,
 "body_html": "<div class=\"magic-block-textarea\"><p>If you use anything besides a standard &lt;&lt;glossary:pubkey script&gt;&gt; in an &lt;&lt;glossary:output&gt;&gt;, &lt;&lt;glossary:peers&gt;&gt; and miners using the default Dash Core settings will neither accept, broadcast, nor mine your &lt;&lt;glossary:transaction&gt;&gt;. When you try to broadcast your transaction to a peer running the default settings, you will receive an error.</p>\n<p>If you create a &lt;&lt;glossary:redeem script&gt;&gt;, hash it, and use the hash in a &lt;&lt;glossary:P2SH&gt;&gt; output, the network sees only the hash, so it will accept the output as valid no matter what the redeem script says. This allows payment to non-standard scripts, and as of Bitcoin Core 0.11, almost all valid redeem scripts can be spent. The exception is scripts that use unassigned <a href=\"https://en.bitcoin.it/wiki/Script#Reserved_words\">NOP opcodes</a>; these opcodes are reserved for future soft forks and can only be relayed or mined by nodes that don&#39;t follow the standard mempool policy.</p>\n\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Note: standard transactions are designed to protect and help the network, not prevent you from making mistakes. It&#39;s easy to create standard transactions which make the duffs sent to them unspendable.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>Standard transactions must also meet the following conditions:</p>\n<ul>\n<li ><p>The transaction must be finalized: either its locktime must be in the past (or less than or equal to the current block height), or all of its sequence numbers must be 0xffffffff.</p>\n</li><li ><p>The transaction must be smaller than 100,000 bytes. That&#39;s around 200 times larger than a typical single-input, single-output P2PKH transaction.</p>\n</li><li ><p>Each of the transaction&#39;s signature scripts must be smaller than 1,650 bytes. That&#39;s large enough to allow 15-of-15 multisig transactions in P2SH using compressed &lt;&lt;glossary:public keys&gt;&gt;.</p>\n</li><li ><p>Bare (non-P2SH) multisig transactions which require more than 3 public keys are currently non-standard.</p>\n</li><li ><p>The transaction&#39;s &lt;&lt;glossary:signature script&gt;&gt; must only push data to the script evaluation stack. It cannot push new opcodes, with the exception of opcodes which solely push data to the stack.</p>\n</li><li ><p>The transaction must not include any &lt;&lt;glossary:outputs&gt;&gt; which receive fewer than 1/3 as many &lt;&lt;glossary:duffs&gt;&gt; as it would take to spend it in a typical &lt;&lt;glossary:input&gt;&gt;. That&#39;s currently 5460 duffs for a P2PKH or P2SH output on a Dash Core node with the default relay fee. <strong>Exception: standard null data outputs must receive zero duffs.</strong></p>\n</li></ul>\n\n</div>"
}