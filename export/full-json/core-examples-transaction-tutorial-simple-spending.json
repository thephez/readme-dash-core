{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Simple Raw Transaction",
    "slug": "core-examples-transaction-tutorial-simple-raw-transaction",
    "category": "Core Examples"
   }
  ]
 },
 "title": "Simple Spending",
 "updates": [],
 "type": "basic",
 "slug": "core-examples-transaction-tutorial-simple-spending",
 "excerpt": "",
 "body": "Dash Core provides several RPCs which handle all the details of spending, including creating a <<glossary:change output>> and paying an appropriate <<glossary:transaction fee>>. Even advanced users should use these RPCs whenever possible to decrease the chance that <<glossary:duffs>> will be lost by mistake.\n\n# 1. Get new address\n\nGet a new Dash <<glossary:address>> and save it in the shell variable `$NEW_ADDRESS`.\n\n``` bash\n> dash-cli -regtest getnewaddress\nyLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\n\n> NEW_ADDRESS=yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\n```\n\n#2. Send to address\n\nSend 10 dash to the address using the [`sendtoaddress` RPC](core-api-ref-remote-procedure-calls-wallet#section-send-to-address).  The returned hex string is the transaction identifier (<<glossary:TXID>>).\n\nThe [`sendtoaddress` RPC](core-api-ref-remote-procedure-calls-wallet#section-send-to-address) automatically selects an <<glossary:unspent transaction output>> (UTXO) from which to spend the duffs. In this case, it withdrew the duffs from our only available UTXO, the <<glossary:coinbase transaction>> for <<glossary:block>> #1 which matured with the creation of block #101. To spend a specific UTXO, you could use the [`sendfrom` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#section-send-from) instead.\n\n``` bash\n> dash-cli -regtest sendtoaddress $NEW_ADDRESS 10.00\nc7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\n```\n\n# 3. List unspent outputs\n\n# 3a. Confirmed outputs only\n\nUse the [`listunspent` RPC](core-api-ref-remote-procedure-calls-wallet#section-list-unspent) to display the UTXOs belonging to this <<glossary:wallet>>. The list is empty because it defaults to only showing confirmed UTXOs and we just spent our only confirmed UTXO.\n\n``` bash\n> dash-cli -regtest listunspent\n[\n]\n```\n\n# 3b. All outputs\n\nRe-running the [`listunspent` RPC](core-api-ref-remote-procedure-calls-wallet#section-list-unspent) with the argument \"0\" to also display each <<glossary:unconfirmed transaction>> shows that we have two UTXOs, both with the same <<glossary:TXID>>. The first UTXO shown is a change output that `sendtoaddress` created using a new address from the key pool. The second UTXO shown is the spend to the address we provided. If we had spent those duffs to someone else, that second transaction would not be displayed in our list of UTXOs.\n\n``` bash\n> dash-cli -regtest listunspent 0\n```\n\n``` json\n[  \n   {  \n      \"txid\":\"c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\",\n      \"vout\":0,\n      \"address\":\"yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\",\n      \"account\":\"\",\n      \"scriptPubKey\":\"76a914056b1fe57914236149feb21dcbc6b86f4bdd9f4988ac\",\n      \"amount\":10.00000000,\n      \"confirmations\":0,\n      \"ps_rounds\":-2,\n      \"spendable\":true,\n      \"solvable\":true\n   },\n   {  \n      \"txid\":\"c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\",\n      \"vout\":1,\n      \"address\":\"yeP6Tw2uW4nWAFWRytw8TyshErTq59dUkN\",\n      \"scriptPubKey\":\"76a914c622e98a6ccf34d02620612f58f20a50061cf4b188ac\",\n      \"amount\":490.00000000,\n      \"confirmations\":0,\n      \"ps_rounds\":-2,\n      \"spendable\":true,\n      \"solvable\":true\n   }\n]\n```\n\n# 4. Mine block\n\nCreate a new block to confirm the transaction above (takes less than a second) and clear the shell variable.\n\n``` bash\n> dash-cli -regtest generate 1\n\n> unset NEW_ADDRESS\n```\n\n# Simple Spending Script\n\nShell script to run the previous example (available [here](https://gist.github.com/dash-docs/f40bddfc0844ec0d66d196720dc936f8#file-regtest_transaction_simple_spending_example-sh)):\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"#!/bin/bash\\n\\n# Set RPCUSER and RPCPWD to the username and password configure in dash.conf\\nRPCUSER=\\\"user\\\"\\nRPCPWD=\\\"pass\\\"\\nREGTEST_CMD=\\\"dash-cli -regtest -rpcuser=$RPCUSER -rpcpassword=$RPCPWD\\\"\\n\\n# SIMPLE SPENDING EXAMPLE\\n# -----------------------\\n\\nBLOCKTOGEN=101\\nprintf \\\"\\\\nGenerating %s block(s)...\\\\n\\\" $BLOCKTOGEN\\nCOMMAND=\\\"$REGTEST_CMD generate $BLOCKTOGEN\\\"\\necho $COMMAND\\nGENERATED=$($COMMAND)\\necho \\\"Generated $BLOCKTOGEN block(s)\\\"\\n\\nprintf \\\"\\\\nChecking balance...\\\\n\\\"\\nCOMMAND=\\\"$REGTEST_CMD getbalance\\\"\\necho $COMMAND\\nBALANCE=$($COMMAND)\\necho \\\"Balance is: \\\" $BALANCE\\n\\nprintf \\\"\\\\nGetting new address...\\\\n\\\"\\nCOMMAND=\\\"$REGTEST_CMD getnewaddress\\\"\\necho $COMMAND\\nNEW_ADDRESS=$($COMMAND)\\necho \\\"New address is: \\\" $NEW_ADDRESS\\n\\nprintf \\\"\\\\nSending to address...\\\\n\\\"\\nCOMMAND=\\\"$REGTEST_CMD sendtoaddress $NEW_ADDRESS 10.00\\\"\\necho $COMMAND\\nTXID=$($COMMAND)\\necho \\\"Transaction ID (TXID) is: \\\" $TXID\\n\\nprintf \\\"\\\\nList unspent...\\\\n\\\"\\nCOMMAND=\\\"$REGTEST_CMD listunspent\\\"\\necho $COMMAND\\nUNSPENT=$($COMMAND)\\necho \\\"Unspent (excluding unconfirmed): \\\" $UNSPENT\\n\\nprintf \\\"\\\\nList unspent (unconfirmed)...\\\\n\\\"\\nCOMMAND=\\\"$REGTEST_CMD listunspent 0\\\"\\necho $COMMAND\\nUNSPENT=$($COMMAND)\\necho \\\"Unspent (including unconfirmed): \\\" $UNSPENT\\n\\n\\nBLOCKTOGEN=1\\nprintf \\\"\\\\nGenerating %s block(s) to confirm...\\\\n\\\" $BLOCKTOGEN\\nCOMMAND=\\\"$REGTEST_CMD generate $BLOCKTOGEN\\\"\\necho $COMMAND\\nGENERATED=$($COMMAND)\\necho \\\"Generated $BLOCKTOGEN block(s)\\\"\\n\\nprintf \\\"\\\\nList unspent...\\\\n\\\"\\nCOMMAND=\\\"$REGTEST_CMD listunspent\\\"\\necho $COMMAND\\nUNSPENT=$($COMMAND)\\necho \\\"Unspent (excluding unconfirmed): \\\" $UNSPENT\\n\\nunset REGTEST_CMD\\nunset BLOCKTOGEN\\nunset COMMAND\\nunset GENERATED\\nunset BALANCE\\nunset NEW_ADDRESS\\nunset TXID\\nunset UNSPENT\",\n      \"language\": \"shell\",\n      \"name\": \"Shell\"\n    }\n  ]\n}\n[/block]",
 "order": 0,
 "isReference": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "pendingAlgoliaPublish": false,
 "createdAt": "2019-10-24T15:51:07.867Z",
 "updatedAt": "2020-02-12T17:42:55.546Z",
 "_id": "5e96055329a18c0025d3921a",
 "version": "5e96055329a18c0025d39261",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5af39863989da435b05d284d",
 "parentDoc": "5e96055329a18c0025d39219",
 "category": "5e96055329a18c0025d391e5",
 "__v": 1,
 "isApi": false,
 "id": "5e96055329a18c0025d3921a",
 "body_html": "<div class=\"magic-block-textarea\"><p>Dash Core provides several RPCs which handle all the details of spending, including creating a &lt;&lt;glossary:change output&gt;&gt; and paying an appropriate &lt;&lt;glossary:transaction fee&gt;&gt;. Even advanced users should use these RPCs whenever possible to decrease the chance that &lt;&lt;glossary:duffs&gt;&gt; will be lost by mistake.</p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-1-get-new-address\"></div>1. Get new address<a class=\"fa fa-anchor\" href=\"#section-1-get-new-address\"></a></h1>\n<p>Get a new Dash &lt;&lt;glossary:address&gt;&gt; and save it in the shell variable <code>$NEW_ADDRESS</code>.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>&gt; dash-cli <span class=\"cm-attribute\">-regtest</span> getnewaddress\nyLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\n\n&gt; <span class=\"cm-def\">NEW_ADDRESS</span><span class=\"cm-operator\">=</span>yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd</span>\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-2-send-to-address\"></div>2. Send to address<a class=\"fa fa-anchor\" href=\"#section-2-send-to-address\"></a></h1>\n<p>Send 10 dash to the address using the <a href=\"core-api-ref-remote-procedure-calls-wallet#section-send-to-address\"><code>sendtoaddress</code> RPC</a>.  The returned hex string is the transaction identifier (&lt;&lt;glossary:TXID&gt;&gt;).</p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-wallet#section-send-to-address\"><code>sendtoaddress</code> RPC</a> automatically selects an &lt;&lt;glossary:unspent transaction output&gt;&gt; (UTXO) from which to spend the duffs. In this case, it withdrew the duffs from our only available UTXO, the &lt;&lt;glossary:coinbase transaction&gt;&gt; for &lt;&lt;glossary:block&gt;&gt; #1 which matured with the creation of block #101. To spend a specific UTXO, you could use the <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#section-send-from\"><code>sendfrom</code> RPC</a> instead.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>&gt; dash-cli <span class=\"cm-attribute\">-regtest</span> sendtoaddress <span class=\"cm-def\">$NEW_ADDRESS</span> <span class=\"cm-number\">10</span>.00\nc7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea</span>\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-3-list-unspent-outputs\"></div>3. List unspent outputs<a class=\"fa fa-anchor\" href=\"#section-3-list-unspent-outputs\"></a></h1>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-3-a-confirmed-outputs-only\"></div>3a. Confirmed outputs only<a class=\"fa fa-anchor\" href=\"#section-3-a-confirmed-outputs-only\"></a></h1>\n<p>Use the <a href=\"core-api-ref-remote-procedure-calls-wallet#section-list-unspent\"><code>listunspent</code> RPC</a> to display the UTXOs belonging to this &lt;&lt;glossary:wallet&gt;&gt;. The list is empty because it defaults to only showing confirmed UTXOs and we just spent our only confirmed UTXO.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>&gt; dash-cli <span class=\"cm-attribute\">-regtest</span> listunspent\n[\n]</span>\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-3-b-all-outputs\"></div>3b. All outputs<a class=\"fa fa-anchor\" href=\"#section-3-b-all-outputs\"></a></h1>\n<p>Re-running the <a href=\"core-api-ref-remote-procedure-calls-wallet#section-list-unspent\"><code>listunspent</code> RPC</a> with the argument &quot;0&quot; to also display each &lt;&lt;glossary:unconfirmed transaction&gt;&gt; shows that we have two UTXOs, both with the same &lt;&lt;glossary:TXID&gt;&gt;. The first UTXO shown is a change output that <code>sendtoaddress</code> created using a new address from the key pool. The second UTXO shown is the spend to the address we provided. If we had spent those duffs to someone else, that second transaction would not be displayed in our list of UTXOs.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>&gt; dash-cli <span class=\"cm-attribute\">-regtest</span> listunspent <span class=\"cm-number\">0</span></span>\n</code></pre>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[  \n   {  \n      <span class=\"cm-property\">\"txid\"</span>:<span class=\"cm-string\">\"c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\"</span>,\n      <span class=\"cm-property\">\"vout\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"address\"</span>:<span class=\"cm-string\">\"yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\"</span>,\n      <span class=\"cm-property\">\"account\"</span>:<span class=\"cm-string\">\"\"</span>,\n      <span class=\"cm-property\">\"scriptPubKey\"</span>:<span class=\"cm-string\">\"76a914056b1fe57914236149feb21dcbc6b86f4bdd9f4988ac\"</span>,\n      <span class=\"cm-property\">\"amount\"</span>:<span class=\"cm-number\">10.00000000</span>,\n      <span class=\"cm-property\">\"confirmations\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"ps_rounds\"</span>:<span class=\"cm-operator\">-</span><span class=\"cm-number\">2</span>,\n      <span class=\"cm-property\">\"spendable\"</span>:<span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"solvable\"</span>:<span class=\"cm-atom\">true</span>\n   },\n   {  \n      <span class=\"cm-property\">\"txid\"</span>:<span class=\"cm-string\">\"c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\"</span>,\n      <span class=\"cm-property\">\"vout\"</span>:<span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"address\"</span>:<span class=\"cm-string\">\"yeP6Tw2uW4nWAFWRytw8TyshErTq59dUkN\"</span>,\n      <span class=\"cm-property\">\"scriptPubKey\"</span>:<span class=\"cm-string\">\"76a914c622e98a6ccf34d02620612f58f20a50061cf4b188ac\"</span>,\n      <span class=\"cm-property\">\"amount\"</span>:<span class=\"cm-number\">490.00000000</span>,\n      <span class=\"cm-property\">\"confirmations\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"ps_rounds\"</span>:<span class=\"cm-operator\">-</span><span class=\"cm-number\">2</span>,\n      <span class=\"cm-property\">\"spendable\"</span>:<span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"solvable\"</span>:<span class=\"cm-atom\">true</span>\n   }\n]</span>\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-4-mine-block\"></div>4. Mine block<a class=\"fa fa-anchor\" href=\"#section-4-mine-block\"></a></h1>\n<p>Create a new block to confirm the transaction above (takes less than a second) and clear the shell variable.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>&gt; dash-cli <span class=\"cm-attribute\">-regtest</span> generate <span class=\"cm-number\">1</span>\n\n&gt; <span class=\"cm-keyword\">unset</span> NEW_ADDRESS</span>\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-simple-spending-script\"></div>Simple Spending Script<a class=\"fa fa-anchor\" href=\"#section-simple-spending-script\"></a></h1>\n<p>Shell script to run the previous example (available <a href=\"https://gist.github.com/dash-docs/f40bddfc0844ec0d66d196720dc936f8#file-regtest_transaction_simple_spending_example-sh\">here</a>):</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Shell</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(984)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-984\">#!/bin/bash\n\n# Set RPCUSER and RPCPWD to the username and password configure in dash.conf\nRPCUSER=&quot;user&quot;\nRPCPWD=&quot;pass&quot;\nREGTEST_CMD=&quot;dash-cli -regtest -rpcuser=$RPCUSER -rpcpassword=$RPCPWD&quot;\n\n# SIMPLE SPENDING EXAMPLE\n# -----------------------\n\nBLOCKTOGEN=101\nprintf &quot;\\nGenerating %s block(s)...\\n&quot; $BLOCKTOGEN\nCOMMAND=&quot;$REGTEST_CMD generate $BLOCKTOGEN&quot;\necho $COMMAND\nGENERATED=$($COMMAND)\necho &quot;Generated $BLOCKTOGEN block(s)&quot;\n\nprintf &quot;\\nChecking balance...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD getbalance&quot;\necho $COMMAND\nBALANCE=$($COMMAND)\necho &quot;Balance is: &quot; $BALANCE\n\nprintf &quot;\\nGetting new address...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD getnewaddress&quot;\necho $COMMAND\nNEW_ADDRESS=$($COMMAND)\necho &quot;New address is: &quot; $NEW_ADDRESS\n\nprintf &quot;\\nSending to address...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD sendtoaddress $NEW_ADDRESS 10.00&quot;\necho $COMMAND\nTXID=$($COMMAND)\necho &quot;Transaction ID (TXID) is: &quot; $TXID\n\nprintf &quot;\\nList unspent...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD listunspent&quot;\necho $COMMAND\nUNSPENT=$($COMMAND)\necho &quot;Unspent (excluding unconfirmed): &quot; $UNSPENT\n\nprintf &quot;\\nList unspent (unconfirmed)...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD listunspent 0&quot;\necho $COMMAND\nUNSPENT=$($COMMAND)\necho &quot;Unspent (including unconfirmed): &quot; $UNSPENT\n\n\nBLOCKTOGEN=1\nprintf &quot;\\nGenerating %s block(s) to confirm...\\n&quot; $BLOCKTOGEN\nCOMMAND=&quot;$REGTEST_CMD generate $BLOCKTOGEN&quot;\necho $COMMAND\nGENERATED=$($COMMAND)\necho &quot;Generated $BLOCKTOGEN block(s)&quot;\n\nprintf &quot;\\nList unspent...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD listunspent&quot;\necho $COMMAND\nUNSPENT=$($COMMAND)\necho &quot;Unspent (excluding unconfirmed): &quot; $UNSPENT\n\nunset REGTEST_CMD\nunset BLOCKTOGEN\nunset COMMAND\nunset GENERATED\nunset BALANCE\nunset NEW_ADDRESS\nunset TXID\nunset UNSPENT</textarea>\n\t\t\t<pre id=\"code-984\"><code><span class='cm-s-neo'><span class=\"cm-meta\">#!&#47;bin&#47;bash</span>\n\n<span class=\"cm-comment\"># Set RPCUSER and RPCPWD to the username and password configure in dash.conf</span>\n<span class=\"cm-def\">RPCUSER</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"user\"</span>\n<span class=\"cm-def\">RPCPWD</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"pass\"</span>\n<span class=\"cm-def\">REGTEST_CMD</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"dash-cli -regtest -rpcuser=</span><span class=\"cm-def\">$RPCUSER</span><span class=\"cm-string\"> -rpcpassword=</span><span class=\"cm-def\">$RPCPWD</span><span class=\"cm-string\">\"</span>\n\n<span class=\"cm-comment\"># SIMPLE SPENDING EXAMPLE</span>\n<span class=\"cm-comment\"># -----------------------</span>\n\n<span class=\"cm-def\">BLOCKTOGEN</span><span class=\"cm-operator\">=</span><span class=\"cm-number\">101</span>\nprintf <span class=\"cm-string\">\"\\nGenerating %s block(s)...\\n\"</span> <span class=\"cm-def\">$BLOCKTOGEN</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> generate </span><span class=\"cm-def\">$BLOCKTOGEN</span><span class=\"cm-string\">\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">GENERATED</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"Generated </span><span class=\"cm-def\">$BLOCKTOGEN</span><span class=\"cm-string\"> block(s)\"</span>\n\nprintf <span class=\"cm-string\">\"\\nChecking balance...\\n\"</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> getbalance\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">BALANCE</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"Balance is: \"</span> <span class=\"cm-def\">$BALANCE</span>\n\nprintf <span class=\"cm-string\">\"\\nGetting new address...\\n\"</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> getnewaddress\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">NEW_ADDRESS</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"New address is: \"</span> <span class=\"cm-def\">$NEW_ADDRESS</span>\n\nprintf <span class=\"cm-string\">\"\\nSending to address...\\n\"</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> sendtoaddress </span><span class=\"cm-def\">$NEW_ADDRESS</span><span class=\"cm-string\"> 10.00\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">TXID</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"Transaction ID (TXID) is: \"</span> <span class=\"cm-def\">$TXID</span>\n\nprintf <span class=\"cm-string\">\"\\nList unspent...\\n\"</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> listunspent\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">UNSPENT</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"Unspent (excluding unconfirmed): \"</span> <span class=\"cm-def\">$UNSPENT</span>\n\nprintf <span class=\"cm-string\">\"\\nList unspent (unconfirmed)...\\n\"</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> listunspent 0\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">UNSPENT</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"Unspent (including unconfirmed): \"</span> <span class=\"cm-def\">$UNSPENT</span>\n\n\n<span class=\"cm-def\">BLOCKTOGEN</span><span class=\"cm-operator\">=</span><span class=\"cm-number\">1</span>\nprintf <span class=\"cm-string\">\"\\nGenerating %s block(s) to confirm...\\n\"</span> <span class=\"cm-def\">$BLOCKTOGEN</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> generate </span><span class=\"cm-def\">$BLOCKTOGEN</span><span class=\"cm-string\">\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">GENERATED</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"Generated </span><span class=\"cm-def\">$BLOCKTOGEN</span><span class=\"cm-string\"> block(s)\"</span>\n\nprintf <span class=\"cm-string\">\"\\nList unspent...\\n\"</span>\n<span class=\"cm-def\">COMMAND</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">\"</span><span class=\"cm-def\">$REGTEST_CMD</span><span class=\"cm-string\"> listunspent\"</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-def\">$COMMAND</span>\n<span class=\"cm-def\">UNSPENT</span><span class=\"cm-operator\">=</span><span class=\"cm-quote\">$(</span><span class=\"cm-def\">$COMMAND</span><span class=\"cm-quote\">)</span>\n<span class=\"cm-builtin\">echo</span> <span class=\"cm-string\">\"Unspent (excluding unconfirmed): \"</span> <span class=\"cm-def\">$UNSPENT</span>\n\n<span class=\"cm-keyword\">unset</span> REGTEST_CMD\n<span class=\"cm-keyword\">unset</span> BLOCKTOGEN\n<span class=\"cm-keyword\">unset</span> COMMAND\n<span class=\"cm-keyword\">unset</span> GENERATED\n<span class=\"cm-keyword\">unset</span> BALANCE\n<span class=\"cm-keyword\">unset</span> NEW_ADDRESS\n<span class=\"cm-keyword\">unset</span> TXID\n<span class=\"cm-keyword\">unset</span> UNSPENT</span></code></pre></span>\n\t</div>\n</div>"
}