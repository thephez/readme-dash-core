{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Quorum Messages",
    "slug": "core-ref-p2p-network-quorum-messages",
    "category": "Core Reference"
   }
  ]
 },
 "title": "PrivateSend Messages",
 "updates": [],
 "type": "basic",
 "slug": "core-ref-p2p-network-privatesend-messages",
 "excerpt": "",
 "body": "The following network messages all help control the <<glossary:PrivateSend>> (formerly DarkSend) coin mixing features built in to Dash and facilitated by the <<glossary:masternode>> network.\n\nSince the messages are all related to a single process, this diagram shows them sequentially numbered. The [`dssu` message](core-ref-p2p-network-privatesend-messages#section-dssu) (not shown) is sent by the masternode in conjunction with some responses. For additional details, refer to the Developer Guide [PrivateSend section](core-guide-dash-features-privatesend).\n\n![Overview Of P2P Protocol PrivateSend Request And Reply Messages](https://dash-docs.github.io/img/dev/en-p2p-privatesend-messages.svg)\n\n# dsa\n\nThe [`dsa` message](core-ref-p2p-network-privatesend-messages#section-dsa) allows a <<glossary:node>> to join a mixing pool. A collateral fee is required and may be forfeited if the client acts maliciously. The message operates in two ways:\n\n1. When sent to a masternode without a current mixing queue, it initiates the start of a new mixing queue\n\n2. When sent to a masternode with a current mixing queue, it attempts to join the existing queue\n\nDash Core attempts to join an existing queue first and only requests a new one if no existing ones are available.\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| 4 | nDenom | int | Required | Denomination that will be exclusively used when submitting inputs into the pool\n| 216+ | txCollateral | [`tx` message](core-ref-p2p-network-data-messages#section-tx) | Required | Collateral TX that will be charged if this client acts maliciously\n\nThe following annotated hexdump shows a [`dsa` message](core-ref-p2p-network-privatesend-messages#section-dsa). (The message header has been omitted.) Note that the 'Required inputs' bytes will only be preset if <<glossary:Spork>> 6 is active and protocol version => 70209.\n\n``` text\n02000000 ................................... Denomination: 1 Dash (2)\n\nCollateral Transaction\n| Previous Output\n| |\n| | 010000000183bd1980c71c38f035db9b\n| | 14d7f934f7d595181b3436e362899026 ....... Outpoint TXID\n| | 19f3f7d3 ............................... Outpoint index number: 3556242201\n|\n| 83 ....................................... Bytes in sig. script: 131\n|\n| 000000006b483045022100f4d8fa0ae4132235fe\n| cd540a62715ccfb1c9a97f8698d066656e30bb1e\n| 1e06b90220301b4cc93f38950a69396ed89dfcc0\n| 8e72ec8e6e7169463592a0bf504946d98b812102\n| fa4b9c0f9e76e06d57c75cab9c8368a62a1ce8db\n| 6eb0c25c3e0719ddd9ab549cffffffff01e09304\n| 00000000001976a914f895 ................... Secp256k1 signature: None\n|\n| 6a4eb0e5 ................................. Sequence number: 3853536874\n```\n\n# dsc\n\nThe [`dsc` message](core-ref-p2p-network-privatesend-messages#section-dsc) indicates a PrivateSend mixing session is complete.\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| 4 | nSessionID | int | Required | ID of the mixing session\n| 4 | nMessageID | int | Required | ID of the message describing the result of the mixing session\n\nReference the Message IDs table under the [`dssu` message](core-ref-p2p-network-privatesend-messages#section-dssu) for descriptions of the Message ID values.\n\nThe following annotated hexdump shows a [`dsc` message](core-ref-p2p-network-privatesend-messages#section-dsc). (The message header has been omitted.)\n\n``` text\nd9070700 ............................. Session ID: 791686\n14000000 ............................. Message ID: MSG_SUCCESS (20)\n```\n\n# dsf\n\nThe [`dsf` message](core-ref-p2p-network-privatesend-messages#section-dsf) is sent by the masternode as the final mixing transaction in a PrivateSend mixing session. The <<glossary:masternode>> expects <<glossary:nodes>> in the mixing session to respond with a [`dss` message](core-ref-p2p-network-privatesend-messages#section-dss).\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| 4 | nSessionID | int | Required | ID of the mixing session\n| # | txFinal | [`tx` message](core-ref-p2p-network-data-messages#section-tx) | Required |  Final mixing transaction with unsigned inputs\n\nThe following annotated hexdump shows a [`dsf` message](core-ref-p2p-network-privatesend-messages#section-dsf). (The message header has been omitted.) Transaction <<glossary:inputs>>/<<glossary:outputs>> are only shown for a single node (compare with the [`dsi` message](core-ref-p2p-network-privatesend-messages#section-dsi) and [`dss` message](core-ref-p2p-network-privatesend-messages#section-dss) hexdumps).\n\n``` text\n86140c00 ............................. Session ID: 791686\n\nTransaction Message\n| 01000000 ................................. Version: 1\n|\n| 0f ......................................... Number of inputs: 15\n|\n| [...] ...................................... 5 transaction inputs omitted\n|\n| Transaction input #6\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 02000000 ................................. Outpoint index number: 0\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #7\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0f000000 ................................. Outpoint index number: 15\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #8\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0d000000 ................................. Outpoint index number: 13\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n|\n| [...] ...................................... 7 more transaction inputs omitted\n|\n|\n| 0f ......................................... Number of outputs: 15\n|\n| Transaction output #1\n| | e8e4f50500000000 ......................... Duffs (1.00001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 14826d7ba05cf76588a5503c03951dc9\n| | | | 14c91b6c ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n|\n| [...] ...................................... 3 transaction outputs omitted\n|\n|\n| Transaction output #5\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 426614716e94812d483bca32374f6ac8\n| | | | cd121b0d ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n|\n| [...] ...................................... 9 transaction outputs omitted\n|\n|\n| Transaction output #15\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | f01197177de2358928196a543b2bbd97\n| | | | 3c2ab002 ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| 00000000 ................................... locktime: 0 (a block height)\n```\n\n# dsi\n\nThe [`dsi` message](core-ref-p2p-network-privatesend-messages#section-dsi) replies to a [`dsq` message](core-ref-p2p-network-privatesend-messages#section-dsq) that has the Ready field set to 0x01. The [`dsi` message](core-ref-p2p-network-privatesend-messages#section-dsi) contains user <<glossary:inputs>> for mixing along with the <<glossary:outputs>> and a collateral. Once the <<glossary:masternode>> receives [`dsi` messages](core-ref-p2p-network-privatesend-messages#section-dsi) from all members of the pool, it responds with a [`dsf` message](core-ref-p2p-network-privatesend-messages#section-dsf).\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| ? | vecTxDSIn | CTxDSIn[] | Required | Vector of users inputs (CTxDSIn serialization is equal to CTxIn serialization)\n| 216+ | txCollateral | [`tx` message](core-ref-p2p-network-data-messages#section-tx) | Required | Collateral transaction which is used to prevent misbehavior and also to charge fees randomly\n| ? | vecTxDSOut | CTxDSOut[] | Required | Vector of user outputs (CTxDSOut serialization is equal to CTxOut serialization)\n\nThe following annotated hexdump shows a [`dsi` message](core-ref-p2p-network-privatesend-messages#section-dsi). (The message header has been omitted.)\n\n``` text\nUser inputs\n| 03 ......................................... Number of inputs: 3\n|\n| Transaction input #1\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 02000000 ................................. Outpoint index number: 2\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #2\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0f000000 ................................. Outpoint index number: 15\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #3\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0d000000 ................................. Outpoint index number: 13\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n\nCollateral Transaction\n| 01000000 ................................... Version: 1\n|\n| 01 ......................................... Number of inputs: 1\n|\n| Previous Output\n| |\n| | 83bd1980c71c38f035db9b14d7f934f7\n| | d595181b3436e36289902619f3f7d383 ......... Outpoint TXID\n| | 00000000 ................................. Outpoint index number: 0\n| |\n| | 6b ....................................... Bytes in sig. script: 107\n| |\n| | 483045022100f4d8fa0ae4132235fecd540a\n| | 62715ccfb1c9a97f8698d066656e30bb1e1e\n| | 06b90220301b4cc93f38950a69396ed89dfc\n| | c08e72ec8e6e7169463592a0bf504946d98b\n| | 812102fa4b9c0f9e76e06d57c75cab9c8368\n| | a62a1ce8db6eb0c25c3e0719ddd9ab549c ....... Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| 01 ......................................... Number of outputs: 1\n|\n| | e093040000000000 ......................... 300,000 Duffs (0.003 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | f8956a4eb0e53b05ee6b30edfd2770b5\n| | | | 26c1f1bb ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| 00000000 ................................... locktime: 0 (a block height)\n\nUser outputs\n| 03 ......................................... Number of outputs: 3\n|\n| Transaction output #1\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 14826d7ba05cf76588a5503c03951dc9\n| | | | 14c91b6c ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| Transaction output #2\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | f01197177de2358928196a543b2bbd97\n| | | | 3c2ab002 ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| Transaction output #3\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 426614716e94812d483bca32374f6ac8\n| | | | cd121b0d ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n```\n\n# dsq\n\nThe [`dsq` message](core-ref-p2p-network-privatesend-messages#section-dsq) provides <<glossary:nodes>> with mixing queue details and notifies them when to sign final mixing TX messages.\n\nIf the message indicates the queue is not ready, the node verifies the message is valid. It also verifies that the <<glossary:masternode>> is not flooding the <<glossary:network>> with [`dsq` messages](core-ref-p2p-network-privatesend-messages#section-dsq) in an attempt to dominate the queuing process. It then relays the message to its connected <<glossary:peers>>.\n\nIf the message indicates the queue is ready, the node responds with a [`dsi` message](core-ref-p2p-network-privatesend-messages#section-dsi).\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| 4 | nDenom | int | Required | Denomination allowed in this mixing session\n| 36 | masternodeOutPoint | outPoint | Required | The unspent outpoint of the masternode (holding 1000 DASH) which is hosting this session\n| 8 | nTime | int64_t | Required | Time this [`dsq` message](core-ref-p2p-network-privatesend-messages#section-dsq) was created\n| 1 | fReady | bool | Required | Indicates if the mixing pool is ready to be executed\n| 97 | vchSig | char[] | Required | _ECDSA signature (65 bytes) prior to [DIP3](https://github.com/dashpay/dips/blob/master/dip-0003.md) activation_<br><br>BLS Signature of this message by masternode verifiable via pubKeyMasternode (Length (1 byte) + Signature (96 bytes))\n\nDenominations (per [`src/privatesend.cpp`](https://github.com/dashpay/dash/blob/7d8eab2641023c78a72ccd6efc99fc35fd030a46/src/privatesend.cpp#L201-L221))\n\n| Value | Denomination\n|------|--------------\n| 1 | 10 Dash\n| 2 | 1 Dash\n| 4 | 0.1 Dash\n| 8 | 0.01 Dash\n| 16 | 0.001 Dash\n\nThe following annotated hexdump shows a [`dsq` message](core-ref-p2p-network-privatesend-messages#section-dsq). (The message header has been omitted.) Note that the 'Required <<glossary:inputs>>' bytes will only be preset if <<glossary:Spork>> 6 is active and protocol version => 70209.\n\n``` text\n01000000 ............................. Denomination: 10 Dash (1)\n\nMasternode Outpoint\n| a383a2489aedccfab4bb41368d1c8ee3\n| 10d9ee90cb3d181880ce4e0cdb36ecb7\n| 0f000000 ........................... Outpoint index number: 15\n\n10b4235c00000000 ..................... Create Time: 2018-12-26 17:02:08 UTC\n\n00 ................................... Ready: 0\n\n60 ................................... Signature length: 96\n\n0409a1349869a02e90e6e1f6d92bf995\n27a72542fed987f6d2719596973d89e6\n74605a3585b1335650f1555f7576061d\n110fb72b3308e378ac8e8fbebeeffdb4\n9b2a6562ad965bb3c3fd3f8e68483fdb\n0d1401e2264071a74fc01d51e943ce9f ..... Masternode BLS Signature\n```\n\n# dss\n\nThe [`dss` message](core-ref-p2p-network-privatesend-messages#section-dss) replies to a [`dsf` message](core-ref-p2p-network-privatesend-messages#section-dsf) sent by the <<glossary:masternode>> managing the mixing session.  The [`dsf` message](core-ref-p2p-network-privatesend-messages#section-dsf) provides the unsigned transaction <<glossary:inputs>> for all members of the mixing pool. Each <<glossary:node>> verifies that the final transaction matches what is expected. They then sign any transaction inputs belonging to them and then relay them to the masternode via this [`dss` message](core-ref-p2p-network-privatesend-messages#section-dss).\n\nOnce the masternode receives and validates all [`dss` messages](core-ref-p2p-network-privatesend-messages#section-dss), it issues a [`dsc` message](core-ref-p2p-network-privatesend-messages#section-dsc). If a node does not respond to a [`dsf` message](core-ref-p2p-network-privatesend-messages#section-dsf) with signed transaction inputs, it may forfeit the collateral it provided. This is to minimize malicious behavior.\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| # | inputs | txIn[] | Required | Signed inputs for mixing session\n\nThe following annotated hexdump shows a [`dss` message](core-ref-p2p-network-privatesend-messages#section-dss). (The message header has been omitted.) Note that these will be the same transaction inputs that were supplied (unsiged) in the [`dsi` message](core-ref-p2p-network-privatesend-messages#section-dsi).\n\n``` text\nUser inputs\n| 03 ......................................... Number of inputs: 3\n|\n| Transaction input #1\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 02000000 ................................. Outpoint index number: 2\n| |\n| | 6b ....................................... Bytes in sig. script: 107\n| | 483045022100b3a861dca83463aabf5e4a14a286\n| | 1b9c2e51e0dedd8a13552e118bf74eb4a68d0220\n| | 4a91c416768d27e6bdcfa45d28129841dbcc728b\n| | f0bbec9701cfc4e743d23adf812102cc4876c9da\n| | 84417dec37924e0479205ce02529bb0ba88631d3\n| | ccc9cfcdf00173 ........................... Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #2\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0f000000 ................................. Outpoint index number: 15\n| |\n| | 6a ....................................... Bytes in sig. script: 106\n| | 4730440220268f3b7799ca4ec132e511a4756019\n| | c56016f7771561dc0597d84e9b1fa9fc08022067\n| | 5199b9b3f9a7eba69b7bbb4aa2a413d955762f9d\n| | 68be5a9c02c6772c8078fd812103258925f0dbbf\n| | 9d5aa20a675459fa2e86c9f9061dee82a00dca73\n| | 9080f051d891 ............................. Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #3\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0d000000 ................................. Outpoint index number: 13\n| |\n| | 6a ....................................... Bytes in sig. script: 106\n| | 4730440220404bb067e0c94a2bd75c6798c1af8c\n| | 95e8b92f5e437cff2bcb4660f24a34d06d02203a\n| | b707bd371a84a9e7bd1fbe3b0c939fd23e0a9165\n| | de78809b9310372a4b3879812103a9a6c5204811\n| | a8cab04b595ed622a1fed6efd3b2d888fadd0c97\n| | 3737fcdf2bc7 ............................. Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n```\n\n# dssu\n\nThe [`dssu` message](core-ref-p2p-network-privatesend-messages#section-dssu) provides a mixing pool status update.\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| 4 | nMsgSessionID | int | Required | Session ID\n| 4 | nMsgState | int | Required | Current state of mixing process\n| 4 | nMsgEntriesCount | int | Required | **_Deprecated in Dash Core 0.15.0_**<br><br>Number of entries in the mixing pool\n| 4 | nMsgStatusUpdate | int | Required | Update state and/or signal if entry was accepted or not\n| 4 | nMsgMessageID | int | Required | ID of the typical masternode reply message\n\n**Pool State**\n\n| State | Description\n|------|--------------\n| 0 | `POOL_STATE_IDLE`\n| 1 | `POOL_STATE_QUEUE`\n| 2 | `POOL_STATE_ACCEPTING_ENTRIES`\n| 3 | `POOL_STATE_SIGNING`\n| 4 | `POOL_STATE_ERROR`\n| ~~5~~ | ~~`POOL_STATE_SUCCESS`~~ **_Deprecated in Dash Core 0.16.0_**\n\n**Pool Status Update**\n\n| Status | Description\n|------|--------------\n| 0 | `STATUS_REJECTED`\n| 1 | `STATUS_ACCEPTED`\n\n**Message IDs**\n\n| Code | Description\n|------|--------------\n| 0x00 | `ERR_ALREADY_HAVE`\n| 0x01 | `ERR_DENOM`\n| 0x02 | `ERR_ENTRIES_FULL`\n| 0x03 | `ERR_EXISTING_TX`\n| 0x04 | `ERR_FEES`\n| 0x05 | `ERR_INVALID_COLLATERAL`\n| 0x06 | `ERR_INVALID_INPUT`\n| 0x07 | `ERR_INVALID_SCRIPT`\n| 0x08 | `ERR_INVALID_TX`\n| 0x09 | `ERR_MAXIMUM`\n| 0x0A (10) | `ERR_MN_LIST`\n| 0x0B (11) | `ERR_MODE`\n| 0x0C (12) | `ERR_NON_STANDARD_PUBKEY` (Not used)\n| 0x0D (13) | `ERR_NOT_A_MN` (Not used)\n| 0x0E (14) | `ERR_QUEUE_FULL`\n| 0x0F (15) | `ERR_RECENT`\n| 0x10 (16) | `ERR_SESSION`\n| 0x11 (17) | `ERR_MISSING_TX`\n| 0x12 (18) | `ERR_VERSION`\n| 0x13 (19) | `MSG_NOERR`\n| 0x14 (20) | `MSG_SUCCESS`\n| 0x15 (21) | `MSG_ENTRIES_ADDED`\n| 0x16 (22) | `ERR_SIZE_MISMATCH`\n\nThe following annotated hexdump shows a [`dssu` message](core-ref-p2p-network-privatesend-messages#section-dssu). (The message header has been omitted.)\n\n``` text\n86140c00 ............................. Session ID: 791686\n02000000 ............................. State: POOL_STATE_ACCEPTING_ENTRIES (2)\n01000000 ............................. Status Update: STATUS_ACCEPTED (1)\n13000000 ............................. Message ID: MSG_NOERR (0x13)\n```\n\n# dstx\n\nThe [`dstx` message](core-ref-p2p-network-privatesend-messages#section-dstx) allows <<glossary:masternodes>> to broadcast subsidized transactions without fees (to provide security in mixing).\n\n| Bytes | Name | Data type | Required | Description |\n| ---------- | ----------- | --------- | -------- | -------- |\n| # | tx | [`tx` message](core-ref-p2p-network-data-messages#section-tx) | Required | The transaction\n| 36 | masternode<br>OutPoint | outPoint | Required | The unspent outpoint of the masternode (holding 1000 DASH) which is signing the message\n| 97 | vchSig | char[] | Required | _ECDSA signature (65 bytes) prior to [DIP3](https://github.com/dashpay/dips/blob/master/dip-0003.md) activation_<br><br>BLS Signature of this message by masternode verifiable via pubKeyMasternode (Length (1 byte) + Signature (96 bytes))\n| 8 | sigTime | int64_t | Require | Time this message was signed\n\nThe following annotated hexdump shows a [`dstx` message](core-ref-p2p-network-privatesend-messages#section-dstx). (The message header has been omitted.)\n\n``` text\nTransaction Message\n| 0200 ....................................... Version: 2\n| 0000 ....................................... Type: 0 (Classical Tx)\n|\n| 05 ......................................... Number of inputs: 5\n|\n| Transaction input #1\n| |\n| | 0adb782b2170018eada54534be880e70\n| | 74ed8307a566731119b1782362af43ad ......... Outpoint TXID\n| | 05000000 ................................. Outpoint index number: 5\n| |\n| | 6b ....................................... Bytes in sig. script: 107\n| | 483045022100b1243fcba562a0f1d7c4\n| | cc3b320645dfa96c6412f368ccdbc1b7\n| | acb6b0aa1db502201606c81b0d79f52f\n| | 47bcb071b64c37f72dd1378efa67a2de\n| | dd86c44d393668fa812102d6ff581270\n| | 632f5e972b0418ee871867b5c04b6eae\n| | 3458ad135ad8f1daaa4fc2 ................... Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| [...] ...................................... 4 more transaction inputs omitted\n|\n|\n| 05 ......................................... Number of outputs: 5\n|\n| Transaction output #1\n| | 10f19a3b00000000 ......................... Duffs (10.0001000 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 3eb7ae776b096231de9eca42dd57a677\n| | | | d3b05452 ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| [...] ...................................... 4 more transaction outputs omitted\n|\n|\n| 00000000 ................................... locktime: 0 (a block height)\n\nMasternode Unspent Outpoint\n| ccfbe4e7c220264cb0a8bfa5e91c6957\n| 33c255384790e80e891a0d8f56a59d9e ......... Outpoint TXID\n| 01000000 ................................. Outpoint index number: 1\n\n60 ......................................... Signature length: 96\n\n94c8e427f448789f58cda17445e76c64\nd0efa7c089addcb378f9b8d04b72f499\na4e8e616b5011886b9cffcce29e17fc1\n10ad8609c3ee1a3207b882e7ff58400f\n42d6e6544108b349da2cc5e716a5f266\n4a2dc96b0f080effd5349f2ae06ac234 .......... Masternode Signature\n\n59b4235c00000000 .......................... Sig Time: 2018-12-26 17:03:21 UTC\n```",
 "order": 8,
 "isReference": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "pendingAlgoliaPublish": false,
 "createdAt": "2019-10-23T16:03:06.848Z",
 "updatedAt": "2020-04-29T12:51:22.101Z",
 "_id": "5e96055329a18c0025d391f0",
 "version": "5e96055329a18c0025d39261",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "5e96055329a18c0025d391e9",
 "category": "5e96055329a18c0025d391e2",
 "__v": 3,
 "isApi": false,
 "id": "5e96055329a18c0025d391f0",
 "body_html": "<div class=\"magic-block-textarea\"><p>The following network messages all help control the &lt;&lt;glossary:PrivateSend&gt;&gt; (formerly DarkSend) coin mixing features built in to Dash and facilitated by the &lt;&lt;glossary:masternode&gt;&gt; network.</p>\n<p>Since the messages are all related to a single process, this diagram shows them sequentially numbered. The <a href=\"core-ref-p2p-network-privatesend-messages#section-dssu\"><code>dssu</code> message</a> (not shown) is sent by the masternode in conjunction with some responses. For additional details, refer to the Developer Guide <a href=\"core-guide-dash-features-privatesend\">PrivateSend section</a>.</p>\n<p><img src=\"https://dash-docs.github.io/img/dev/en-p2p-privatesend-messages.svg\" alt=\"Overview Of P2P Protocol PrivateSend Request And Reply Messages\"></p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dsa\"></div>dsa<a class=\"fa fa-anchor\" href=\"#section-dsa\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dsa\"><code>dsa</code> message</a> allows a &lt;&lt;glossary:node&gt;&gt; to join a mixing pool. A collateral fee is required and may be forfeited if the client acts maliciously. The message operates in two ways:</p>\n<ol>\n<li  value=\"1\"><p>When sent to a masternode without a current mixing queue, it initiates the start of a new mixing queue</p>\n</li><li  value=\"2\"><p>When sent to a masternode with a current mixing queue, it attempts to join the existing queue</p>\n</li></ol>\n<p>Dash Core attempts to join an existing queue first and only requests a new one if no existing ones are available.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>nDenom</td>\n<td>int</td>\n<td>Required</td>\n<td>Denomination that will be exclusively used when submitting inputs into the pool</td>\n</tr>\n<tr>\n<td>216+</td>\n<td>txCollateral</td>\n<td><a href=\"core-ref-p2p-network-data-messages#section-tx\"><code>tx</code> message</a></td>\n<td>Required</td>\n<td>Collateral TX that will be charged if this client acts maliciously</td>\n</tr>\n</tbody>\n</table></div>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsa\"><code>dsa</code> message</a>. (The message header has been omitted.) Note that the &#39;Required inputs&#39; bytes will only be preset if &lt;&lt;glossary:Spork&gt;&gt; 6 is active and protocol version =&gt; 70209.</p>\n<pre><code class=\"lang-text\">02000000 ................................... Denomination: 1 Dash (2)\n\nCollateral Transaction\n| Previous Output\n| |\n| | 010000000183bd1980c71c38f035db9b\n| | 14d7f934f7d595181b3436e362899026 ....... Outpoint TXID\n| | 19f3f7d3 ............................... Outpoint index number: 3556242201\n|\n| 83 ....................................... Bytes in sig. script: 131\n|\n| 000000006b483045022100f4d8fa0ae4132235fe\n| cd540a62715ccfb1c9a97f8698d066656e30bb1e\n| 1e06b90220301b4cc93f38950a69396ed89dfcc0\n| 8e72ec8e6e7169463592a0bf504946d98b812102\n| fa4b9c0f9e76e06d57c75cab9c8368a62a1ce8db\n| 6eb0c25c3e0719ddd9ab549cffffffff01e09304\n| 00000000001976a914f895 ................... Secp256k1 signature: None\n|\n| 6a4eb0e5 ................................. Sequence number: 3853536874\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dsc\"></div>dsc<a class=\"fa fa-anchor\" href=\"#section-dsc\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dsc\"><code>dsc</code> message</a> indicates a PrivateSend mixing session is complete.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>nSessionID</td>\n<td>int</td>\n<td>Required</td>\n<td>ID of the mixing session</td>\n</tr>\n<tr>\n<td>4</td>\n<td>nMessageID</td>\n<td>int</td>\n<td>Required</td>\n<td>ID of the message describing the result of the mixing session</td>\n</tr>\n</tbody>\n</table></div>\n<p>Reference the Message IDs table under the <a href=\"core-ref-p2p-network-privatesend-messages#section-dssu\"><code>dssu</code> message</a> for descriptions of the Message ID values.</p>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsc\"><code>dsc</code> message</a>. (The message header has been omitted.)</p>\n<pre><code class=\"lang-text\">d9070700 ............................. Session ID: 791686\n14000000 ............................. Message ID: MSG_SUCCESS (20)\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dsf\"></div>dsf<a class=\"fa fa-anchor\" href=\"#section-dsf\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dsf\"><code>dsf</code> message</a> is sent by the masternode as the final mixing transaction in a PrivateSend mixing session. The &lt;&lt;glossary:masternode&gt;&gt; expects &lt;&lt;glossary:nodes&gt;&gt; in the mixing session to respond with a <a href=\"core-ref-p2p-network-privatesend-messages#section-dss\"><code>dss</code> message</a>.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>nSessionID</td>\n<td>int</td>\n<td>Required</td>\n<td>ID of the mixing session</td>\n</tr>\n<tr>\n<td>#</td>\n<td>txFinal</td>\n<td><a href=\"core-ref-p2p-network-data-messages#section-tx\"><code>tx</code> message</a></td>\n<td>Required</td>\n<td>Final mixing transaction with unsigned inputs</td>\n</tr>\n</tbody>\n</table></div>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsf\"><code>dsf</code> message</a>. (The message header has been omitted.) Transaction &lt;&lt;glossary:inputs&gt;&gt;/&lt;&lt;glossary:outputs&gt;&gt; are only shown for a single node (compare with the <a href=\"core-ref-p2p-network-privatesend-messages#section-dsi\"><code>dsi</code> message</a> and <a href=\"core-ref-p2p-network-privatesend-messages#section-dss\"><code>dss</code> message</a> hexdumps).</p>\n<pre><code class=\"lang-text\">86140c00 ............................. Session ID: 791686\n\nTransaction Message\n| 01000000 ................................. Version: 1\n|\n| 0f ......................................... Number of inputs: 15\n|\n| [...] ...................................... 5 transaction inputs omitted\n|\n| Transaction input #6\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 02000000 ................................. Outpoint index number: 0\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #7\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0f000000 ................................. Outpoint index number: 15\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #8\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0d000000 ................................. Outpoint index number: 13\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n|\n| [...] ...................................... 7 more transaction inputs omitted\n|\n|\n| 0f ......................................... Number of outputs: 15\n|\n| Transaction output #1\n| | e8e4f50500000000 ......................... Duffs (1.00001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 14826d7ba05cf76588a5503c03951dc9\n| | | | 14c91b6c ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n|\n| [...] ...................................... 3 transaction outputs omitted\n|\n|\n| Transaction output #5\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 426614716e94812d483bca32374f6ac8\n| | | | cd121b0d ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n|\n| [...] ...................................... 9 transaction outputs omitted\n|\n|\n| Transaction output #15\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | f01197177de2358928196a543b2bbd97\n| | | | 3c2ab002 ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| 00000000 ................................... locktime: 0 (a block height)\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dsi\"></div>dsi<a class=\"fa fa-anchor\" href=\"#section-dsi\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dsi\"><code>dsi</code> message</a> replies to a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsq\"><code>dsq</code> message</a> that has the Ready field set to 0x01. The <a href=\"core-ref-p2p-network-privatesend-messages#section-dsi\"><code>dsi</code> message</a> contains user &lt;&lt;glossary:inputs&gt;&gt; for mixing along with the &lt;&lt;glossary:outputs&gt;&gt; and a collateral. Once the &lt;&lt;glossary:masternode&gt;&gt; receives <a href=\"core-ref-p2p-network-privatesend-messages#section-dsi\"><code>dsi</code> messages</a> from all members of the pool, it responds with a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsf\"><code>dsf</code> message</a>.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>?</td>\n<td>vecTxDSIn</td>\n<td>CTxDSIn[]</td>\n<td>Required</td>\n<td>Vector of users inputs (CTxDSIn serialization is equal to CTxIn serialization)</td>\n</tr>\n<tr>\n<td>216+</td>\n<td>txCollateral</td>\n<td><a href=\"core-ref-p2p-network-data-messages#section-tx\"><code>tx</code> message</a></td>\n<td>Required</td>\n<td>Collateral transaction which is used to prevent misbehavior and also to charge fees randomly</td>\n</tr>\n<tr>\n<td>?</td>\n<td>vecTxDSOut</td>\n<td>CTxDSOut[]</td>\n<td>Required</td>\n<td>Vector of user outputs (CTxDSOut serialization is equal to CTxOut serialization)</td>\n</tr>\n</tbody>\n</table></div>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsi\"><code>dsi</code> message</a>. (The message header has been omitted.)</p>\n<pre><code class=\"lang-text\">User inputs\n| 03 ......................................... Number of inputs: 3\n|\n| Transaction input #1\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 02000000 ................................. Outpoint index number: 2\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #2\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0f000000 ................................. Outpoint index number: 15\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #3\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0d000000 ................................. Outpoint index number: 13\n| |\n| | 00 ....................................... Bytes in sig. script: 0\n| | .......................................... Secp256k1 signature: None\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n\nCollateral Transaction\n| 01000000 ................................... Version: 1\n|\n| 01 ......................................... Number of inputs: 1\n|\n| Previous Output\n| |\n| | 83bd1980c71c38f035db9b14d7f934f7\n| | d595181b3436e36289902619f3f7d383 ......... Outpoint TXID\n| | 00000000 ................................. Outpoint index number: 0\n| |\n| | 6b ....................................... Bytes in sig. script: 107\n| |\n| | 483045022100f4d8fa0ae4132235fecd540a\n| | 62715ccfb1c9a97f8698d066656e30bb1e1e\n| | 06b90220301b4cc93f38950a69396ed89dfc\n| | c08e72ec8e6e7169463592a0bf504946d98b\n| | 812102fa4b9c0f9e76e06d57c75cab9c8368\n| | a62a1ce8db6eb0c25c3e0719ddd9ab549c ....... Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| 01 ......................................... Number of outputs: 1\n|\n| | e093040000000000 ......................... 300,000 Duffs (0.003 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | f8956a4eb0e53b05ee6b30edfd2770b5\n| | | | 26c1f1bb ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| 00000000 ................................... locktime: 0 (a block height)\n\nUser outputs\n| 03 ......................................... Number of outputs: 3\n|\n| Transaction output #1\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 14826d7ba05cf76588a5503c03951dc9\n| | | | 14c91b6c ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| Transaction output #2\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | f01197177de2358928196a543b2bbd97\n| | | | 3c2ab002 ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| Transaction output #3\n| | e8e4f50500000000 ......................... 100,001,000 Duffs (1.0001 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 426614716e94812d483bca32374f6ac8\n| | | | cd121b0d ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dsq\"></div>dsq<a class=\"fa fa-anchor\" href=\"#section-dsq\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dsq\"><code>dsq</code> message</a> provides &lt;&lt;glossary:nodes&gt;&gt; with mixing queue details and notifies them when to sign final mixing TX messages.</p>\n<p>If the message indicates the queue is not ready, the node verifies the message is valid. It also verifies that the &lt;&lt;glossary:masternode&gt;&gt; is not flooding the &lt;&lt;glossary:network&gt;&gt; with <a href=\"core-ref-p2p-network-privatesend-messages#section-dsq\"><code>dsq</code> messages</a> in an attempt to dominate the queuing process. It then relays the message to its connected &lt;&lt;glossary:peers&gt;&gt;.</p>\n<p>If the message indicates the queue is ready, the node responds with a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsi\"><code>dsi</code> message</a>.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>nDenom</td>\n<td>int</td>\n<td>Required</td>\n<td>Denomination allowed in this mixing session</td>\n</tr>\n<tr>\n<td>36</td>\n<td>masternodeOutPoint</td>\n<td>outPoint</td>\n<td>Required</td>\n<td>The unspent outpoint of the masternode (holding 1000 DASH) which is hosting this session</td>\n</tr>\n<tr>\n<td>8</td>\n<td>nTime</td>\n<td>int64_t</td>\n<td>Required</td>\n<td>Time this <a href=\"core-ref-p2p-network-privatesend-messages#section-dsq\"><code>dsq</code> message</a> was created</td>\n</tr>\n<tr>\n<td>1</td>\n<td>fReady</td>\n<td>bool</td>\n<td>Required</td>\n<td>Indicates if the mixing pool is ready to be executed</td>\n</tr>\n<tr>\n<td>97</td>\n<td>vchSig</td>\n<td>char[]</td>\n<td>Required</td>\n<td><em>ECDSA signature (65 bytes) prior to <a href=\"https://github.com/dashpay/dips/blob/master/dip-0003.md\">DIP3</a> activation</em><br><br>BLS Signature of this message by masternode verifiable via pubKeyMasternode (Length (1 byte) + Signature (96 bytes))</td>\n</tr>\n</tbody>\n</table></div>\n<p>Denominations (per <a href=\"https://github.com/dashpay/dash/blob/7d8eab2641023c78a72ccd6efc99fc35fd030a46/src/privatesend.cpp#L201-L221\"><code>src/privatesend.cpp</code></a>)</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Denomination</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>10 Dash</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1 Dash</td>\n</tr>\n<tr>\n<td>4</td>\n<td>0.1 Dash</td>\n</tr>\n<tr>\n<td>8</td>\n<td>0.01 Dash</td>\n</tr>\n<tr>\n<td>16</td>\n<td>0.001 Dash</td>\n</tr>\n</tbody>\n</table></div>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsq\"><code>dsq</code> message</a>. (The message header has been omitted.) Note that the &#39;Required &lt;&lt;glossary:inputs&gt;&gt;&#39; bytes will only be preset if &lt;&lt;glossary:Spork&gt;&gt; 6 is active and protocol version =&gt; 70209.</p>\n<pre><code class=\"lang-text\">01000000 ............................. Denomination: 10 Dash (1)\n\nMasternode Outpoint\n| a383a2489aedccfab4bb41368d1c8ee3\n| 10d9ee90cb3d181880ce4e0cdb36ecb7\n| 0f000000 ........................... Outpoint index number: 15\n\n10b4235c00000000 ..................... Create Time: 2018-12-26 17:02:08 UTC\n\n00 ................................... Ready: 0\n\n60 ................................... Signature length: 96\n\n0409a1349869a02e90e6e1f6d92bf995\n27a72542fed987f6d2719596973d89e6\n74605a3585b1335650f1555f7576061d\n110fb72b3308e378ac8e8fbebeeffdb4\n9b2a6562ad965bb3c3fd3f8e68483fdb\n0d1401e2264071a74fc01d51e943ce9f ..... Masternode BLS Signature\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dss\"></div>dss<a class=\"fa fa-anchor\" href=\"#section-dss\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dss\"><code>dss</code> message</a> replies to a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsf\"><code>dsf</code> message</a> sent by the &lt;&lt;glossary:masternode&gt;&gt; managing the mixing session.  The <a href=\"core-ref-p2p-network-privatesend-messages#section-dsf\"><code>dsf</code> message</a> provides the unsigned transaction &lt;&lt;glossary:inputs&gt;&gt; for all members of the mixing pool. Each &lt;&lt;glossary:node&gt;&gt; verifies that the final transaction matches what is expected. They then sign any transaction inputs belonging to them and then relay them to the masternode via this <a href=\"core-ref-p2p-network-privatesend-messages#section-dss\"><code>dss</code> message</a>.</p>\n<p>Once the masternode receives and validates all <a href=\"core-ref-p2p-network-privatesend-messages#section-dss\"><code>dss</code> messages</a>, it issues a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsc\"><code>dsc</code> message</a>. If a node does not respond to a <a href=\"core-ref-p2p-network-privatesend-messages#section-dsf\"><code>dsf</code> message</a> with signed transaction inputs, it may forfeit the collateral it provided. This is to minimize malicious behavior.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>#</td>\n<td>inputs</td>\n<td>txIn[]</td>\n<td>Required</td>\n<td>Signed inputs for mixing session</td>\n</tr>\n</tbody>\n</table></div>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dss\"><code>dss</code> message</a>. (The message header has been omitted.) Note that these will be the same transaction inputs that were supplied (unsiged) in the <a href=\"core-ref-p2p-network-privatesend-messages#section-dsi\"><code>dsi</code> message</a>.</p>\n<pre><code class=\"lang-text\">User inputs\n| 03 ......................................... Number of inputs: 3\n|\n| Transaction input #1\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 02000000 ................................. Outpoint index number: 2\n| |\n| | 6b ....................................... Bytes in sig. script: 107\n| | 483045022100b3a861dca83463aabf5e4a14a286\n| | 1b9c2e51e0dedd8a13552e118bf74eb4a68d0220\n| | 4a91c416768d27e6bdcfa45d28129841dbcc728b\n| | f0bbec9701cfc4e743d23adf812102cc4876c9da\n| | 84417dec37924e0479205ce02529bb0ba88631d3\n| | ccc9cfcdf00173 ........................... Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #2\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0f000000 ................................. Outpoint index number: 15\n| |\n| | 6a ....................................... Bytes in sig. script: 106\n| | 4730440220268f3b7799ca4ec132e511a4756019\n| | c56016f7771561dc0597d84e9b1fa9fc08022067\n| | 5199b9b3f9a7eba69b7bbb4aa2a413d955762f9d\n| | 68be5a9c02c6772c8078fd812103258925f0dbbf\n| | 9d5aa20a675459fa2e86c9f9061dee82a00dca73\n| | 9080f051d891 ............................. Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| Transaction input #3\n| |\n| | 36bdc3796c5630225f2c86c946e2221a\n| | 9958378f5d08da380895c2656730b5c0 ......... Outpoint TXID\n| | 0d000000 ................................. Outpoint index number: 13\n| |\n| | 6a ....................................... Bytes in sig. script: 106\n| | 4730440220404bb067e0c94a2bd75c6798c1af8c\n| | 95e8b92f5e437cff2bcb4660f24a34d06d02203a\n| | b707bd371a84a9e7bd1fbe3b0c939fd23e0a9165\n| | de78809b9310372a4b3879812103a9a6c5204811\n| | a8cab04b595ed622a1fed6efd3b2d888fadd0c97\n| | 3737fcdf2bc7 ............................. Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dssu\"></div>dssu<a class=\"fa fa-anchor\" href=\"#section-dssu\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dssu\"><code>dssu</code> message</a> provides a mixing pool status update.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>nMsgSessionID</td>\n<td>int</td>\n<td>Required</td>\n<td>Session ID</td>\n</tr>\n<tr>\n<td>4</td>\n<td>nMsgState</td>\n<td>int</td>\n<td>Required</td>\n<td>Current state of mixing process</td>\n</tr>\n<tr>\n<td>4</td>\n<td>nMsgEntriesCount</td>\n<td>int</td>\n<td>Required</td>\n<td><strong><em>Deprecated in Dash Core 0.15.0</em></strong><br><br>Number of entries in the mixing pool</td>\n</tr>\n<tr>\n<td>4</td>\n<td>nMsgStatusUpdate</td>\n<td>int</td>\n<td>Required</td>\n<td>Update state and/or signal if entry was accepted or not</td>\n</tr>\n<tr>\n<td>4</td>\n<td>nMsgMessageID</td>\n<td>int</td>\n<td>Required</td>\n<td>ID of the typical masternode reply message</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>Pool State</strong></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>State</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td><code>POOL_STATE_IDLE</code></td>\n</tr>\n<tr>\n<td>1</td>\n<td><code>POOL_STATE_QUEUE</code></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code>POOL_STATE_ACCEPTING_ENTRIES</code></td>\n</tr>\n<tr>\n<td>3</td>\n<td><code>POOL_STATE_SIGNING</code></td>\n</tr>\n<tr>\n<td>4</td>\n<td><code>POOL_STATE_ERROR</code></td>\n</tr>\n<tr>\n<td><del>5</del></td>\n<td><del><code>POOL_STATE_SUCCESS</code></del> <strong><em>Deprecated in Dash Core 0.16.0</em></strong></td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>Pool Status Update</strong></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Status</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td><code>STATUS_REJECTED</code></td>\n</tr>\n<tr>\n<td>1</td>\n<td><code>STATUS_ACCEPTED</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>Message IDs</strong></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0x00</td>\n<td><code>ERR_ALREADY_HAVE</code></td>\n</tr>\n<tr>\n<td>0x01</td>\n<td><code>ERR_DENOM</code></td>\n</tr>\n<tr>\n<td>0x02</td>\n<td><code>ERR_ENTRIES_FULL</code></td>\n</tr>\n<tr>\n<td>0x03</td>\n<td><code>ERR_EXISTING_TX</code></td>\n</tr>\n<tr>\n<td>0x04</td>\n<td><code>ERR_FEES</code></td>\n</tr>\n<tr>\n<td>0x05</td>\n<td><code>ERR_INVALID_COLLATERAL</code></td>\n</tr>\n<tr>\n<td>0x06</td>\n<td><code>ERR_INVALID_INPUT</code></td>\n</tr>\n<tr>\n<td>0x07</td>\n<td><code>ERR_INVALID_SCRIPT</code></td>\n</tr>\n<tr>\n<td>0x08</td>\n<td><code>ERR_INVALID_TX</code></td>\n</tr>\n<tr>\n<td>0x09</td>\n<td><code>ERR_MAXIMUM</code></td>\n</tr>\n<tr>\n<td>0x0A (10)</td>\n<td><code>ERR_MN_LIST</code></td>\n</tr>\n<tr>\n<td>0x0B (11)</td>\n<td><code>ERR_MODE</code></td>\n</tr>\n<tr>\n<td>0x0C (12)</td>\n<td><code>ERR_NON_STANDARD_PUBKEY</code> (Not used)</td>\n</tr>\n<tr>\n<td>0x0D (13)</td>\n<td><code>ERR_NOT_A_MN</code> (Not used)</td>\n</tr>\n<tr>\n<td>0x0E (14)</td>\n<td><code>ERR_QUEUE_FULL</code></td>\n</tr>\n<tr>\n<td>0x0F (15)</td>\n<td><code>ERR_RECENT</code></td>\n</tr>\n<tr>\n<td>0x10 (16)</td>\n<td><code>ERR_SESSION</code></td>\n</tr>\n<tr>\n<td>0x11 (17)</td>\n<td><code>ERR_MISSING_TX</code></td>\n</tr>\n<tr>\n<td>0x12 (18)</td>\n<td><code>ERR_VERSION</code></td>\n</tr>\n<tr>\n<td>0x13 (19)</td>\n<td><code>MSG_NOERR</code></td>\n</tr>\n<tr>\n<td>0x14 (20)</td>\n<td><code>MSG_SUCCESS</code></td>\n</tr>\n<tr>\n<td>0x15 (21)</td>\n<td><code>MSG_ENTRIES_ADDED</code></td>\n</tr>\n<tr>\n<td>0x16 (22)</td>\n<td><code>ERR_SIZE_MISMATCH</code></td>\n</tr>\n</tbody>\n</table></div>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dssu\"><code>dssu</code> message</a>. (The message header has been omitted.)</p>\n<pre><code class=\"lang-text\">86140c00 ............................. Session ID: 791686\n02000000 ............................. State: POOL_STATE_ACCEPTING_ENTRIES (2)\n01000000 ............................. Status Update: STATUS_ACCEPTED (1)\n13000000 ............................. Message ID: MSG_NOERR (0x13)\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dstx\"></div>dstx<a class=\"fa fa-anchor\" href=\"#section-dstx\"></a></h1>\n<p>The <a href=\"core-ref-p2p-network-privatesend-messages#section-dstx\"><code>dstx</code> message</a> allows &lt;&lt;glossary:masternodes&gt;&gt; to broadcast subsidized transactions without fees (to provide security in mixing).</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Bytes</th>\n<th>Name</th>\n<th>Data type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>#</td>\n<td>tx</td>\n<td><a href=\"core-ref-p2p-network-data-messages#section-tx\"><code>tx</code> message</a></td>\n<td>Required</td>\n<td>The transaction</td>\n</tr>\n<tr>\n<td>36</td>\n<td>masternode<br>OutPoint</td>\n<td>outPoint</td>\n<td>Required</td>\n<td>The unspent outpoint of the masternode (holding 1000 DASH) which is signing the message</td>\n</tr>\n<tr>\n<td>97</td>\n<td>vchSig</td>\n<td>char[]</td>\n<td>Required</td>\n<td><em>ECDSA signature (65 bytes) prior to <a href=\"https://github.com/dashpay/dips/blob/master/dip-0003.md\">DIP3</a> activation</em><br><br>BLS Signature of this message by masternode verifiable via pubKeyMasternode (Length (1 byte) + Signature (96 bytes))</td>\n</tr>\n<tr>\n<td>8</td>\n<td>sigTime</td>\n<td>int64_t</td>\n<td>Require</td>\n<td>Time this message was signed</td>\n</tr>\n</tbody>\n</table></div>\n<p>The following annotated hexdump shows a <a href=\"core-ref-p2p-network-privatesend-messages#section-dstx\"><code>dstx</code> message</a>. (The message header has been omitted.)</p>\n<pre><code class=\"lang-text\">Transaction Message\n| 0200 ....................................... Version: 2\n| 0000 ....................................... Type: 0 (Classical Tx)\n|\n| 05 ......................................... Number of inputs: 5\n|\n| Transaction input #1\n| |\n| | 0adb782b2170018eada54534be880e70\n| | 74ed8307a566731119b1782362af43ad ......... Outpoint TXID\n| | 05000000 ................................. Outpoint index number: 5\n| |\n| | 6b ....................................... Bytes in sig. script: 107\n| | 483045022100b1243fcba562a0f1d7c4\n| | cc3b320645dfa96c6412f368ccdbc1b7\n| | acb6b0aa1db502201606c81b0d79f52f\n| | 47bcb071b64c37f72dd1378efa67a2de\n| | dd86c44d393668fa812102d6ff581270\n| | 632f5e972b0418ee871867b5c04b6eae\n| | 3458ad135ad8f1daaa4fc2 ................... Secp256k1 signature\n| |\n| | ffffffff ................................. Sequence number: UINT32_MAX\n|\n| [...] ...................................... 4 more transaction inputs omitted\n|\n|\n| 05 ......................................... Number of outputs: 5\n|\n| Transaction output #1\n| | 10f19a3b00000000 ......................... Duffs (10.0001000 Dash)\n| |\n| | 19 ....................................... Bytes in pubkey script: 25\n| | | 76 ..................................... OP_DUP\n| | | a9 ..................................... OP_HASH160\n| | | 14 ..................................... Push 20 bytes as data\n| | | | 3eb7ae776b096231de9eca42dd57a677\n| | | | d3b05452 ............................. PubKey hash\n| | | 88 ..................................... OP_EQUALVERIFY\n| | | ac ..................................... OP_CHECKSIG\n|\n| [...] ...................................... 4 more transaction outputs omitted\n|\n|\n| 00000000 ................................... locktime: 0 (a block height)\n\nMasternode Unspent Outpoint\n| ccfbe4e7c220264cb0a8bfa5e91c6957\n| 33c255384790e80e891a0d8f56a59d9e ......... Outpoint TXID\n| 01000000 ................................. Outpoint index number: 1\n\n60 ......................................... Signature length: 96\n\n94c8e427f448789f58cda17445e76c64\nd0efa7c089addcb378f9b8d04b72f499\na4e8e616b5011886b9cffcce29e17fc1\n10ad8609c3ee1a3207b882e7ff58400f\n42d6e6544108b349da2cc5e716a5f266\n4a2dc96b0f080effd5349f2ae06ac234 .......... Masternode Signature\n\n59b4235c00000000 .......................... Sig Time: 2018-12-26 17:03:21 UTC\n</code></pre>\n\n</div>"
}