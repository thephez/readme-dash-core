{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Generating RPCs",
    "slug": "core-api-ref-remote-procedure-calls-generating",
    "category": "Core API Reference"
   }
  ]
 },
 "title": "Evo RPCs",
 "updates": [],
 "type": "basic",
 "slug": "core-api-ref-remote-procedure-calls-evo",
 "excerpt": "",
 "body": "# BLS\n\n*Added in Dash Core 0.13.0*\n\nThe [`bls` RPC](core-api-ref-remote-procedure-calls-evo#section-bls) provides a set of commands to execute BLS-related actions.\n\n## BLS Generate\n\nThe `bls generate` RPC creates a new BLS secret/public key pair.\n\n*Parameters: none*\n\n*Result---a secret/public key pair*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | BLS key pair\n\u2192<br>`secret` | string (hex) | Required<br>(exactly 1) | A BLS secret key\n\u2192<br>`public` | string (hex) | Required<br>(exactly 1) | A BLS public key\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet bls generate\n```\n\nResult:\n``` json\n{\n  \"secret\": \"52f35cd3d977a505485f2474e7e71ef3f60f859603d72ad6b0fa7f7bd163e144\",\n  \"public\": \"885d01d746c3e4d2093b0975de2d8c1f3e5a2c3e8fdaaed929f86fc9fbb278a095248163c101a2456650b415776b7990\"\n}\n```\n\n## BLS FromSecret\n\nThe `bls fromsecret` RPC parses a BLS secret key and returns the secret/public key pair.\n\n*Parameter #1---secret key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`secret` | string (hex) | Required<br>(exactly 1) | The BLS secret key\n\n*Result---the secret/public key pair*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | BLS key pair\n\u2192<br>`secret` | string (hex) | Required<br>(exactly 1) | A BLS secret key\n\u2192<br>`public` | string (hex) | Required<br>(exactly 1) | A BLS public key\n\n*Example from Dash Core 0.14.0*\n\n``` bash\ndash-cli -testnet bls fromsecret 52f35cd3d977a505485f2474e7e71ef3f60f859603d72ad6b0fa7f7bd163e144\n```\n\nResult:\n``` json\n{\n  \"secret\": \"52f35cd3d977a505485f2474e7e71ef3f60f859603d72ad6b0fa7f7bd163e144\",\n  \"public\": \"885d01d746c3e4d2093b0975de2d8c1f3e5a2c3e8fdaaed929f86fc9fbb278a095248163c101a2456650b415776b7990\"\n}\n```\n\n*See also: none*\n\n# ProTx\n\n*Added in Dash Core 0.13.0*\n\nThe [`protx` RPC](core-api-ref-remote-procedure-calls-evo#section-pro-tx) provides a set of commands to execute ProTx related actions.\n\n## ProTx Register\n\nThe `protx register` RPC creates a ProRegTx referencing an existing collateral and and sends it to the network.\n\n*Parameter #1---collateral address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`collateralHash` | string (hex) | Required<br>(exactly 1) | The collateral transaction hash\n\n*Parameter #2---collateral index*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`collateralIndex` | string (hex) | Required<br>(exactly 1) | The collateral transaction output index\n\n*Parameter #3---IP Address and port*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`ipAndPort` | string | Required<br>(exactly 1) | IP and port in the form 'IP:PORT'.<br>Must be unique on the network.<br>Can be set to '0', which will require a ProUpServTx afterwards.\n\n*Parameter #4---owner address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`ownerAddress` | string (hex) | Required<br>(exactly 1) | The owner key used for payee updates and proposal voting. The private key belonging to this address be known in your wallet. The address must be unused and must differ from the `collateralAddress`.\n\n*Parameter #5---operator public key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorPubKey` | string (hex) | Required<br>(exactly 1) |  The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.\n\n*Parameter #6---voting address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`votingAddress` | string (hex) | Required<br>(exactly 1) | The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, `ownerAddress` will be used.\n\n*Parameter #7---operator reward*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorReward` | number | Required<br>(exactly 1) | The fraction in % to share with the operator. If non-zero, `ipAndPort` must be zero as well.<br>The value must be between '0.00' and '100.00'.\n\n*Parameter #8---payout address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`payoutAddress` | string | Required<br>(exactly 1) | The Dash address to use for masternode reward payments.\n\n*Parameter #9---fee source address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`feeSourceAddress` | string | Optional<br>(0 or 1) | If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, `payoutAddress` will be used. The private key belonging to this address must be known in your wallet.\n\n*Result---provider registration transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string (hex) | Required<br>(exactly 1) | Provider registration transaction (ProRegTx) hash\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet protx register\\\n 8b2eab3413abb6e04d17d1defe2b71039ba6b6f72ea1e5dab29bb10e7b745948 1\\\n 2.3.4.5:2345 yNLuVTXJbjbxgrQX5LSMi7hV19We8hT2d6\\\n 88d719278eef605d9c19037366910b59bc28d437de4a8db4d76fda6d6985dbdf10404fb9bb5cd0e8c22f4a914a6c5566\\\n yNLuVTXJbjbxgrQX5LSMi7hV19We8hT2d6 5 yjJJLkYDUN6X8gWjXbCoKEXoiLeKxxMMRt\n```\n\nResult:\n``` bash\n61e6d780178d353940c4cb9b3073ac0c50792bbcf0b15c1750d2028b71e34929\n```\n\n## ProTx Register Fund\n\nThe `protx register_fund` RPC creates and funds a ProRegTx with the 1,000 DASH necessary for a masternode and then sends it to the network.\n\n*Parameter #1---collateral address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`collateralAddress` | string (hex) | Required<br>(exactly 1) | The Dash address to send the collateral to\n\n*Parameter #2---IP Address and port*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`ipAndPort` | string | Required<br>(exactly 1) | IP and port in the form 'IP:PORT'.<br>Must be unique on the network.<br>Can be set to '0', which will require a ProUpServTx afterwards.\n\n*Parameter #3---owner address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`ownerAddress` | string (hex) | Required<br>(exactly 1) | The owner key used for payee updates and proposal voting. The private key belonging to this address be known in your wallet. The address must be unused and must differ from the `collateralAddress`.\n\n*Parameter #4---operator public key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorPubKey` | string (hex) | Required<br>(exactly 1) |  The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.\n\n*Parameter #5---voting address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`votingAddress` | string (hex) | Required<br>(exactly 1) | The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, `ownerAddress` will be used.\n\n*Parameter #6---operator reward*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorReward` | number | Required<br>(exactly 1) | The fraction in % to share with the operator.<br>The value must be between '0.00' and '100.00'.\n\n*Parameter #7---payout address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`payoutAddress` | string | Required<br>(exactly 1) | The Dash address to use for masternode reward payments.\n\n*Parameter #8---fund address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`fundAddress` | string | Optional<br>(0 or 1) | If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, `payoutAddress` will be used. The private key belonging to this address must be known in your wallet.\n\n*Result---provider registration transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string (hex) | Required<br>(exactly 1) | Provider registration transaction (ProRegTx) hash\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet protx register_fund yakx4mMRptKhgfjedNzX5FGQq7kSSBF2e7\\\n 3.4.5.6:3456 yX2cDS4kcJ4LK4uq9Hd4TG7kURV3sGLZrw\\\n 0e02146e9c34cfbcb3f3037574a1abb35525e2ca0c3c6901dbf82ac591e30218d1711223b7ca956edf39f3d984d06d51\\\n yX2cDS4kcJ4LK4uq9Hd4TG7kURV3sGLZrw 5 yakx4mMRptKhgfjedNzX5FGQq7kSSBF2e7\n```\n\nResult:\n``` bash\nba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\n```\n\n## ProTx Register Prepare\n\nThe `protx register_prepare` RPC creates an unsigned ProTx and\nreturns it. The ProTx must be signed externally with the collateral key and then\npassed to \"protx register_submit\". The prepared transaction will also contain inputs\nand outputs to cover fees.\n\n*Parameter #1---collateral address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`collateralHash` | string (hex) | Required<br>(exactly 1) | The collateral transaction hash\n\n*Parameter #2---collateral index*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`collateralIndex` | string (hex) | Required<br>(exactly 1) | The collateral transaction output index\n\n*Parameter #3---IP Address and port*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`ipAndPort` | string | Required<br>(exactly 1) | IP and port in the form 'IP:PORT'.<br>Must be unique on the network.<br>Can be set to '0', which will require a ProUpServTx afterwards.\n\n*Parameter #4---owner address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`ownerAddress` | string (hex) | Required<br>(exactly 1) | The owner key used for payee updates and proposal voting. The private key belonging to this address be known in your wallet. The address must be unused and must differ from the `collateralAddress`.\n\n*Parameter #5---operator public key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorPubKey` | string (hex) | Required<br>(exactly 1) |  The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.\n\n*Parameter #6---voting address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`votingAddress` | string (hex) | Required<br>(exactly 1) | The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, `ownerAddress` will be used.\n\n*Parameter #7---operator reward*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorReward` | number | Required<br>(exactly 1) | The fraction in % to share with the operator.<br>The value must be between '0.00' and '100.00'.\n\n*Parameter #8---payout address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`payoutAddress` | string (hex) | Required<br>(exactly 1) | The Dash address to use for masternode reward payments.\n\n*Parameter #9---fee source address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`feeSourceAddress` | string | Optional<br>(0 or 1) | If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, `payoutAddress` will be used. The private key belonging to this address must be known in your wallet.\n\n*Result---unsigned transaction and message to sign*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | JSON object containing an unsigned provider transaction and the message to be signed externally, or JSON `null` if an error occurred\n\u2192<br>`tx` | string (hex) | Required<br>(exactly 1) | The serialized ProRegTx in hex format\n\u2192<br>`collateralAddress` | string (hex) | Required<br>(exactly 1) | The collateral address\n\u2192<br>`signMessage` | string (base64) | Required<br>(exactly 1) | The string message that needs to be signed with the collateral key.\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet protx register_prepare\\\n df41e398bb245e973340d434d386f431dbd69735a575721b0b6833856e7d31ec 1 \\\n 9.8.7.6:9876 yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz\\\n 06849865d01e4f73a6d5a025117e48f50b897e14235800501c8bfb8a6365cc8dbf5ddb67a3635d0f1dcc7d46a7ee280c\\\n yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz 1.2 yjJJLkYDUN6X8gWjXbCoKEXoiLeKxxMMRt\n```\n\nResult:\n``` json\n{\n  \"tx\": \"0300010001912b88876fee2f8e43e23b5e81276c163cf23d867bad4148170cb106ef9023700000000000feffffff0125623ba40b0000001976a914736e155c1039a269d4019c66219d2a18f0fee27588ac00000000d1010000000000ec317d6e8533680b1b7275a53597d6db31f486d334d44033975e24bb98e341df0100000000000000000000000000ffff090807062694ca6b243168b30461d1f19e2bb89a965a5bac067e06849865d01e4f73a6d5a025117e48f50b897e14235800501c8bfb8a6365cc8dbf5ddb67a3635d0f1dcc7d46a7ee280cca6b243168b30461d1f19e2bb89a965a5bac067e78001976a914fc136008111fcc7a05be6cec66f97568727a9e5188ace5f6b70ac55411727e25178bd417b9b03f837ad7155d90ad286f3a427203fb9f00\",\n  \"collateralAddress\": \"yWuKWhDzGQqZL8rw6kGxGrfe6P8bUC2S4f\",\n  \"signMessage\": \"yjJJLkYDUN6X8gWjXbCoKEXoiLeKxxMMRt|120|yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz|yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz|69a49e18c1253b90d39322f7e2f7af74524401bc33a27645e697e74a214e3e1e\"\n}\n```\n\n## ProTx Register Submit\n\nThe `protx register_submit` RPC submits the specified ProTx to the\nnetwork. This command will also sign the inputs of the transaction which were\npreviously added by `protx register_prepare` to cover transaction fees.\n\n*Parameter #1---collateral address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`tx` | string (hex) | Required<br>(exactly 1) | The serialized transaction previously returned by `protx register_prepare`\n\n*Parameter #2---collateral index*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`sig` | string (base64) | Required<br>(exactly 1) | The signature signed with the collateral key. Must be in base64 format.\n\n*Result---provider registration transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string (hex) | Required<br>(exactly 1) | Provider registration transaction (ProRegTx) hash\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet protx register_submit\\\n 03000100012d988526d5d1efd32320023c92eff09c2963dcb021b0de9761\\\n 17e5e37dc7a7870000000000feffffff015f603ba40b0000001976a9140c\\\n 37e07eb5c608961769e6506c23c11e9f9fe00988ac00000000d101000000\\\n 00002d988526d5d1efd32320023c92eff09c2963dcb021b0de976117e5e3\\\n 7dc7a7870100000000000000000000000000ffff05060708162e243dd366\\\n bf4a329968d77eac9fb63481a600938d125e1b7cba03ca2a097e402185e6\\\n 160232ea53e6d62898a3be8617b06ff347d967543228bd9b605547c3d478\\\n b0a838ca243dd366bf4a329968d77eac9fb63481a600938dc4091976a914\\\n e9bf4e6f26fecf1dfc1e04dde43472df378628b888ac6a048e7f645e8adc\\\n 305ccfd8652066046a0702596af13b8ac97803ade256da2900\\\n \\\n H90IvqVtFjZkwLJb08yMEgGixs0/FpcdvwImBcir4cYLJhD3pdX+lKD2GsPl6KNxghVXNk5/HpOdBoWAHo9u++Y=\n```\n\nResult:\n``` bash\n273ce3ebe24183ee4117b10e054cdbb108a3bde5d2f286129e29480d46a3f573\n```\n\n## ProTx List\n\nThe `protx list` RPC returns a list of provider transactions.\n\nLists all ProTxs in your wallet or on-chain, depending on the given type. If\n`type` is not specified, it defaults to `registered`. All types have the optional\nargument `detailed` which if set to `true` will result in a detailed list being\nreturned. If set to `false`, only the hashes of the ProTx will be returned.\n\n*Parameter #1---type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`type` | string | Optional<br>(0 or 1) | The type of ProTxs to list:<br>`registered` - all ProTxs registered at height<br>`valid` - all active/valid ProTxs at height<br>`wallet` - all ProTxs found in the current wallet<br><br>Height defaults to current chain-tip if one is not provided\n\n*Parameter #2---detailed*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`detailed` | bool | Optional<br>(0 or 1) | If set to `false` (default), only ProTx hashes are returned. If set to `true`, a detailed list of ProTx details is returned.\n\n*Parameter #3---height*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`height` | bool | Optional<br>(0 or 1) | List ProTxs from this height (default: current chain tip).\n\n*Result (if `detailed` was `false`)---provider registration transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string (hex): array | Required<br>(exactly 1) | Array of provider transaction (ProTx) hashes\n\n*Result (if `detailed` was `true`)---JSON provider registration transaction details*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | array | Required<br>(exactly 1) | An array of objects each containing a provider transaction, or JSON `null` if an error occurred\n<br>Provider Transaction | object/null | Required<br>(exactly 1) | An object containing a provider transaction\n\u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the provider transaction as hex in RPC byte order\n\u2192<br>`collateralHash` | string (hex) | Required<br>(exactly 1) | The hash of the collateral transaction as hex in RPC byte order\n\u2192<br>`collateralIndex` | number (int) | Required<br>(exactly 1) | The collateral index\n\u2192 \u2192<br>`collateralAddress` | string (hex) | Required<br>(exactly 1) | The collateral address\n\u2192<br>`operatorReward` | number (int) | Required<br>(exactly 1) | The operator reward %\n\u2192<br>`state` | object/null | Required<br>(exactly 1) | An object containing a provider transaction state\n\u2192 \u2192<br>`service` | string | Required<br>(exactly 1) | The masternode's IP:Port\n\u2192 \u2192<br>`registeredHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode was registered\n\u2192 \u2192<br>`lastPaidHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode was last paid\n\u2192 \u2192<br>`PoSePenalty` | number (int) | Required<br>(exactly 1) | The masternode's proof of service penalty\n\u2192 \u2192<br>`PoSeRevivedHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode recovered from a proof of service ban\n\u2192 \u2192<br>`PoSeBanHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode was banned for proof of service violations\n\u2192 \u2192<br>`revocationReason` | number (int) | Required<br>(exactly 1) | The reason for a ProUpRegTx revocation\n\u2192 \u2192<br>`ownerAddress` | string (hex) | Required<br>(exactly 1) | The owner address\n\u2192 \u2192<br>`votingAddress` | string (hex) | Required<br>(exactly 1) | The voting address\n\u2192 \u2192<br>`payoutAddress` | string (hex) | Required<br>(exactly 1) | The owner's payout address\n\u2192 \u2192<br>`pubKeyOperator` | string (hex) | Required<br>(exactly 1) | The operator public key\n\u2192 \u2192<br>`operatorPayoutAddress` | string (hex) | Required<br>(exactly 1) | The operator's payout address\n\u2192<br>`confirmations` | number (int) | Required<br>(exactly 1) | The number of confirmations this ProTx has\n\u2192<br>`wallet` | object/null | Required<br>(exactly 1) | An object containing a wallet details related to this ProTx\n\u2192 \u2192<br>`hasOwnerKey` | bool | Required<br>(exactly 1) | The owner key is present in this wallet\n\u2192 \u2192<br>`hasOperatorKey` | bool | Required<br>(exactly 1) | The operator key is present in this wallet\n\u2192 \u2192<br>`hasVotingKey` | bool | Required<br>(exactly 1) | The voting key is present in this wallet\n\u2192 \u2192<br>`ownsCollateral` | bool | Required<br>(exactly 1) | The collateral is owned by this wallet\n\u2192 \u2192<br>`ownsPayeeScript` | bool | Required<br>(exactly 1) | The payee script is owned by this wallet\n\u2192 \u2192<br>`ownsOperatorRewardScript` | bool | Required<br>(exactly 1) | The operator reward script is owned by this wallet\n\u2192<br>`metaInfo` | object/null | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>An object containing a metainfo related to this ProTx\n\u2192 \u2192<br>`lastDSQ` | string | Required<br>(exactly 1) | The owner key is present in this wallet\n\u2192 \u2192<br>`mixingTxCount` | string | Required<br>(exactly 1) | The operator key is present in this wallet\n\u2192 \u2192<br>`lastOutboundAttempt` | integer | Required<br>(exactly 1) | Unix epoch time of the last outbound attempted\n\u2192 \u2192<br>`lastOutboundAttemptElapsed` | integer | Required<br>(exactly 1) | Elapsed time since last outbound attempt\n\u2192 \u2192<br>`lastOutboundSuccess` | integer | Required<br>(exactly 1) |  Unix epoch time of the last successful outbound connection\n\u2192 \u2192<br>`lastOutboundSuccessElapsed` | integer | Required<br>(exactly 1) | Elapsed time since last successful outbound attempt\n\n*Example from Dash Core 0.16.0*\n\n``` bash\ndash-cli -testnet protx list\n```\n\nResult:\n``` json\n[\n  \"2b4a07a9b04dc42a0c19b85edb60954a27acaadfe3ee21d0171385778f34e1c2\",\n  \"61e6d780178d353940c4cb9b3073ac0c50792bbcf0b15c1750d2028b71e34929\",\n  \"ca193751f3cbed2aa4f1b33b0acc48c7ed8b9a3679858d69cf23157a4f545176\",\n  \"ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\"\n]\n```\n\nList of ProTxs which are active/valid at the given chain height.\n\n``` bash\ndash-cli -testnet protx list valid false 7090\n```\n\nResult:\n``` json\n[\n  \"c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f\"\n]\n```\n\nDetailed list of ProTxs which are active/valid at the given chain height.\n\n``` bash\ndash-cli -testnet protx list valid true 7090\n```\n\nResult:\n``` json\n[\n  {\n    \"proTxHash\": \"c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f\",\n    \"collateralHash\": \"e3270ff48c4b802d56ee58d3d53777f7f9c289964e4df0842518075fc81345b1\",\n    \"collateralIndex\": 3,\n    \"collateralAddress\": \"yYpzTXjVx7A5uohsmW8sRy7TJp4tihVuZg\",\n    \"operatorReward\": 0,\n    \"state\": {\n      \"service\": \"173.61.30.231:19013\",\n      \"registeredHeight\": 7090,\n      \"lastPaidHeight\": 0,\n      \"PoSePenalty\": 0,\n      \"PoSeRevivedHeight\": -1,\n      \"PoSeBanHeight\": -1,\n      \"revocationReason\": 0,\n      \"ownerAddress\": \"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\",\n      \"votingAddress\": \"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\",\n      \"payoutAddress\": \"yU3UdrmS6KpWwBDLQTkp1KjXePwWsMbYdj\",\n      \"pubKeyOperator\": \"8700add55a28ef22ec042a2f28e25fb4ef04b3024a7c56ad7eed4aebc736f312d18f355370dfb6a5fec9258f464b227e\"\n    },\n    \"confirmations\": 292830,\n    \"wallet\": {\n      \"hasOwnerKey\": false,\n      \"hasOperatorKey\": false,\n      \"hasVotingKey\": false,\n      \"ownsCollateral\": false,\n      \"ownsPayeeScript\": false,\n      \"ownsOperatorRewardScript\": false\n    },\n    \"metaInfo\": {\n      \"lastDSQ\": 0,\n      \"mixingTxCount\": 0,\n      \"lastOutboundAttempt\": 0,\n      \"lastOutboundAttemptElapsed\": 1588171141,\n      \"lastOutboundSuccess\": 0,\n      \"lastOutboundSuccessElapsed\": 1588171141\n    }\n  }\n]\n```\n\n## ProTx Info\n\nThe `protx info` RPC returns detailed information about a deterministic masternode.\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | An JSON object containing a provider transaction, or JSON `null` if an error occurred\n<br>Provider Transaction | object/null | Required<br>(exactly 1) | An object containing a provider transaction\n\u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the provider transaction as hex in RPC byte order\n\u2192<br>`collateralHash` | string (hex) | Required<br>(exactly 1) | The hash of the collateral transaction as hex in RPC byte order\n\u2192<br>`collateralIndex` | number (int) | Required<br>(exactly 1) | The collateral index\n\u2192 \u2192<br>`collateralAddress` | string (hex) | Required<br>(exactly 1) | The collateral address\n\u2192<br>`operatorReward` | number (int) | Required<br>(exactly 1) | The operator reward %\n\u2192<br>`state` | object/null | Required<br>(exactly 1) | An object containing a provider transaction state\n\u2192 \u2192<br>`service` | string | Required<br>(exactly 1) | The masternode's IP:Port\n\u2192 \u2192<br>`registeredHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode was registered\n\u2192 \u2192<br>`lastPaidHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode was last paid\n\u2192 \u2192<br>`PoSePenalty` | number (int) | Required<br>(exactly 1) | The masternode's proof of service penalty\n\u2192 \u2192<br>`PoSeRevivedHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode recovered from a proof of service ban\n\u2192 \u2192<br>`PoSeBanHeight` | number (int) | Required<br>(exactly 1) | The height where the masternode was banned for proof of service violations\n\u2192 \u2192<br>`revocationReason` | number (int) | Required<br>(exactly 1) | The reason for a ProUpRegTx revocation\n\u2192 \u2192<br>`ownerAddress` | string (hex) | Required<br>(exactly 1) | The owner address\n\u2192 \u2192<br>`votingAddress` | string (hex) | Required<br>(exactly 1) | The voting address\n\u2192 \u2192<br>`payoutAddress` | string (hex) | Required<br>(exactly 1) | The owner's payout address\n\u2192 \u2192<br>`pubKeyOperator` | string (hex) | Required<br>(exactly 1) | The operator public key\n\u2192 \u2192<br>`operatorPayoutAddress` | string (hex) | Required<br>(exactly 1) | The operator's payout address\n\u2192<br>`confirmations` | number (int) | Required<br>(exactly 1) | The number of confirmations this ProTx has\n\u2192<br>`wallet` | object/null | Required<br>(exactly 1) | An object containing a wallet details related to this ProTx\n\u2192 \u2192<br>`hasOwnerKey` | bool | Required<br>(exactly 1) | The owner key is present in this wallet\n\u2192 \u2192<br>`hasOperatorKey` | bool | Required<br>(exactly 1) | The operator key is present in this wallet\n\u2192 \u2192<br>`hasVotingKey` | bool | Required<br>(exactly 1) | The voting key is present in this wallet\n\u2192 \u2192<br>`ownsCollateral` | bool | Required<br>(exactly 1) | The collateral is owned by this wallet\n\u2192 \u2192<br>`ownsPayeeScript` | bool | Required<br>(exactly 1) | The payee script is owned by this wallet\n\u2192 \u2192<br>`ownsOperatorRewardScript` | bool | Required<br>(exactly 1) | The operator reward script is owned by this wallet\n\u2192<br>`metaInfo` | object/null | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>An object containing a metainfo related to this ProTx\n\u2192 \u2192<br>`lastDSQ` | string | Required<br>(exactly 1) | The owner key is present in this wallet\n\u2192 \u2192<br>`mixingTxCount` | string | Required<br>(exactly 1) | The operator key is present in this wallet\n\u2192 \u2192<br>`lastOutboundAttempt` | integer | Required<br>(exactly 1) | Unix epoch time of the last outbound attempted\n\u2192 \u2192<br>`lastOutboundAttemptElapsed` | integer | Required<br>(exactly 1) | Elapsed time since last outbound attempt\n\u2192 \u2192<br>`lastOutboundSuccess` | integer | Required<br>(exactly 1) |  Unix epoch time of the last successful outbound connection\n\u2192 \u2192<br>`lastOutboundSuccessElapsed` | integer | Required<br>(exactly 1) | Elapsed time since last successful outbound attempt\n\n\n*Example from Dash Core 0.16.0*\n\n``` bash\ndash-cli -testnet protx info\\\n c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f\n```\n\nResult:\n``` json\n{\n  \"proTxHash\": \"c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f\",\n  \"collateralHash\": \"e3270ff48c4b802d56ee58d3d53777f7f9c289964e4df0842518075fc81345b1\",\n  \"collateralIndex\": 3,\n  \"collateralAddress\": \"yYpzTXjVx7A5uohsmW8sRy7TJp4tihVuZg\",\n  \"operatorReward\": 0,\n  \"state\": {\n    \"service\": \"173.61.30.231:19013\",\n    \"registeredHeight\": 7090,\n    \"lastPaidHeight\": 134608,\n    \"PoSePenalty\": 334,\n    \"PoSeRevivedHeight\": 96516,\n    \"PoSeBanHeight\": 134819,\n    \"revocationReason\": 0,\n    \"ownerAddress\": \"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\",\n    \"votingAddress\": \"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\",\n    \"payoutAddress\": \"yU3UdrmS6KpWwBDLQTkp1KjXePwWsMbYdj\",\n    \"pubKeyOperator\": \"8700add55a28ef22ec042a2f28e25fb4ef04b3024a7c56ad7eed4aebc736f312d18f355370dfb6a5fec9258f464b227e\"\n  },\n  \"confirmations\": 292831,\n  \"wallet\": {\n    \"hasOwnerKey\": false,\n    \"hasOperatorKey\": false,\n    \"hasVotingKey\": false,\n    \"ownsCollateral\": false,\n    \"ownsPayeeScript\": false,\n    \"ownsOperatorRewardScript\": false\n  },\n  \"metaInfo\": {\n    \"lastDSQ\": 0,\n    \"mixingTxCount\": 0,\n    \"lastOutboundAttempt\": 0,\n    \"lastOutboundAttemptElapsed\": 1588171300,\n    \"lastOutboundSuccess\": 0,\n    \"lastOutboundSuccessElapsed\": 1588171300\n  }\n}\n```\n\n## ProTx Update Service\n\nThe `protx update_service` RPC creates and sends a ProUpServTx to the network.\n\n*Parameter #1---initial provider registration transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the provider transaction as hex in RPC byte order\n\n*Parameter #2---IP Address and port*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`ipAndPort` | string | Required<br>(exactly 1) | IP and port in the form 'IP:PORT'.<br>Must be unique on the network.\n\n*Parameter #3---operator public key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorPubKey` | string (hex) | Required<br>(exactly 1) |  The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.\n\n*Parameter #4---operator payout address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorPayoutAddress` | string (hex) | Optional<br>(0 or 1) | The Dash address used for operator reward payments. Only allowed when the ProRegTx had a non-zero `operatorReward` value. If set to an empty string, the currently active payout address is reused.\n\n*Parameter #5---fee source address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`feeSourceAddress` | string | Optional<br>(0 or 1) | If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, `operatorPayoutAddress` will be used. The private key belonging to this address must be known in your wallet.\n\n*Result---provider update service transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string (hex) | Required<br>(exactly 1) | Provider update service transaction (ProUpServTx) hash\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet protx update_service\\\n ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\\\n \"4.3.2.1:4321\"\\\n 4da7e1ea30fb9e55c73ad23df0b9d3d34342acb24facf4b19420e1a26ae272d1\n```\n\nResult:\n``` bash\n5b6cfa1bdd3c8b7e0b9550b9c4e809381f81a410bc7f241d3879dd736fd51270\n```\n\n## ProTx Update Registrar\n\nThe `protx update_registrar` RPC creates and sends a ProUpRegTx to the network.\n\n*Parameter #1---initial provider registration transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the provider transaction as hex in RPC byte order\n\n*Parameter #2---operator public key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorPubKey` | string (hex) | Required<br>(exactly 1) | The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode. If set to an empty string, the currently active operator BLS public key is reused.\n\n*Parameter #3---voting address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`votingAddress` | string (hex) | Required<br>(exactly 1) | The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, the currently active voting key address is reused.\n\n*Parameter #4---operator payout address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`payoutAddress` | string (hex) | Optional<br>(0 or 1) | The Dash address to use for masternode reward payments. If set to an empty string, the currently active payout address is reused.\n\n*Parameter #5---fee source address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`feeSourceAddress` | string | Optional<br>(0 or 1) | If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, `payoutAddress` will be used. The private key belonging to this address must be known in your wallet.\n\n*Result---provider update registrar transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string (hex) | Required<br>(exactly 1) | Provider update registrar transaction (ProUpRegTx) hash\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet protx update_registrar\\\n \"ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\"\\\n \"0e02146e9c34cfbcb3f3037574a1abb35525e2ca0c3c6901dbf82ac591e30218d1711223b7ca956edf39f3d984d06d51\"\\\n \"yX2cDS4kcJ4LK4uq9Hd4TG7kURV3sGLZrw\" \"yakx4mMRptKhgfjedNzX5FGQq7kSSBF2e7\"\n```\n\nResult:\n``` bash\n702390ef06b10c174841ad7b863df23c166c27815e3be2438e2fee6f87882b91\n```\n\n## ProTx Revoke\n\nThe `protx revoke` RPC creates and sends a ProUpRevTx to the network.\n\n*Parameter #1---initial provider registration transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the provider transaction as hex in RPC byte order\n\n*Parameter #2---operator private key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`operatorPubKey` | string (hex) | Required<br>(exactly 1) |  The operator private key belonging to the registered operator public key.\n\n*Parameter #3---reason*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`reason` | number | Required<br>(exactly 1) | The reason for revocation.\n\n*Parameter #4---fee source address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`feeSourceAddress` | string | Optional<br>(0 or 1) | If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, `payoutAddress` will be used. The private key belonging to this address must be known in your wallet.\n\n*Result---provider update revoke transaction hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string (hex) | Required<br>(exactly 1) | Provider update revoke transaction (ProUpRevTx) hash\n\n*Example from Dash Core 0.13.0*\n\n``` bash\ndash-cli -testnet protx revoke\\\n \"ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\"\\\n \"4da7e1ea30fb9e55c73ad23df0b9d3d34342acb24facf4b19420e1a26ae272d1\"\n```\n\nResult:\n``` bash\n2aad36dd2ab254bee06b0b5dad51e7603691b72058d5806fd94e1d2d19a7c209\n```\n\n## ProTx Diff\n\nThe `protx diff` RPC calculates a diff and a proof between two masternode list.\n\n*Parameter #1---start block height*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`baseBlock` | number (int) | Required<br>(Exactly 1) |\n\n*Parameter #2---end block height*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`block` | bool | Required<br>(Exactly 1) |\n\n*Result---JSON provider registration transaction details*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | array | Required<br>(exactly 1) | An array of objects each containing a provider transaction, or JSON `null` if an error occurred\n\u2192<br>`baseBlockHash` | string (hex) | Required<br>(exactly 1) | The hash of the base block as hex in RPC byte order\n\u2192<br>`blockHash` | string (hex) | Required<br>(exactly 1) | The hash of the ending block as hex in RPC byte order\n\u2192<br>`cbTxMerkleTree` | string (hex) | Required<br>(exactly 1) | The coinbase transaction merkle tree\n\u2192<br>`cbTx` | string (hex) | Required<br>(exactly 1) | The coinbase transaction\n\u2192<br>`deletedMNs` | array | Required<br>(exactly 1) | An array of deleted masternode hashes\n\u2192<br>`mnlist` | array | Required<br>(exactly 1) | An array of masternode details\n\u2192 \u2192<br>`proRegTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the initial provider registration transaction as hex in RPC byte order\n\u2192 \u2192<br>`confirmedHash` | string (hex) | Required<br>(exactly 1) | The hash of the block where the ProRegTx was mined\n\u2192 \u2192<br>`service` | string | Required<br>(exactly 1) | The IP address/Port of the masternode\n\u2192 \u2192<br>`pubKeyOperator` | string (hex) | Required<br>(exactly 1) | The operator public key\n\u2192 \u2192<br>`votingAddress` | string (hex) | Required<br>(exactly 1) | The voting address\n\u2192 \u2192<br>`isValid` | bool | Required<br>(exactly 1) | Set to `true` if masternode is valid\n\u2192<br>`deletedQuorums` | array | Required<br>(exactly 1) | An array of deleted quorums\n\u2192 \u2192<br>`llmqType` | number | Required<br>(exactly 1) | The quorum type\n\u2192 \u2192<br>`quorumHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum\n\u2192<br>`newQuorums` | array | Required<br>(exactly 1) | An array of new quorums\n\u2192 \u2192<br>`version` | number | Required<br>(exactly 1) | The quorum version\n\u2192 \u2192<br>`llmqType` | number | Required<br>(exactly 1) | The quorum type\n\u2192 \u2192<br>`quorumHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum\n\u2192 \u2192<br>`signersCount` | number | Required<br>(exactly 1) | The number of signers for the quorum\n\u2192 \u2192<br>`signers` | string (hex) | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Bitset representing the aggregated signers of this final commitment\n\u2192 \u2192<br>`validMembersCount` | number | Required<br>(exactly 1) | The number of valid members in the quorum\n\u2192 \u2192<br>`validMembers` | string (hex) | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Bitset of valid members in this commitment\n\u2192 \u2192<br>`quorumPublicKey` | string (hex) | Required<br>(exactly 1) | The public key of the quorum\n\u2192 \u2192<br>`quorumVvecHash` | string (hex) | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>The SHA256 hash of the quorum verification vector\n\u2192 \u2192<br>`quorumSig` | string (hex) | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Recovered threshold signature\n\u2192 \u2192<br>`membersSig` | string (hex) | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Aggregated BLS signatures from all included commitments\n\u2192<br>`merkleRootMNList` | string (hex) | Required<br>(exactly 1) | Merkle root of the masternode list\n\u2192<br>`merkleRootQuorums` | string (hex) | Required<br>(exactly 1) | *Added in Coinbase Transaction version 2 (Dash Core 0.14.0)*<br><br>Merkle root of the masternode list\n\n*Example from Dash Core 0.16.0*\n\n``` bash\ndash-cli -testnet protx diff 75000 76000\n```\n\nResult (truncated):\n``` json\n{\n  \"baseBlockHash\": \"0000000003deb00bba101ee581cdc4e1cbd1243ec5cd190472ae93eff07c8881\",\n  \"blockHash\": \"0000000000c0279636003ed0042c9a454b4c39e9a6c49bb92d420e0bf4e0f49b\",\n  \"cbTxMerkleTree\": \"01000000015ef8245e2a381174f5e2cc701d5d067d9f16945179380a3ce54415114426eb510101\",\n  \"cbTx\": \"03000500010000000000000000000000000000000000000000000000000000000000000000ffffffff4c03e02801043619ab5c08fabe6d6d736170747365743a7265737574736574d6e48c2ebd4e147373617074736574730100000000000000380000ae250000000d2f6e6f64655374726174756d2f000000000340230e43000000001976a914cb594917ad4e5849688ec63f29a0f7f3badb5da688ac4cfe1c3e000000001976a91470da282ad16926e127064b7d3d787d7f3793014788acf424f104000000001976a914312d9ccd4e73f2e66006e45701bce17125ba681e88ac00000000260100e0280100d26df127ba2765c8f098ab71199c82c59509418efe26cdf02f7c92ce738e2247\",\n  \"deletedMNs\": [\n  ],\n  \"mnList\": [\n    {\n      \"proRegTxHash\": \"fef106ff6420f9c6638c9676988a8fc655750caafb506c98cb5ff3d4fea99a41\",\n      \"confirmedHash\": \"0000000005d5635228f113b50fb5ad66995a7476ed20374e6e159f1f9e62347b\",\n      \"service\": \"45.48.177.222:19999\",\n      \"pubKeyOperator\": \"842476e8d82327adfb9b617a7ac3f62868946c0c4b6b0e365747cfb8825b8b79ba0eb1fa62e8583ae7102f59bf70c7c7\",\n      \"votingAddress\": \"yf7QHemCfbmKEncwZxroTj8JtShXsC28V6\",\n      \"isValid\": true\n    },\n    {\n      \"proRegTxHash\": \"7d56a2cf814b344f54ac4b6485a7a5b2b5a439ea796defff67f2a5872c9df5c3\",\n      \"confirmedHash\": \"00000c66555eea6272e5c7bcdb2648e1a63fd5b23a6d1d4c3f9dc5df43c6a5a8\",\n      \"service\": \"178.151.192.107:19999\",\n      \"pubKeyOperator\": \"8631b1ba19ed23fdab61db7a81c9aa1356eaf37d0a29a14cc493e2f863080bf909b4d3e23d536be1d18e4c842566ed67\",\n      \"votingAddress\": \"yP2LXCZTVVjBFQiN2bhghQvNwdUQG8NMX8\",\n      \"isValid\": true\n    },\n    {\n      \"proRegTxHash\": \"be32ec53dbbfb64e5ba29e25e3716f6f4024291914ce4c858cd69f0b4e371dda\",\n      \"confirmedHash\": \"0000000015717296254a7c6139a50c34ad481dc8fdf7b0ea4c8320dc3fff2759\",\n      \"service\": \"173.61.30.231:19025\",\n      \"pubKeyOperator\": \"86ce02e551a46f1ca9a734104b4e387984d733ba99930eb677aae126fa142f201049842422ab2f105e3c9805f1bd54e8\",\n      \"votingAddress\": \"ySBU7oXuuTSJqtmUArMRFsKefJPtEDkESG\",\n      \"isValid\": false\n    }\n  ],\n  \"deletedQuorums\": [\n    {\n      \"llmqType\": 1,\n      \"quorumHash\": \"00000000052b95b036c87f82d19878f69bf940e6acf9f03cd818bd07a5686d0e\"\n    },\n    {\n      \"llmqType\": 1,\n      \"quorumHash\": \"0000000000e8b557ea26921f4bb143e961dd35209cf8c1c7b73397322c1a5018\"\n    },\n    {\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000b259f422fe3b647b8f1553b846d95dc8c79699d60e48a81dcf14747\"\n    },\n    {\n      \"llmqType\": 1,\n      \"quorumHash\": \"00000000143365adb3c3de6a35ae247120df8ca53a61afd82cd6fd4126ca8a4d\"\n    }\n  ],\n  \"newQuorums\": [\n    {\n      \"version\": 1,\n      \"llmqType\": 1,\n      \"quorumHash\": \"0000000001427858db64213ed3ef32ffb2546ca7f2a096adbefc197437b90612\",\n      \"signersCount\": 50,\n      \"signers\": \"ffffffffffff03\",\n      \"validMembersCount\": 50,\n      \"validMembers\": \"ffffffffffff03\",\n      \"quorumPublicKey\": \"922e3683358f09a2619efb9e8329f90d5a8a608a18e26db212613ef7f95818eb6f68372fb313edbf96fdd2cdee20a66d\",\n      \"quorumVvecHash\": \"2da4253e43adb732b06d88324384025a4cd0c2803bc6400462f9eb89ea314da8\",\n      \"quorumSig\": \"949882d7912d7d3fef46dd856bcd6c70a080b2e5484a3c900bea04b902abd12c5f75e78d13cbdc5d352187db0e15c1b40715b9d89e998bb99437ad7ae97a1b23f922d55b6fc5cca290c05b44eda564782a3440c7ef3756fc3e9895d1ac34d3d0\",\n      \"membersSig\": \"9736d9cbc7ff7189f6ef543fabc9bfc2785f60ffd4493ea4c272343da51fa61ec9867cd46b681c82a1c22a9830f8b86b0a02e34e9e71212010231024fd61cb95143591be2cace53760dba03a325e178e5fcae6a748073fadf3ab34268c8ed2bc\"\n    },\n    {\n      \"version\": 1,\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000148a6fced08763f3f31dd68a3d88d2d4f2d48eef44eb9311de66129\",\n      \"signersCount\": 50,\n      \"signers\": \"ffffffffffff03\",\n      \"validMembersCount\": 50,\n      \"validMembers\": \"ffffffffffff03\",\n      \"quorumPublicKey\": \"814973fcf54892fa4edbf9e732341ff1227e2a89bf59cb22b52082e940f7c3ac8a7c25163cb375b3cfe3654e86eaa65d\",\n      \"quorumVvecHash\": \"a91c4721c576850971313b9eb5ee7a886fd4dd4564e98ac0094e7a46e4351240\",\n      \"quorumSig\": \"16abcfa4137c1900899970533cd52b0c264000b48ca6bd1d29cc9baab1ef883b378d5cdb8c1dd8bb7765e154bcc8ee360cfcdc008584e2d7c29f5be8361fecf3a4cafcdea29f1cb2e75c5d67057d0557e0d6cfa65cf85ae6ed65971b8f29a913\",\n      \"membersSig\": \"18151a0b15e9ec892ae7ebc97b9e014bbe8a7f8344d24fe9f2925dae094e01500c6d5eb13b1ac6a8487be63e181a2b73053658f6b6374a01d183be1d4258ddaf0b18a4268a8a1e7d0c7ecfa414ad075d915beff5750d8ecef48b446b9c0d1da6\"\n    },\n    {\n      \"version\": 1,\n      \"llmqType\": 1,\n      \"quorumHash\": \"0000000009931a8a6dcdf21a869739356e7715eb155c1a18a58c8bf13382ac33\",\n      \"signersCount\": 50,\n      \"signers\": \"ffffffffffff03\",\n      \"validMembersCount\": 50,\n      \"validMembers\": \"ffffffffffff03\",\n      \"quorumPublicKey\": \"0694b46d8581423f2f68196dcc2d06be0b6b365a4100b54e351ab42f5828d09fd03941f8a1255363753a53d32b43f63b\",\n      \"quorumVvecHash\": \"e0f2853af9fffc937af96264316982728fbbe483a36bff161c606f764ad9d8b9\",\n      \"quorumSig\": \"16898292e519f01681c1a57606c54b7366275fa01a4912f8623eae73517ae1d3fd1607b7e8edcee43ce23141deba29fb00398d60f319adca9d460b972653715a4c5025a92141f065d92a0494cf211aa7485d6e4819514012efb107e8e2b9ba2e\",\n      \"membersSig\": \"884a01e0ed65b745076198183883535d7bf636c7ebf9e13deb662ec4f4b202041fa826c978c9973380d614d11fd4071e0cf97abb3a7dd3a24f2eda0d8d7b179ab1a5837a78c53673567565aa3aaa72122d0e0bb8b6f2df092ca3da626c2b2800\"\n    },\n    {\n      \"version\": 1,\n      \"llmqType\": 1,\n      \"quorumHash\": \"0000000006097e9d08a4ca9bedbe4a97bb9bf3fe8d09372d18d2398f185cff5d\",\n      \"signersCount\": 50,\n      \"signers\": \"ffffffffffff03\",\n      \"validMembersCount\": 50,\n      \"validMembers\": \"ffffffffffff03\",\n      \"quorumPublicKey\": \"10d0488558afd929508cd2d11bda7564333a904aa23c8b4a1ed57d86b217e3181497469e7220e9421e14f645a00940fc\",\n      \"quorumVvecHash\": \"fbe6b3ae8d002bd648788b3173753c9cec3d4634b7df55f19b34d632b438aa70\",\n      \"quorumSig\": \"17d3c06ae24312c9cda1b0f5db10b16e1d1a356f6bb050827d066c5026ecd3cd26fbd2479d781c88a2755aa78f9e16a50882bf18c75e1ab96ff1514b1f283d4fb3b10b4dcd13f8f267ec449250e7d195bc27351a74c8c456a6fcf7d847535f05\",\n      \"membersSig\": \"0afd25e67d72d59c2dfbc671ae4e8163bfa2e75cda50b0c86800be5e1dd393abf8a717b147392688855f505d237154f8195b2bb30605d0ca18407e4552b7573cb08a6cb53eaf2a71894fb937af1f7783dbf5e6cb80b0cb903ea4f76266c039e7\"\n    }\n  ],\n  \"merkleRootMNList\": \"47228e73ce927c2ff0cd26fe8e410995c5829c1971ab98f0c86527ba27f16dd2\"\n}\n```\n\n*See also: none*\n\n# Quorum\n\n*Added in Dash Core 0.14.0*\n\nThe [`quorum` RPC](core-api-ref-remote-procedure-calls-evo#section-quorum) provides a set of commands for quorums (LLMQs).\n\n## Quorum List\n\nThe `quorum list` RPC displays a list of on-chain quorums.\n\n*Parameter #1---quorum count*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`count` | number | Optional<br>(0 or 1) | Number of quorums to list. Will list active quorums if `count` is not specified.\n\n*Result---a list of quorums*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | Quorum list\n\u2192<br>Quorum | array | Required<br>(1 or more) | Array of quorum details\n\u2192 \u2192<br>Quorum Hash | string (hex) | Optional<br>(0 or more) | A quorum hash\n\n*Example from Dash Core 0.14.0*\n\n``` bash\ndash-cli -testnet quorum list\n```\n\nResult:\n``` json\n{\n  \"llmq_50_60\": [\n    \"00000000023cc6dde69bed898c83fe2328ef38b1ea9da14a599efa14caef0b7d\",\n    \"000000002b968fb3b2fc2ff18d6e89611e366b4d38a6d0437e99bd7c37f2fd83\",\n    \"000000000301054c038b07b5b51493d5efc3f078e3aede6eb603c47943d1cc78\",\n    \"000000000e901278c00c896754a06f8d45d0268c6aff6e72ffb3007d07c10e73\",\n    \"000000001bc592f2a8676203835bc6ad442abeadb9c22b8d6a2999db07354b01\",\n    \"000000000896c37ef8a32318ee871589394f1578473b8825275b610690e47db0\",\n    \"00000000133b192b2319a0716ad18e5788981fff51856f61205af5d6a634ba41\",\n    \"0000000004946f3f9f82a298985f73080d62627d51f6f4ba77f3cd8c6788b3d0\",\n    \"0000000005cb014d3df9bac0ba379f1d5b8b75f0e6d7c408d43ac1db330ec641\",\n    \"0000000006c1653c7ee747f140dd7daa1da23a541e67a0fc0dc88db3482ec4d5\"\n  ],\n  \"llmq_400_60\": [\n    \"0000000007697fd69a799bfa26576a177e817bc0e45b9fcfbf48b362b05aeff2\"\n  ],\n  \"llmq_400_85\": [\n  ]\n}\n```\n\n## Quorum Info\n\nThe `quorum info` RPC returns information about a specific quorum.\n\n*Parameter #1---LLMQ Type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`llmqType` | number | Required<br>(exactly 1) | [Type of quorums](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types) to list:<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\n*Parameter #2---quorum hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`quorumHash` | string (hex) | Required<br>(exactly 1) | The block hash of the quorum\n\n*Parameter #3---secret key share*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`includeSkShare` | bool | Optional<br>(0 or 1) | Include the secret key share (default: `false`)\n\n*Result---information about a quorum*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | Quorum list\n\u2192<br>`height` | number | Required<br>(exactly 1) | Block height of the quorum\n\u2192<br>`type` | string | Required<br>(exactly 1) | Type of LLMQ\n\u2192<br>`quorumHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum\n\u2192<br>`minedBlock` | string (hex) | Required<br>(exactly 1) | The hash of the block that established the quorum\n\u2192<br>`members` | array | Required<br>(exactly 1) | An array containing quorum member details\n\u2192 \u2192<br>Member | object | Required<br>(1 or more) | An object describing a particular member\n\u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The masternode's Provider Registration transaction hash\n\u2192 \u2192 \u2192<br>`pubKeyOperator` | string (hex) | Required<br>(exactly 1) | *Added in Dash Core 0.15.0*<br><br>The masternode's Operator public key\n\u2192 \u2192 \u2192<br>`valid` | bool | Required<br>(exactly 1) | Indicates if the member is valid\n\u2192 \u2192 \u2192<br>`pubKeyShare` | string | Optional<br>(0 or 1) | Member public key share\n\u2192<br>`quorumPublicKey` | string | Required<br>(exactly 1) | Quorum public key\n\u2192<br>`secretKeyShare` | string | Optional<br>(exactly 1) | Quorum secret key share\n\n*Example from Dash Core 0.15.0*\n\n``` bash\ndash-cli -testnet quorum info 1 \\\n  000004bfc56646880bfeb80a0b89ad955e557ead7b0f09bcc61e56c8473eaea9 true\n```\n\nResult (truncated):\n``` json\n{\n  \"height\": 264072,\n  \"type\": \"llmq_50_60\",\n  \"quorumHash\": \"000004bfc56646880bfeb80a0b89ad955e557ead7b0f09bcc61e56c8473eaea9\",\n  \"minedBlock\": \"000006113a77b35a0ed606b08ecb8e37f1ac7e2d773c365bd07064a72ae9a61d\",\n  \"members\": [\n    {\n      \"proTxHash\": \"6c91363d97b286e921afb5cf7672c88a2f1614d36d32058c34bef8b44e026007\",\n      \"pubKeyOperator\": \"81749ba8363e5c03e9d6318b0491e38305cf59d9d57cea2295a86ecfa696622571f266c28bacc78666e8b9b0fb2b3121\",\n      \"valid\": true\n    },\n    {\n      \"proTxHash\": \"274ae6ab38ea0f3b8fe726b3e52d998443ba0d77e85d88c20d179d4fecd0b96e\",\n      \"pubKeyOperator\": \"0db6da5d8ee9fb8925f0818df7553062bf35ec9d62114144bc395980c29fcd06b738beca63faf265d7480106fc6cceea\",\n      \"valid\": true\n    },\n    {\"Truncated data\":\"...\"},\n    {\n      \"proTxHash\": \"3ecdbedf3d9a13822f437a1f0c5ea44f290ab90f7c3bb42c1b5fd785b5f9596a\",\n      \"pubKeyOperator\": \"0634f8b926631cb2b14c81720c6130b3f6f5429da1c9dc9c33918b2474b7ffff239caa9b59c7b1a782565052232d052a\",\n      \"valid\": true\n    }\n  ],\n  \"quorumPublicKey\": \"0644ff153b9b92c6a59e2adf4ef0b9836f7f6af05fe432ffdcb69bc9e300a2a70af4a8d9fc61323f6b81074d740033d2\",\n  \"secretKeyShare\": \"3da0d8f532309660f7f44aa0ed42c1569773b39c70f5771ce5604be77e50759e\"\n}\n```\n\n## Quorum DKGStatus\n\nThe `quorum list` RPC displays the status of the current DKG process.\n\n*Parameter #1---detail level*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`detail_level` | number | Optional<br>(0 or 1) | Detail level of output (default: 0):<br>`0` - Only show counts (_default_)<br>`1` - Show member indexes<br>`2` - Show member's ProTxHashes<br><br>_Note: Works only when Spork 17 is enabled and only displays details related to the node running the command._\n\n*Result (if detail level was 0 or omitted)---JSON DKG details*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | array | Required<br>(exactly 1) | An array of objects each containing a provider transaction, or JSON `null` if an error occurred\n\u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the initial provider registration transaction as hex in RPC byte order\n\u2192<br>`time` | string (hex) | Required<br>(exactly 1) | The Unix epoch time\n\u2192<br>`timeStr` | string (hex) | Required<br>(exactly 1) | The UTC time as a string\n\u2192<br>`session` | object | Required<br>(exactly 1) | Object containing DKG Session information\n\u2192 \u2192<br>LLMQ Type | object | Required<br>(exactly 1) | Object\n\u2192 \u2192 \u2192<br>`llmqType` | number | Required<br>(exactly 1) | [Type of quorum](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types):<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\u2192 \u2192 \u2192<br>`quorumHash` | string (hex) | Required<br>(exactly 1) | The block hash of the quorum\n\u2192 \u2192 \u2192<br>`quorumHeight` | number | Required<br>(exactly 1) | The block height of the quorum\n\u2192 \u2192 \u2192<br>`phase` | number | Required<br>(exactly 1) | The active DKG phase<br>`1` - Initialized<br>`2` - Contributing<br>`3` - Complaining<br>`4` - Justifying<br>`5` - Committing<br>`6` - Finalizing\n\u2192 \u2192 \u2192<br>`sentContributions` | bool | Required<br>(exactly 1) | True when contributions have been sent\n\u2192 \u2192 \u2192<br>`sentComplaint` | bool | Required<br>(exactly 1) | True when complaints have been sent\n\u2192 \u2192 \u2192<br>`sentJustification` | bool | Required<br>(exactly 1) | True when justifications have been sent\n\u2192 \u2192 \u2192<br>`sentPrematureCommitment` | bool | Required<br>(exactly 1) | True when premature commitments have been sent\n\u2192 \u2192 \u2192<br>`aborted` | bool | Required<br>(exactly 1) | True if the DKG session has been aborted\n\u2192 \u2192 \u2192<br>`badMembers` | number | Required<br>(exactly 1) | Number of bad members\n\u2192 \u2192 \u2192<br>`weComplain` | number | Required<br>(exactly 1) | Number of complaints sent\n\u2192 \u2192 \u2192<br>`receivedContributions` | number | Required<br>(exactly 1) | Number of contributions received\n\u2192 \u2192 \u2192<br>`receivedComplaints` | number | Required<br>(exactly 1) | Number of complaints received\n\u2192 \u2192 \u2192<br>`receivedJustifications` | number | Required<br>(exactly 1) | Number of justifications received\n\u2192 \u2192 \u2192<br>`receivedPrematureCommitments` | number | Required<br>(exactly 1) | Number of premature commitments received\n\u2192<br>`minableCommitments` | object | Required<br>(exactly 1) | Object containing minable commitments\n\u2192<br>`quorumConnections` | object | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Object containing quorum connection information\n\u2192 \u2192<br>Connection | object | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>An object describing a quorum connection\n\u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>The hash of the quorum member's provider registration transaction as hex in RPC byte order\n\u2192 \u2192 \u2192<br>`connected` | boolean | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Whether or not the connection is active\n\u2192 \u2192 \u2192<br>`address` | string | Optional<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Address\n\u2192 \u2192 \u2192<br>`outbound` | boolean | Required<br>(exactly 1) | **Added in Dash Core 0.16.0**<br><br>Whether or not this is an outbound connection\n\n*Result (if detail level was 1)---JSON DKG details including member index*\n\nNote: detail level 1 includes all level 0 fields and expands the following fields.\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n\u2192 \u2192 \u2192<br>`badMembers` | array | Required<br>(exactly 1) | Array containing the member index for each bad member\n\u2192 \u2192 \u2192<br>`weComplain` | array | Required<br>(exactly 1) | Array containing the member index for each complaint sent\n\u2192 \u2192 \u2192<br>`receivedContributions` | array | Required<br>(exactly 1) | Array containing the member index for each contribution received\n\u2192 \u2192 \u2192<br>`receivedComplaints` | array | Required<br>(exactly 1) | Array containing the member index for each complaint received\n\u2192 \u2192 \u2192<br>`receivedJustifications` | array | Required<br>(exactly 1) | Array containing the member index for each justification received\n\u2192 \u2192 \u2192<br>`receivedPrematureCommitments` | array | Required<br>(exactly 1) | Array containing the member index for each commitment received\n\n*Result (if detail level was 2)---JSON DKG details including member index and ProTx hash*\n\nNote: detail level 2 includes all level 0 fields, adds the `allMembers` field, and expands several fields.\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n\u2192 \u2192 \u2192<br>`badMembers` | array | Required<br>(exactly 1) | An array of objects with each object containing the member index and ProTx hash for a bad member\n\u2192 \u2192 \u2192 \u2192<br>Member | object | Required<br>(0 or more) | An object describing quorum member details\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`memberIndex` | number | Required<br>(exactly 1) | The quorum member's index\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum member's provider registration transaction as hex in RPC byte order\n\u2192 \u2192 \u2192<br>`weComplain` | object | Required<br>(exactly 1) | An array of objects with each object containing the member index and ProTx hash for a member being complained about\n\u2192 \u2192 \u2192 \u2192<br>Member | object | Required<br>(0 or more) | An object describing quorum member details\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`memberIndex` | number | Required<br>(exactly 1) | The quorum member's index\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum member's provider registration transaction as hex in RPC byte order\n\u2192 \u2192 \u2192<br>`receivedContributions` | object | Required<br>(exactly 1) | An array of objects with each object containing the member index and ProTx hash for a member a contribution was received from\n\u2192 \u2192 \u2192 \u2192<br>Member | object | Required<br>(0 or more) | An object describing quorum member details\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`memberIndex` | number | Required<br>(exactly 1) | The quorum member's index\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum member's provider registration transaction as hex in RPC byte order\n\u2192 \u2192 \u2192<br>`receivedComplaints` | object | Required<br>(exactly 1) | An array of objects with each object containing the member index and ProTx hash for a member a complaint was received from\n\u2192 \u2192 \u2192 \u2192<br>Member | object | Required<br>(0 or more) | An object describing quorum member details\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`memberIndex` | number | Required<br>(exactly 1) | The quorum member's index\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum member's provider registration transaction as hex in RPC byte order\n\u2192 \u2192 \u2192<br>`receivedJustifications` | object | Required<br>(exactly 1) | An array of objects with each object containing the member index and ProTx hash for a member a justification was received from\n\u2192 \u2192 \u2192 \u2192<br>Member | object | Required<br>(0 or more) | An object describing quorum member details\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`memberIndex` | number | Required<br>(exactly 1) | The quorum member's index\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum member's provider registration transaction as hex in RPC byte order\n\u2192 \u2192 \u2192<br>`receivedPrematureCommitments` | object | Required<br>(exactly 1) | An array of objects with each object containing the member index and ProTx hash for a member a premature commitment was received from\n\u2192 \u2192 \u2192 \u2192<br>Member | object | Required<br>(0 or more) | An object describing quorum member details\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`memberIndex` | number | Required<br>(exactly 1) | The quorum member's index\n\u2192 \u2192 \u2192 \u2192 \u2192<br>`proTxHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum member's provider registration transaction as hex in RPC byte order\n\u2192 \u2192 \u2192<br>`allMembers` | array | Required<br>(exactly 1) | Array containing the provider registration transaction hash for all quorum members\n\n*Example from Dash Core 0.14.0*\n\n``` bash\ndash-cli -testnet quorum dkgstatus\n```\n\nResult:\n``` json\n{\n  \"proTxHash\": \"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\",\n  \"time\": 1555172494,\n  \"timeStr\": \"2019-04-13 16:21:34\",\n  \"session\": {\n    \"llmq_50_60\": {\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\",\n      \"quorumHeight\": 79368,\n      \"phase\": 6,\n      \"sentContributions\": true,\n      \"sentComplaint\": true,\n      \"sentJustification\": false,\n      \"sentPrematureCommitment\": true,\n      \"aborted\": false,\n      \"badMembers\": 2,\n      \"weComplain\": 0,\n      \"receivedContributions\": 48,\n      \"receivedComplaints\": 44,\n      \"receivedJustifications\": 0,\n      \"receivedPrematureCommitments\": 44\n    }\n  },\n  \"minableCommitments\": {\n    \"llmq_50_60\": {\n      \"version\": 1,\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\",\n      \"signersCount\": 0,\n      \"validMembersCount\": 0,\n      \"quorumPublicKey\": \"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n    }\n  }\n}\n```\n\n*Example from Dash Core 0.14.0 (detail_level: 1)*\n\n``` bash\ndash-cli -testnet quorum dkgstatus 1\n```\n\nResult:\n``` json\n{\n  \"proTxHash\": \"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\",\n  \"time\": 1555172494,\n  \"timeStr\": \"2019-04-13 16:21:34\",\n  \"session\": {\n    \"llmq_50_60\": {\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\",\n      \"quorumHeight\": 79368,\n      \"phase\": 6,\n      \"sentContributions\": true,\n      \"sentComplaint\": true,\n      \"sentJustification\": false,\n      \"sentPrematureCommitment\": true,\n      \"aborted\": false,\n      \"badMembers\": [\n        35,\n        42\n      ],\n      \"weComplain\": [\n      ],\n      \"receivedContributions\": [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        32,\n        33,\n        34,\n        36,\n        37,\n        38,\n        39,\n        40,\n        41,\n        43,\n        44,\n        45,\n        46,\n        47,\n        48,\n        49\n      ],\n      \"receivedComplaints\": [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        33,\n        34,\n        36,\n        37,\n        38,\n        39,\n        40,\n        41,\n        43,\n        44,\n        45,\n        46,\n        47,\n        48,\n        49\n      ],\n      \"receivedJustifications\": [\n      ],\n      \"receivedPrematureCommitments\": [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        33,\n        34,\n        36,\n        37,\n        38,\n        39,\n        40,\n        41,\n        43,\n        44,\n        45,\n        46,\n        47,\n        48,\n        49\n      ]\n    }\n  },\n  \"minableCommitments\": {\n    \"llmq_50_60\": {\n      \"version\": 1,\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\",\n      \"signersCount\": 0,\n      \"validMembersCount\": 0,\n      \"quorumPublicKey\": \"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n    }\n  }\n}\n```\n\n*Example from Dash Core 0.14.0 (detail_level: 2)*\n\n``` bash\ndash-cli -testnet quorum dkgstatus 2\n```\n\nResult:\n``` json\n{\n  \"proTxHash\": \"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\",\n  \"time\": 1555172494,\n  \"timeStr\": \"2019-04-13 16:21:34\",\n  \"session\": {\n    \"llmq_50_60\": {\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\",\n      \"quorumHeight\": 79368,\n      \"phase\": 6,\n      \"sentContributions\": true,\n      \"sentComplaint\": true,\n      \"sentJustification\": false,\n      \"sentPrematureCommitment\": true,\n      \"aborted\": false,\n      \"badMembers\": [\n        {\n          \"memberIndex\": 35,\n          \"proTxHash\": \"c24aea30305d539887223fd923df775644b1d86db0aac8c654026e823b549cd7\"\n        },\n        {\n          \"memberIndex\": 42,\n          \"proTxHash\": \"f0567069d4f2a2e536e46173a097b318daf03edef989f6875ca06f5c4d49abc9\"\n        }\n      ],\n      \"weComplain\": [\n      ],\n      \"receivedContributions\": [\n        {\n          \"memberIndex\": 0,\n          \"proTxHash\": \"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\"\n        },\n        {\n          \"memberIndex\": 1,\n          \"proTxHash\": \"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\"\n        },\n        {\n          \"memberIndex\": 2,\n          \"proTxHash\": \"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\"\n        },\n        {\n          \"memberIndex\": 3,\n          \"proTxHash\": \"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\"\n        },\n        {\n          \"memberIndex\": 4,\n          \"proTxHash\": \"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"\n        },\n        {\n          \"memberIndex\": 5,\n          \"proTxHash\": \"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\"\n        },\n        {\n          \"memberIndex\": 6,\n          \"proTxHash\": \"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\"\n        },\n        {\n          \"memberIndex\": 7,\n          \"proTxHash\": \"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\"\n        },\n        {\n          \"memberIndex\": 8,\n          \"proTxHash\": \"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\"\n        },\n        {\n          \"memberIndex\": 9,\n          \"proTxHash\": \"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\"\n        },\n        {\n          \"memberIndex\": 10,\n          \"proTxHash\": \"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\"\n        },\n        {\n          \"memberIndex\": 11,\n          \"proTxHash\": \"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\"\n        },\n        {\n          \"memberIndex\": 12,\n          \"proTxHash\": \"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\"\n        },\n        {\n          \"memberIndex\": 13,\n          \"proTxHash\": \"f443dd87ec7981e8630ae957f295d9d226d4bd3895f59dbd80b30137a92b3735\"\n        },\n        {\n          \"memberIndex\": 14,\n          \"proTxHash\": \"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\"\n        },\n        {\n          \"memberIndex\": 15,\n          \"proTxHash\": \"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\"\n        },\n        {\n          \"memberIndex\": 16,\n          \"proTxHash\": \"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\"\n        },\n        {\n          \"memberIndex\": 17,\n          \"proTxHash\": \"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\"\n        },\n        {\n          \"memberIndex\": 18,\n          \"proTxHash\": \"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\"\n        },\n        {\n          \"memberIndex\": 19,\n          \"proTxHash\": \"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\"\n        },\n        {\n          \"memberIndex\": 20,\n          \"proTxHash\": \"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\"\n        },\n        {\n          \"memberIndex\": 21,\n          \"proTxHash\": \"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"\n        },\n        {\n          \"memberIndex\": 22,\n          \"proTxHash\": \"11eabc1e72394af02bbe86815975d054816fe69006fdc64c6d7a06b585e5c311\"\n        },\n        {\n          \"memberIndex\": 23,\n          \"proTxHash\": \"71cf5017c4c5f69db5c17a8cfb4c28ffc14ad1715dba2a83f0c30e534291f828\"\n        },\n        {\n          \"memberIndex\": 24,\n          \"proTxHash\": \"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\"\n        },\n        {\n          \"memberIndex\": 25,\n          \"proTxHash\": \"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\"\n        },\n        {\n          \"memberIndex\": 26,\n          \"proTxHash\": \"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\"\n        },\n        {\n          \"memberIndex\": 27,\n          \"proTxHash\": \"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\"\n        },\n        {\n          \"memberIndex\": 28,\n          \"proTxHash\": \"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\"\n        },\n        {\n          \"memberIndex\": 29,\n          \"proTxHash\": \"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\"\n        },\n        {\n          \"memberIndex\": 30,\n          \"proTxHash\": \"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\"\n        },\n        {\n          \"memberIndex\": 31,\n          \"proTxHash\": \"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\"\n        },\n        {\n          \"memberIndex\": 32,\n          \"proTxHash\": \"c98c6303af03f7f3b2673ceece962134088e5dcc3c69a0977069c6201b26dc9b\"\n        },\n        {\n          \"memberIndex\": 33,\n          \"proTxHash\": \"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\"\n        },\n        {\n          \"memberIndex\": 34,\n          \"proTxHash\": \"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\"\n        },\n        {\n          \"memberIndex\": 36,\n          \"proTxHash\": \"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\"\n        },\n        {\n          \"memberIndex\": 37,\n          \"proTxHash\": \"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\"\n        },\n        {\n          \"memberIndex\": 38,\n          \"proTxHash\": \"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\"\n        },\n        {\n          \"memberIndex\": 39,\n          \"proTxHash\": \"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\"\n        },\n        {\n          \"memberIndex\": 40,\n          \"proTxHash\": \"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\"\n        },\n        {\n          \"memberIndex\": 41,\n          \"proTxHash\": \"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\"\n        },\n        {\n          \"memberIndex\": 43,\n          \"proTxHash\": \"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\"\n        },\n        {\n          \"memberIndex\": 44,\n          \"proTxHash\": \"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\"\n        },\n        {\n          \"memberIndex\": 45,\n          \"proTxHash\": \"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\"\n        },\n        {\n          \"memberIndex\": 46,\n          \"proTxHash\": \"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\"\n        },\n        {\n          \"memberIndex\": 47,\n          \"proTxHash\": \"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\"\n        },\n        {\n          \"memberIndex\": 48,\n          \"proTxHash\": \"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\"\n        },\n        {\n          \"memberIndex\": 49,\n          \"proTxHash\": \"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"\n        }\n      ],\n      \"receivedComplaints\": [\n        {\n          \"memberIndex\": 0,\n          \"proTxHash\": \"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\"\n        },\n        {\n          \"memberIndex\": 1,\n          \"proTxHash\": \"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\"\n        },\n        {\n          \"memberIndex\": 2,\n          \"proTxHash\": \"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\"\n        },\n        {\n          \"memberIndex\": 3,\n          \"proTxHash\": \"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\"\n        },\n        {\n          \"memberIndex\": 4,\n          \"proTxHash\": \"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"\n        },\n        {\n          \"memberIndex\": 5,\n          \"proTxHash\": \"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\"\n        },\n        {\n          \"memberIndex\": 6,\n          \"proTxHash\": \"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\"\n        },\n        {\n          \"memberIndex\": 7,\n          \"proTxHash\": \"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\"\n        },\n        {\n          \"memberIndex\": 8,\n          \"proTxHash\": \"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\"\n        },\n        {\n          \"memberIndex\": 9,\n          \"proTxHash\": \"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\"\n        },\n        {\n          \"memberIndex\": 10,\n          \"proTxHash\": \"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\"\n        },\n        {\n          \"memberIndex\": 11,\n          \"proTxHash\": \"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\"\n        },\n        {\n          \"memberIndex\": 12,\n          \"proTxHash\": \"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\"\n        },\n        {\n          \"memberIndex\": 14,\n          \"proTxHash\": \"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\"\n        },\n        {\n          \"memberIndex\": 15,\n          \"proTxHash\": \"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\"\n        },\n        {\n          \"memberIndex\": 16,\n          \"proTxHash\": \"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\"\n        },\n        {\n          \"memberIndex\": 17,\n          \"proTxHash\": \"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\"\n        },\n        {\n          \"memberIndex\": 18,\n          \"proTxHash\": \"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\"\n        },\n        {\n          \"memberIndex\": 19,\n          \"proTxHash\": \"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\"\n        },\n        {\n          \"memberIndex\": 20,\n          \"proTxHash\": \"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\"\n        },\n        {\n          \"memberIndex\": 21,\n          \"proTxHash\": \"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"\n        },\n        {\n          \"memberIndex\": 24,\n          \"proTxHash\": \"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\"\n        },\n        {\n          \"memberIndex\": 25,\n          \"proTxHash\": \"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\"\n        },\n        {\n          \"memberIndex\": 26,\n          \"proTxHash\": \"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\"\n        },\n        {\n          \"memberIndex\": 27,\n          \"proTxHash\": \"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\"\n        },\n        {\n          \"memberIndex\": 28,\n          \"proTxHash\": \"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\"\n        },\n        {\n          \"memberIndex\": 29,\n          \"proTxHash\": \"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\"\n        },\n        {\n          \"memberIndex\": 30,\n          \"proTxHash\": \"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\"\n        },\n        {\n          \"memberIndex\": 31,\n          \"proTxHash\": \"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\"\n        },\n        {\n          \"memberIndex\": 33,\n          \"proTxHash\": \"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\"\n        },\n        {\n          \"memberIndex\": 34,\n          \"proTxHash\": \"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\"\n        },\n        {\n          \"memberIndex\": 36,\n          \"proTxHash\": \"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\"\n        },\n        {\n          \"memberIndex\": 37,\n          \"proTxHash\": \"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\"\n        },\n        {\n          \"memberIndex\": 38,\n          \"proTxHash\": \"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\"\n        },\n        {\n          \"memberIndex\": 39,\n          \"proTxHash\": \"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\"\n        },\n        {\n          \"memberIndex\": 40,\n          \"proTxHash\": \"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\"\n        },\n        {\n          \"memberIndex\": 41,\n          \"proTxHash\": \"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\"\n        },\n        {\n          \"memberIndex\": 43,\n          \"proTxHash\": \"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\"\n        },\n        {\n          \"memberIndex\": 44,\n          \"proTxHash\": \"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\"\n        },\n        {\n          \"memberIndex\": 45,\n          \"proTxHash\": \"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\"\n        },\n        {\n          \"memberIndex\": 46,\n          \"proTxHash\": \"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\"\n        },\n        {\n          \"memberIndex\": 47,\n          \"proTxHash\": \"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\"\n        },\n        {\n          \"memberIndex\": 48,\n          \"proTxHash\": \"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\"\n        },\n        {\n          \"memberIndex\": 49,\n          \"proTxHash\": \"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"\n        }\n      ],\n      \"receivedJustifications\": [\n      ],\n      \"receivedPrematureCommitments\": [\n        {\n          \"memberIndex\": 0,\n          \"proTxHash\": \"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\"\n        },\n        {\n          \"memberIndex\": 1,\n          \"proTxHash\": \"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\"\n        },\n        {\n          \"memberIndex\": 2,\n          \"proTxHash\": \"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\"\n        },\n        {\n          \"memberIndex\": 3,\n          \"proTxHash\": \"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\"\n        },\n        {\n          \"memberIndex\": 4,\n          \"proTxHash\": \"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"\n        },\n        {\n          \"memberIndex\": 5,\n          \"proTxHash\": \"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\"\n        },\n        {\n          \"memberIndex\": 6,\n          \"proTxHash\": \"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\"\n        },\n        {\n          \"memberIndex\": 7,\n          \"proTxHash\": \"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\"\n        },\n        {\n          \"memberIndex\": 8,\n          \"proTxHash\": \"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\"\n        },\n        {\n          \"memberIndex\": 9,\n          \"proTxHash\": \"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\"\n        },\n        {\n          \"memberIndex\": 10,\n          \"proTxHash\": \"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\"\n        },\n        {\n          \"memberIndex\": 11,\n          \"proTxHash\": \"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\"\n        },\n        {\n          \"memberIndex\": 12,\n          \"proTxHash\": \"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\"\n        },\n        {\n          \"memberIndex\": 14,\n          \"proTxHash\": \"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\"\n        },\n        {\n          \"memberIndex\": 15,\n          \"proTxHash\": \"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\"\n        },\n        {\n          \"memberIndex\": 16,\n          \"proTxHash\": \"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\"\n        },\n        {\n          \"memberIndex\": 17,\n          \"proTxHash\": \"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\"\n        },\n        {\n          \"memberIndex\": 18,\n          \"proTxHash\": \"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\"\n        },\n        {\n          \"memberIndex\": 19,\n          \"proTxHash\": \"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\"\n        },\n        {\n          \"memberIndex\": 20,\n          \"proTxHash\": \"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\"\n        },\n        {\n          \"memberIndex\": 21,\n          \"proTxHash\": \"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"\n        },\n        {\n          \"memberIndex\": 24,\n          \"proTxHash\": \"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\"\n        },\n        {\n          \"memberIndex\": 25,\n          \"proTxHash\": \"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\"\n        },\n        {\n          \"memberIndex\": 26,\n          \"proTxHash\": \"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\"\n        },\n        {\n          \"memberIndex\": 27,\n          \"proTxHash\": \"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\"\n        },\n        {\n          \"memberIndex\": 28,\n          \"proTxHash\": \"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\"\n        },\n        {\n          \"memberIndex\": 29,\n          \"proTxHash\": \"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\"\n        },\n        {\n          \"memberIndex\": 30,\n          \"proTxHash\": \"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\"\n        },\n        {\n          \"memberIndex\": 31,\n          \"proTxHash\": \"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\"\n        },\n        {\n          \"memberIndex\": 33,\n          \"proTxHash\": \"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\"\n        },\n        {\n          \"memberIndex\": 34,\n          \"proTxHash\": \"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\"\n        },\n        {\n          \"memberIndex\": 36,\n          \"proTxHash\": \"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\"\n        },\n        {\n          \"memberIndex\": 37,\n          \"proTxHash\": \"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\"\n        },\n        {\n          \"memberIndex\": 38,\n          \"proTxHash\": \"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\"\n        },\n        {\n          \"memberIndex\": 39,\n          \"proTxHash\": \"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\"\n        },\n        {\n          \"memberIndex\": 40,\n          \"proTxHash\": \"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\"\n        },\n        {\n          \"memberIndex\": 41,\n          \"proTxHash\": \"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\"\n        },\n        {\n          \"memberIndex\": 43,\n          \"proTxHash\": \"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\"\n        },\n        {\n          \"memberIndex\": 44,\n          \"proTxHash\": \"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\"\n        },\n        {\n          \"memberIndex\": 45,\n          \"proTxHash\": \"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\"\n        },\n        {\n          \"memberIndex\": 46,\n          \"proTxHash\": \"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\"\n        },\n        {\n          \"memberIndex\": 47,\n          \"proTxHash\": \"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\"\n        },\n        {\n          \"memberIndex\": 48,\n          \"proTxHash\": \"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\"\n        },\n        {\n          \"memberIndex\": 49,\n          \"proTxHash\": \"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"\n        }\n      ],\n      \"allMembers\": [\n        \"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\",\n        \"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\",\n        \"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\",\n        \"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\",\n        \"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\",\n        \"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\",\n        \"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\",\n        \"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\",\n        \"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\",\n        \"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\",\n        \"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\",\n        \"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\",\n        \"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\",\n        \"f443dd87ec7981e8630ae957f295d9d226d4bd3895f59dbd80b30137a92b3735\",\n        \"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\",\n        \"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\",\n        \"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\",\n        \"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\",\n        \"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\",\n        \"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\",\n        \"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\",\n        \"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\",\n        \"11eabc1e72394af02bbe86815975d054816fe69006fdc64c6d7a06b585e5c311\",\n        \"71cf5017c4c5f69db5c17a8cfb4c28ffc14ad1715dba2a83f0c30e534291f828\",\n        \"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\",\n        \"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\",\n        \"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\",\n        \"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\",\n        \"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\",\n        \"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\",\n        \"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\",\n        \"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\",\n        \"c98c6303af03f7f3b2673ceece962134088e5dcc3c69a0977069c6201b26dc9b\",\n        \"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\",\n        \"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\",\n        \"c24aea30305d539887223fd923df775644b1d86db0aac8c654026e823b549cd7\",\n        \"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\",\n        \"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\",\n        \"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\",\n        \"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\",\n        \"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\",\n        \"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\",\n        \"f0567069d4f2a2e536e46173a097b318daf03edef989f6875ca06f5c4d49abc9\",\n        \"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\",\n        \"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\",\n        \"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\",\n        \"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\",\n        \"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\",\n        \"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\",\n        \"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"\n      ]\n    }\n  },\n  \"minableCommitments\": {\n    \"llmq_50_60\": {\n      \"version\": 1,\n      \"llmqType\": 1,\n      \"quorumHash\": \"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\",\n      \"signersCount\": 0,\n      \"validMembersCount\": 0,\n      \"quorumPublicKey\": \"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n    }\n  }\n}\n```\n\n## Quorum Sign\n\nThe `quorum sign` RPC requests threshold-signing for a message.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Note: Used for RegTest testing only.\",\n  \"title\": \"Regtest Network Only\"\n}\n[/block]\n*Parameter #1---LLMQ Type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`llmqType` | number | Required<br>(exactly 1) | [Type of quorum](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types):<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\n*Parameter #2---id*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`id` | string (hex) | Required<br>(exactly 1) | Signing request ID\n\n*Parameter #3---message hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`msgHash` | string (hex) | Required<br>(exactly 1) | Hash of the message to be signed\n\n*Parameter #4---quorum hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`quorumHash` | string (hex) | Optional<br>(0 or 1) | **Added in Dash Core 0.16.0**<br><br>The quorum identifier. Used by [Dash Platform](https://dashplatform.readme.io/docs/introduction-what-is-dash-platform) to direct layer 2 signing requests to a specific quorum.\n\n*Result---status*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nresult | bool | Required<br>(exactly 1) | True or false depending on success\n\n*Example from Dash Core 0.14.0*\n\n``` bash\ndash-cli -testnet quorum sign 1 \\\n  \"abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234\" \\\n  \"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"\n```\n\nResult:\n``` json\nfalse\n```\n\n## Quorum GetRecSig\n\nThe `quorum getrecsig` RPC gets the recovered signature for a previous threshold-signing message request.\n\n*Parameter #1---LLMQ Type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`llmqType` | number | Required<br>(exactly 1) | [Type of quorum](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types):<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\n*Parameter #2---id*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`id` | string (hex) | Required<br>(exactly 1) | Signing request ID\n\n*Parameter #3---message hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`msgHash` | string (hex) | Required<br>(exactly 1) | Hash of the message to be signed\n\n*Result---recovered signature*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nresult | bool | Required<br>(exactly 1) | Recovered signature details\n\u2192<br>`llmqType` | number | Required<br>(exactly 1) | [Type of quorum](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types):<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\u2192<br>`quorumHash` | string (hex) | Required<br>(exactly 1) | The block hash of the quorum  \n\u2192<br>`id` | string (hex) | Required<br>(exactly 1) | The signing session ID\n\u2192<br>`msgHash` | string (hex) | Required<br>(exactly 1) | The message hash\n\u2192<br>`sig` | string (hex) | Required<br>(exactly 1) | The recovered signature\n\u2192<br>`hash` | string (hex) | Required<br>(exactly 1) | The hash of the recovered signature\n\n*Example from Dash Core 0.14.0*\n\n``` bash\ndash-cli -testnet quorum getrecsig 1 \\\n  \"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\" \\\n  \"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\"\n```\n\nResult:\n``` json\n{\n  \"llmqType\": 1,\n  \"quorumHash\": \"00000000008344da08e4d262773ea545472fbf625f78b3ebfe5fc067c33b1d22\",\n  \"id\": \"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\",\n  \"msgHash\": \"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\",\n  \"sig\": \"1365171c408d686af2ca8f5fae91cdf9cf0b5eec60b0b161b9288a1c68e2cd68f225495a787415c924c5953a6282d131178aa6baf4c2673d19549fc627740cf71d295f8a38b9970525a7f248d54a548e16da285b5c1f3ec0740ad40edbcc8615\",\n  \"hash\": \"d9b7f7904746fbb3eeaeec36fadc79b351f6a854cd22ee9e607592aee972fcb2\"\n}\n```\n\n## Quorum HasRecSig\n\nThe `quorum hasrecsig` RPC checks for a recovered signature for a previous threshold-signing message request.\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Note: Used for RegTest testing only.\",\n  \"title\": \"Regtest Network Only\"\n}\n[/block]\n*Parameter #1---LLMQ Type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`llmqType` | number | Required<br>(exactly 1) | [Type of quorum](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types):<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\n*Parameter #2---id*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`id` | string (hex) | Required<br>(exactly 1) | Signing request ID\n\n*Parameter #3---message hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`msgHash` | string (hex) | Required<br>(exactly 1) | Hash of the message to be signed\n\n*Result---status*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nresult | bool | Required<br>(exactly 1) | True or false depending on success\n\n*Example from Dash Core 0.14.0*\n\n``` bash\ndash-cli -testnet quorum hasrecsig 1 \\\n  \"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\" \\\n  \"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\"\n```\n\nResult:\n``` json\ntrue\n```\n\n## Quorum IsConflicting\n\nThe `quorum isconflicting` RPC checks if there is a conflict for a threshold-signing message request.\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Note: Used for RegTest testing only.\",\n  \"title\": \"Regtest Network Only\"\n}\n[/block]\n*Parameter #1---LLMQ Type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`llmqType` | number | Required<br>(exactly 1) | [Type of quorum](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types):<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\n*Parameter #2---id*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`id` | string (hex) | Required<br>(exactly 1) | Signing request ID\n\n*Parameter #3---message hash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`msgHash` | string (hex) | Required<br>(exactly 1) | Hash of the message to be signed\n\n*Result---status*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nresult | bool | Required<br>(exactly 1) | True or false depending on success\n\n*Example from Dash Core 0.14.0*\n\n``` bash\ndash-cli -testnet quorum isconflicting 1 \\\n  \"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\" \\\n  \"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\"\n```\n\nResult:\n``` json\nfalse\n```\n\n## Quorum MemberOf\n\nThe [`quorum` RPC](core-api-ref-remote-procedure-calls-evo#section-quorum) checks which quorums the given masternode is a member of.\n\n*Parameter #1---proTxHash*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nproTxHash | string | Required<br>(exactly 1) | ProTxHash of the masternode.\n\n*Parameter #2---scanQuorumsCount*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nscanQuorumsCount | number | Optional | Number of quorums to scan for. If not specified, the active quorum count for each specific quorum type is used.\n\n*Result---list of quorums the masternode is a member of*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | Array of objects | Required<br>(exactly 1) | Array containing info for quorum's the masternode belongs to\n\u2192<br>Quorum | object | Required<br>(0 or more) | An object describing quorum details\n\u2192 \u2192<br>`height` | number | Required<br>(exactly 1) | Block height of the quorum\n\u2192 \u2192<br>`type` | string | Required<br>(exactly 1) | [Type of quorum](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types)\n\u2192 \u2192<br>`quorumHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum\n\u2192 \u2192<br>`minedBlock` | string (hex) | Required<br>(exactly 1) | The hash of the block that established the quorum\n\u2192 \u2192<br>`quorumPublicKey` | string (hex) | Required<br>(exactly 1) | Quorum public key\n\u2192 \u2192<br>`isValidMember` | bool | Required<br>(exactly 1) | Indicates if the member is valid\n\u2192 \u2192<br>`memberIndex` | number | Required<br>(exactly 1) | Index of the member within the quorum\n\n*Example from Dash Core 0.15.0*\n\n``` bash\ndash-cli -testnet quorum memberof 1 \\\n  39c07d2c9c6d0ead56f52726b63c15e295cb5c3ecf7fe1fefcfb23b2e3cfed1f 1\n```\n\nResult:\n``` json\n[\n  {\n    \"height\": 72000,\n    \"type\": \"llmq_400_60\",\n    \"quorumHash\": \"0000000007697fd69a799bfa26576a177e817bc0e45b9fcfbf48b362b05aeff2\",\n    \"minedBlock\": \"00000000014d910dca80944b52aa3f522d5604254043b8354d641912aace4343\",\n    \"quorumPublicKey\": \"03a3fbbe99d80a9be8fc59fd4fe43dfbeba9119b688e97493664716cdf15ae47fad70fea7cb93f20fba10d689f9e3c02\",\n    \"isValidMember\": true,\n    \"memberIndex\": 80\n  }\n]\n```\n\n*See also: none*\n\n## Quorum SelectQuorum\n\nThe `quorum selectquorum` RPC returns information about the quorum that would/should sign a request.\n\n*Parameter #1---LLMQ Type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`llmqType` | number | Required<br>(exactly 1) | [Type of quorums](https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types) to list:<br>`1` - LLMQ_50_60<br>`2` - LLMQ_400_60<br>`3` - LLMQ_400_85\n\n*Parameter #2---request id*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`id` | string (hex) | Required<br>(exactly 1) | The request ID\n\n*Result---quorum hash and list of quorum members*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | Array of objects | Required<br>(exactly 1) | Array containing info for quorum's the masternode belongs to\n\u2192<br>`quorumHash` | string (hex) | Required<br>(exactly 1) | The hash of the quorum\n\u2192\u2192<br>`recoveryMembers` | array | Required<br>(exactly 1) | Array containing ProRegTx hashes\n\u2192\u2192\u2192<br>ProRegTx Hash | string (hex) | Required<br>(exactly 1) | The hash of the provider transaction as hex in RPC byte order\n\n*Example from Dash Core 0.16.0*\n\n``` bash\ndash-cli -testnet quorum selectquorum 1 \\\n  b95205c3bba72e9edfbe7380ec91fe5a97e16a189e28f39b03c6822757ad1a34\n```\n\nResult:\n``` json\n{\n  \"quorumHash\": \"00000ba8932486c66ed0742fd6b0f4e65afc75ab1e7886c6ef84580dfb7da34f\",\n  \"recoveryMembers\": [\n    \"0130c115522681b87082db1f45c38423d1a018a8e1559c2491103931e891c220\",\n    \"dcd5dd71c4bd50c76d428f72b4a5731bd819720fbc656fff717548e2fe8cbd09\",\n    \"a25c2f4549da0135411122ee9c2d37e8375577dc97431a282a5c374b4c71463a\",\n    \"a1aaa653e5183d6a4525abfd0a76fc7d6a68393a1c4259117028dfce4fd215e1\",\n    \"4c9eb7849590cca2aa18bf9aeeb1e4196c833740de2b111a7690eb62319b0735\",\n    \"f38b8c5cb6c9e712aeeb150b9591cbdc70e99f9f26c1516955dd506b20dd9876\",\n    \"afe12673c32de351e9f5a29178cd55656f03e64357be872536eb50b059032fe0\",\n    \"651d56765c77b8c16b829a4a68f6d39cab40c913d0d365d7b7fd254ccc6cb2f1\",\n    \"f88d0e5349d0bf7e4426a7461d7931d09f54c13edb6d83306c2521d19eb0b14b\",\n    \"bdba1f169ab1e73c4dc96f4133b337c36907976e26a4612ffa5ae18869eba96c\",\n    \"94044c070f9ce6bdd05c2b655ad2383c8402a74c10e0a9a3099d759b33cb7630\",\n    \"515f77efd5983a765dc5740b0e0d3fae6e867917ca384467b24e31dda68c7369\",\n    \"d1ebecfb816f5b4b5f34c91c0aab9c1b643c8567473e6ee35e02e01c9f2304c0\",\n    \"2755d546b114aaec98589cf5b946e408a8996e4837234d2eee97e1da8c71e9ce\",\n    \"b04b5240a8fc5ae62865dfa2e2558894f4b53d82fe88771e5345407b560d59bc\",\n    \"53750150229202353bfbc3a2c866b993dd33a4c749d8f18ddcb1f5caf7e901ef\",\n    \"7a5d1e05d4772feede8b9e71e17e013f99e77c622f13897b8a96339d6d06e1fc\",\n    \"24f6fae5b5afd001d1046425f38e6ef523140afafc83013468bd31feb343f307\",\n    \"18f2e176adf88043c41b406d0c97a2dd529d5daaca8b8ac49f72e6da30334926\",\n    \"73191708ab5b21cc7ede9b12bc1e79de97ad5c4b9717a4fbf5de0ed1f3a5836a\",\n    \"b57da176c0b6deae786afd318a8e00e351bed0f47ceac28f5b6d3d502f1c68d7\",\n    \"161b2dcf8243162d11065eefd0948cb79d96dfa8ae869e34763a2bbd7d1d5d55\",\n    \"fac81f18b3a968f5f881324d8eb38983f3f892c4999c2f46809c4de620b784d2\",\n    \"42267d2c50a68350c880a488ec25ba0eac4e7cd436eb97c686fe0a6d035d25d3\",\n    \"0be00b051c77fd4b6dac46a63b939f73726dc61dd80616e4573a9465f1aafa93\"\n  ]\n}\n\n```\n\n*See also: none*",
 "order": 5,
 "isReference": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "pendingAlgoliaPublish": false,
 "createdAt": "2019-10-24T19:41:27.770Z",
 "updatedAt": "2020-05-11T15:59:13.322Z",
 "_id": "5e96055329a18c0025d39225",
 "version": "5e96055329a18c0025d39261",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "5e96055329a18c0025d39220",
 "category": "5e96055329a18c0025d391e6",
 "__v": 1,
 "isApi": false,
 "id": "5e96055329a18c0025d39225",
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-bls\"></div>BLS<a class=\"fa fa-anchor\" href=\"#section-bls\"></a></h1>\n<p><em>Added in Dash Core 0.13.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-evo#section-bls\"><code>bls</code> RPC</a> provides a set of commands to execute BLS-related actions.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-bls-generate\"></div>BLS Generate<a class=\"fa fa-anchor\" href=\"#section-bls-generate\"></a></h2>\n<p>The <code>bls generate</code> RPC creates a new BLS secret/public key pair.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---a secret/public key pair</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>BLS key pair</td>\n</tr>\n<tr>\n<td>\u2192<br><code>secret</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>A BLS secret key</td>\n</tr>\n<tr>\n<td>\u2192<br><code>public</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>A BLS public key</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> bls generate</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"secret\"</span>: <span class=\"cm-string\">\"52f35cd3d977a505485f2474e7e71ef3f60f859603d72ad6b0fa7f7bd163e144\"</span>,\n  <span class=\"cm-property\">\"public\"</span>: <span class=\"cm-string\">\"885d01d746c3e4d2093b0975de2d8c1f3e5a2c3e8fdaaed929f86fc9fbb278a095248163c101a2456650b415776b7990\"</span>\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-bls-from-secret\"></div>BLS FromSecret<a class=\"fa fa-anchor\" href=\"#section-bls-from-secret\"></a></h2>\n<p>The <code>bls fromsecret</code> RPC parses a BLS secret key and returns the secret/public key pair.</p>\n<p><em>Parameter #1---secret key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>secret</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The BLS secret key</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---the secret/public key pair</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>BLS key pair</td>\n</tr>\n<tr>\n<td>\u2192<br><code>secret</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>A BLS secret key</td>\n</tr>\n<tr>\n<td>\u2192<br><code>public</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>A BLS public key</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.14.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> bls fromsecret 52f35cd3d977a505485f2474e7e71ef3f60f859603d72ad6b0fa7f7bd163e144</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"secret\"</span>: <span class=\"cm-string\">\"52f35cd3d977a505485f2474e7e71ef3f60f859603d72ad6b0fa7f7bd163e144\"</span>,\n  <span class=\"cm-property\">\"public\"</span>: <span class=\"cm-string\">\"885d01d746c3e4d2093b0975de2d8c1f3e5a2c3e8fdaaed929f86fc9fbb278a095248163c101a2456650b415776b7990\"</span>\n}</span>\n</code></pre>\n<p><em>See also: none</em></p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx\"></div>ProTx<a class=\"fa fa-anchor\" href=\"#section-pro-tx\"></a></h1>\n<p><em>Added in Dash Core 0.13.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-evo#section-pro-tx\"><code>protx</code> RPC</a> provides a set of commands to execute ProTx related actions.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-register\"></div>ProTx Register<a class=\"fa fa-anchor\" href=\"#section-pro-tx-register\"></a></h2>\n<p>The <code>protx register</code> RPC creates a ProRegTx referencing an existing collateral and and sends it to the network.</p>\n<p><em>Parameter #1---collateral address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>collateralHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral transaction hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---collateral index</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>collateralIndex</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral transaction output index</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---IP Address and port</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ipAndPort</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>IP and port in the form &#39;IP:PORT&#39;.<br>Must be unique on the network.<br>Can be set to &#39;0&#39;, which will require a ProUpServTx afterwards.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---owner address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ownerAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner key used for payee updates and proposal voting. The private key belonging to this address be known in your wallet. The address must be unused and must differ from the <code>collateralAddress</code>.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #5---operator public key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorPubKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #6---voting address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>votingAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, <code>ownerAddress</code> will be used.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #7---operator reward</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorReward</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The fraction in % to share with the operator. If non-zero, <code>ipAndPort</code> must be zero as well.<br>The value must be between &#39;0.00&#39; and &#39;100.00&#39;.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #8---payout address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>payoutAddress</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Dash address to use for masternode reward payments.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #9---fee source address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>feeSourceAddress</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, <code>payoutAddress</code> will be used. The private key belonging to this address must be known in your wallet.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---provider registration transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Provider registration transaction (ProRegTx) hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx register\\\n 8b2eab3413abb6e04d17d1defe2b71039ba6b6f72ea1e5dab29bb10e7b745948 <span class=\"cm-number\">1</span>\\\n <span class=\"cm-number\">2</span>.3.4.5:2345 yNLuVTXJbjbxgrQX5LSMi7hV19We8hT2d6\\\n 88d719278eef605d9c19037366910b59bc28d437de4a8db4d76fda6d6985dbdf10404fb9bb5cd0e8c22f4a914a6c5566\\\n yNLuVTXJbjbxgrQX5LSMi7hV19We8hT2d6 <span class=\"cm-number\">5</span> yjJJLkYDUN6X8gWjXbCoKEXoiLeKxxMMRt</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>61e6d780178d353940c4cb9b3073ac0c50792bbcf0b15c1750d2028b71e34929</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-register-fund\"></div>ProTx Register Fund<a class=\"fa fa-anchor\" href=\"#section-pro-tx-register-fund\"></a></h2>\n<p>The <code>protx register_fund</code> RPC creates and funds a ProRegTx with the 1,000 DASH necessary for a masternode and then sends it to the network.</p>\n<p><em>Parameter #1---collateral address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>collateralAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Dash address to send the collateral to</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---IP Address and port</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ipAndPort</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>IP and port in the form &#39;IP:PORT&#39;.<br>Must be unique on the network.<br>Can be set to &#39;0&#39;, which will require a ProUpServTx afterwards.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---owner address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ownerAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner key used for payee updates and proposal voting. The private key belonging to this address be known in your wallet. The address must be unused and must differ from the <code>collateralAddress</code>.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---operator public key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorPubKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #5---voting address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>votingAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, <code>ownerAddress</code> will be used.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #6---operator reward</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorReward</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The fraction in % to share with the operator.<br>The value must be between &#39;0.00&#39; and &#39;100.00&#39;.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #7---payout address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>payoutAddress</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Dash address to use for masternode reward payments.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #8---fund address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fundAddress</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, <code>payoutAddress</code> will be used. The private key belonging to this address must be known in your wallet.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---provider registration transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Provider registration transaction (ProRegTx) hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx register_fund yakx4mMRptKhgfjedNzX5FGQq7kSSBF2e7\\\n <span class=\"cm-number\">3</span>.4.5.6:3456 yX2cDS4kcJ4LK4uq9Hd4TG7kURV3sGLZrw\\\n 0e02146e9c34cfbcb3f3037574a1abb35525e2ca0c3c6901dbf82ac591e30218d1711223b7ca956edf39f3d984d06d51\\\n yX2cDS4kcJ4LK4uq9Hd4TG7kURV3sGLZrw <span class=\"cm-number\">5</span> yakx4mMRptKhgfjedNzX5FGQq7kSSBF2e7</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-register-prepare\"></div>ProTx Register Prepare<a class=\"fa fa-anchor\" href=\"#section-pro-tx-register-prepare\"></a></h2>\n<p>The <code>protx register_prepare</code> RPC creates an unsigned ProTx and<br>returns it. The ProTx must be signed externally with the collateral key and then<br>passed to &quot;protx register_submit&quot;. The prepared transaction will also contain inputs<br>and outputs to cover fees.</p>\n<p><em>Parameter #1---collateral address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>collateralHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral transaction hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---collateral index</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>collateralIndex</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral transaction output index</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---IP Address and port</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ipAndPort</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>IP and port in the form &#39;IP:PORT&#39;.<br>Must be unique on the network.<br>Can be set to &#39;0&#39;, which will require a ProUpServTx afterwards.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---owner address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ownerAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner key used for payee updates and proposal voting. The private key belonging to this address be known in your wallet. The address must be unused and must differ from the <code>collateralAddress</code>.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #5---operator public key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorPubKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #6---voting address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>votingAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, <code>ownerAddress</code> will be used.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #7---operator reward</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorReward</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The fraction in % to share with the operator.<br>The value must be between &#39;0.00&#39; and &#39;100.00&#39;.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #8---payout address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>payoutAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Dash address to use for masternode reward payments.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #9---fee source address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>feeSourceAddress</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, <code>payoutAddress</code> will be used. The private key belonging to this address must be known in your wallet.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---unsigned transaction and message to sign</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>JSON object containing an unsigned provider transaction and the message to be signed externally, or JSON <code>null</code> if an error occurred</td>\n</tr>\n<tr>\n<td>\u2192<br><code>tx</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The serialized ProRegTx in hex format</td>\n</tr>\n<tr>\n<td>\u2192<br><code>collateralAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral address</td>\n</tr>\n<tr>\n<td>\u2192<br><code>signMessage</code></td>\n<td>string (base64)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The string message that needs to be signed with the collateral key.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx register_prepare\\\n df41e398bb245e973340d434d386f431dbd69735a575721b0b6833856e7d31ec <span class=\"cm-number\">1</span> \\\n <span class=\"cm-number\">9</span>.8.7.6:9876 yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz\\\n 06849865d01e4f73a6d5a025117e48f50b897e14235800501c8bfb8a6365cc8dbf5ddb67a3635d0f1dcc7d46a7ee280c\\\n yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz <span class=\"cm-number\">1</span>.2 yjJJLkYDUN6X8gWjXbCoKEXoiLeKxxMMRt</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"tx\"</span>: <span class=\"cm-string\">\"0300010001912b88876fee2f8e43e23b5e81276c163cf23d867bad4148170cb106ef9023700000000000feffffff0125623ba40b0000001976a914736e155c1039a269d4019c66219d2a18f0fee27588ac00000000d1010000000000ec317d6e8533680b1b7275a53597d6db31f486d334d44033975e24bb98e341df0100000000000000000000000000ffff090807062694ca6b243168b30461d1f19e2bb89a965a5bac067e06849865d01e4f73a6d5a025117e48f50b897e14235800501c8bfb8a6365cc8dbf5ddb67a3635d0f1dcc7d46a7ee280cca6b243168b30461d1f19e2bb89a965a5bac067e78001976a914fc136008111fcc7a05be6cec66f97568727a9e5188ace5f6b70ac55411727e25178bd417b9b03f837ad7155d90ad286f3a427203fb9f00\"</span>,\n  <span class=\"cm-property\">\"collateralAddress\"</span>: <span class=\"cm-string\">\"yWuKWhDzGQqZL8rw6kGxGrfe6P8bUC2S4f\"</span>,\n  <span class=\"cm-property\">\"signMessage\"</span>: <span class=\"cm-string\">\"yjJJLkYDUN6X8gWjXbCoKEXoiLeKxxMMRt|120|yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz|yemjhGQ99V5ayJMjoyGGPtxteahii6G1Jz|69a49e18c1253b90d39322f7e2f7af74524401bc33a27645e697e74a214e3e1e\"</span>\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-register-submit\"></div>ProTx Register Submit<a class=\"fa fa-anchor\" href=\"#section-pro-tx-register-submit\"></a></h2>\n<p>The <code>protx register_submit</code> RPC submits the specified ProTx to the<br>network. This command will also sign the inputs of the transaction which were<br>previously added by <code>protx register_prepare</code> to cover transaction fees.</p>\n<p><em>Parameter #1---collateral address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>tx</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The serialized transaction previously returned by <code>protx register_prepare</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---collateral index</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>sig</code></td>\n<td>string (base64)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The signature signed with the collateral key. Must be in base64 format.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---provider registration transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Provider registration transaction (ProRegTx) hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx register_submit\\\n 03000100012d988526d5d1efd32320023c92eff09c2963dcb021b0de9761\\\n 17e5e37dc7a7870000000000feffffff015f603ba40b0000001976a9140c\\\n 37e07eb5c608961769e6506c23c11e9f9fe00988ac00000000d101000000\\\n 00002d988526d5d1efd32320023c92eff09c2963dcb021b0de976117e5e3\\\n 7dc7a7870100000000000000000000000000ffff05060708162e243dd366\\\n bf4a329968d77eac9fb63481a600938d125e1b7cba03ca2a097e402185e6\\\n 160232ea53e6d62898a3be8617b06ff347d967543228bd9b605547c3d478\\\n b0a838ca243dd366bf4a329968d77eac9fb63481a600938dc4091976a914\\\n e9bf4e6f26fecf1dfc1e04dde43472df378628b888ac6a048e7f645e8adc\\\n 305ccfd8652066046a0702596af13b8ac97803ade256da2900\\\n \\\n H90IvqVtFjZkwLJb08yMEgGixs0&#47;FpcdvwImBcir4cYLJhD3pdX<span class=\"cm-operator\">+</span>lKD2GsPl6KNxghVXNk5&#47;HpOdBoWAHo9u<span class=\"cm-operator\">++</span><span class=\"cm-def\">Y</span><span class=\"cm-operator\">=</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>273ce3ebe24183ee4117b10e054cdbb108a3bde5d2f286129e29480d46a3f573</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-list\"></div>ProTx List<a class=\"fa fa-anchor\" href=\"#section-pro-tx-list\"></a></h2>\n<p>The <code>protx list</code> RPC returns a list of provider transactions.</p>\n<p>Lists all ProTxs in your wallet or on-chain, depending on the given type. If<br><code>type</code> is not specified, it defaults to <code>registered</code>. All types have the optional<br>argument <code>detailed</code> which if set to <code>true</code> will result in a detailed list being<br>returned. If set to <code>false</code>, only the hashes of the ProTx will be returned.</p>\n<p><em>Parameter #1---type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The type of ProTxs to list:<br><code>registered</code> - all ProTxs registered at height<br><code>valid</code> - all active/valid ProTxs at height<br><code>wallet</code> - all ProTxs found in the current wallet<br><br>Height defaults to current chain-tip if one is not provided</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---detailed</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>detailed</code></td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If set to <code>false</code> (default), only ProTx hashes are returned. If set to <code>true</code>, a detailed list of ProTx details is returned.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---height</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>height</code></td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>List ProTxs from this height (default: current chain tip).</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result (if <code>detailed</code> was <code>false</code>)---provider registration transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string (hex): array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array of provider transaction (ProTx) hashes</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result (if <code>detailed</code> was <code>true</code>)---JSON provider registration transaction details</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects each containing a provider transaction, or JSON <code>null</code> if an error occurred</td>\n</tr>\n<tr>\n<td><br>Provider Transaction</td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td>An object containing a provider transaction</td>\n</tr>\n<tr>\n<td>\u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the provider transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192<br><code>collateralHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the collateral transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192<br><code>collateralIndex</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>collateralAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral address</td>\n</tr>\n<tr>\n<td>\u2192<br><code>operatorReward</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator reward %</td>\n</tr>\n<tr>\n<td>\u2192<br><code>state</code></td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td>An object containing a provider transaction state</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>service</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The masternode&#39;s IP:Port</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>registeredHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode was registered</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastPaidHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode was last paid</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>PoSePenalty</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The masternode&#39;s proof of service penalty</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>PoSeRevivedHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode recovered from a proof of service ban</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>PoSeBanHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode was banned for proof of service violations</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>revocationReason</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The reason for a ProUpRegTx revocation</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownerAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>votingAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>payoutAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner&#39;s payout address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>pubKeyOperator</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>operatorPayoutAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator&#39;s payout address</td>\n</tr>\n<tr>\n<td>\u2192<br><code>confirmations</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of confirmations this ProTx has</td>\n</tr>\n<tr>\n<td>\u2192<br><code>wallet</code></td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td>An object containing a wallet details related to this ProTx</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>hasOwnerKey</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>hasOperatorKey</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>hasVotingKey</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownsCollateral</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral is owned by this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownsPayeeScript</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The payee script is owned by this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownsOperatorRewardScript</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator reward script is owned by this wallet</td>\n</tr>\n<tr>\n<td>\u2192<br><code>metaInfo</code></td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>An object containing a metainfo related to this ProTx</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastDSQ</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>mixingTxCount</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundAttempt</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Unix epoch time of the last outbound attempted</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundAttemptElapsed</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Elapsed time since last outbound attempt</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundSuccess</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Unix epoch time of the last successful outbound connection</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundSuccessElapsed</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Elapsed time since last successful outbound attempt</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.16.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx list</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n  <span class=\"cm-string\">\"2b4a07a9b04dc42a0c19b85edb60954a27acaadfe3ee21d0171385778f34e1c2\"</span>,\n  <span class=\"cm-string\">\"61e6d780178d353940c4cb9b3073ac0c50792bbcf0b15c1750d2028b71e34929\"</span>,\n  <span class=\"cm-string\">\"ca193751f3cbed2aa4f1b33b0acc48c7ed8b9a3679858d69cf23157a4f545176\"</span>,\n  <span class=\"cm-string\">\"ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\"</span>\n]</span>\n</code></pre>\n<p>List of ProTxs which are active/valid at the given chain height.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx list valid <span class=\"cm-atom\">false</span> <span class=\"cm-number\">7090</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n  <span class=\"cm-string\">\"c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f\"</span>\n]</span>\n</code></pre>\n<p>Detailed list of ProTxs which are active/valid at the given chain height.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx list valid <span class=\"cm-atom\">true</span> <span class=\"cm-number\">7090</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n  {\n    <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f\"</span>,\n    <span class=\"cm-property\">\"collateralHash\"</span>: <span class=\"cm-string\">\"e3270ff48c4b802d56ee58d3d53777f7f9c289964e4df0842518075fc81345b1\"</span>,\n    <span class=\"cm-property\">\"collateralIndex\"</span>: <span class=\"cm-number\">3</span>,\n    <span class=\"cm-property\">\"collateralAddress\"</span>: <span class=\"cm-string\">\"yYpzTXjVx7A5uohsmW8sRy7TJp4tihVuZg\"</span>,\n    <span class=\"cm-property\">\"operatorReward\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"state\"</span>: {\n      <span class=\"cm-property\">\"service\"</span>: <span class=\"cm-string\">\"173.61.30.231:19013\"</span>,\n      <span class=\"cm-property\">\"registeredHeight\"</span>: <span class=\"cm-number\">7090</span>,\n      <span class=\"cm-property\">\"lastPaidHeight\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"PoSePenalty\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"PoSeRevivedHeight\"</span>: <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"PoSeBanHeight\"</span>: <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"revocationReason\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"ownerAddress\"</span>: <span class=\"cm-string\">\"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\"</span>,\n      <span class=\"cm-property\">\"votingAddress\"</span>: <span class=\"cm-string\">\"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\"</span>,\n      <span class=\"cm-property\">\"payoutAddress\"</span>: <span class=\"cm-string\">\"yU3UdrmS6KpWwBDLQTkp1KjXePwWsMbYdj\"</span>,\n      <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"8700add55a28ef22ec042a2f28e25fb4ef04b3024a7c56ad7eed4aebc736f312d18f355370dfb6a5fec9258f464b227e\"</span>\n    },\n    <span class=\"cm-property\">\"confirmations\"</span>: <span class=\"cm-number\">292830</span>,\n    <span class=\"cm-property\">\"wallet\"</span>: {\n      <span class=\"cm-property\">\"hasOwnerKey\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"hasOperatorKey\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"hasVotingKey\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"ownsCollateral\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"ownsPayeeScript\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"ownsOperatorRewardScript\"</span>: <span class=\"cm-atom\">false</span>\n    },\n    <span class=\"cm-property\">\"metaInfo\"</span>: {\n      <span class=\"cm-property\">\"lastDSQ\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"mixingTxCount\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"lastOutboundAttempt\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"lastOutboundAttemptElapsed\"</span>: <span class=\"cm-number\">1588171141</span>,\n      <span class=\"cm-property\">\"lastOutboundSuccess\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"lastOutboundSuccessElapsed\"</span>: <span class=\"cm-number\">1588171141</span>\n    }\n  }\n]</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-info\"></div>ProTx Info<a class=\"fa fa-anchor\" href=\"#section-pro-tx-info\"></a></h2>\n<p>The <code>protx info</code> RPC returns detailed information about a deterministic masternode.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An JSON object containing a provider transaction, or JSON <code>null</code> if an error occurred</td>\n</tr>\n<tr>\n<td><br>Provider Transaction</td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td>An object containing a provider transaction</td>\n</tr>\n<tr>\n<td>\u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the provider transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192<br><code>collateralHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the collateral transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192<br><code>collateralIndex</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>collateralAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral address</td>\n</tr>\n<tr>\n<td>\u2192<br><code>operatorReward</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator reward %</td>\n</tr>\n<tr>\n<td>\u2192<br><code>state</code></td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td>An object containing a provider transaction state</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>service</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The masternode&#39;s IP:Port</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>registeredHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode was registered</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastPaidHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode was last paid</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>PoSePenalty</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The masternode&#39;s proof of service penalty</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>PoSeRevivedHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode recovered from a proof of service ban</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>PoSeBanHeight</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The height where the masternode was banned for proof of service violations</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>revocationReason</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The reason for a ProUpRegTx revocation</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownerAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>votingAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>payoutAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner&#39;s payout address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>pubKeyOperator</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>operatorPayoutAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator&#39;s payout address</td>\n</tr>\n<tr>\n<td>\u2192<br><code>confirmations</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of confirmations this ProTx has</td>\n</tr>\n<tr>\n<td>\u2192<br><code>wallet</code></td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td>An object containing a wallet details related to this ProTx</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>hasOwnerKey</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>hasOperatorKey</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>hasVotingKey</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownsCollateral</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The collateral is owned by this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownsPayeeScript</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The payee script is owned by this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>ownsOperatorRewardScript</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator reward script is owned by this wallet</td>\n</tr>\n<tr>\n<td>\u2192<br><code>metaInfo</code></td>\n<td>object/null</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>An object containing a metainfo related to this ProTx</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastDSQ</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The owner key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>mixingTxCount</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator key is present in this wallet</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundAttempt</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Unix epoch time of the last outbound attempted</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundAttemptElapsed</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Elapsed time since last outbound attempt</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundSuccess</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Unix epoch time of the last successful outbound connection</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>lastOutboundSuccessElapsed</code></td>\n<td>integer</td>\n<td>Required<br>(exactly 1)</td>\n<td>Elapsed time since last successful outbound attempt</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.16.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx info\\\n c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"c48a44a9493eae641bea36992bc8c27eaaa33adb1884960f55cd259608d26d2f\"</span>,\n  <span class=\"cm-property\">\"collateralHash\"</span>: <span class=\"cm-string\">\"e3270ff48c4b802d56ee58d3d53777f7f9c289964e4df0842518075fc81345b1\"</span>,\n  <span class=\"cm-property\">\"collateralIndex\"</span>: <span class=\"cm-number\">3</span>,\n  <span class=\"cm-property\">\"collateralAddress\"</span>: <span class=\"cm-string\">\"yYpzTXjVx7A5uohsmW8sRy7TJp4tihVuZg\"</span>,\n  <span class=\"cm-property\">\"operatorReward\"</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"state\"</span>: {\n    <span class=\"cm-property\">\"service\"</span>: <span class=\"cm-string\">\"173.61.30.231:19013\"</span>,\n    <span class=\"cm-property\">\"registeredHeight\"</span>: <span class=\"cm-number\">7090</span>,\n    <span class=\"cm-property\">\"lastPaidHeight\"</span>: <span class=\"cm-number\">134608</span>,\n    <span class=\"cm-property\">\"PoSePenalty\"</span>: <span class=\"cm-number\">334</span>,\n    <span class=\"cm-property\">\"PoSeRevivedHeight\"</span>: <span class=\"cm-number\">96516</span>,\n    <span class=\"cm-property\">\"PoSeBanHeight\"</span>: <span class=\"cm-number\">134819</span>,\n    <span class=\"cm-property\">\"revocationReason\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"ownerAddress\"</span>: <span class=\"cm-string\">\"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\"</span>,\n    <span class=\"cm-property\">\"votingAddress\"</span>: <span class=\"cm-string\">\"yTMDce5yEpiPqmgPrPmTj7yAmQPJERUSVy\"</span>,\n    <span class=\"cm-property\">\"payoutAddress\"</span>: <span class=\"cm-string\">\"yU3UdrmS6KpWwBDLQTkp1KjXePwWsMbYdj\"</span>,\n    <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"8700add55a28ef22ec042a2f28e25fb4ef04b3024a7c56ad7eed4aebc736f312d18f355370dfb6a5fec9258f464b227e\"</span>\n  },\n  <span class=\"cm-property\">\"confirmations\"</span>: <span class=\"cm-number\">292831</span>,\n  <span class=\"cm-property\">\"wallet\"</span>: {\n    <span class=\"cm-property\">\"hasOwnerKey\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"hasOperatorKey\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"hasVotingKey\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"ownsCollateral\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"ownsPayeeScript\"</span>: <span class=\"cm-atom\">false</span>,\n    <span class=\"cm-property\">\"ownsOperatorRewardScript\"</span>: <span class=\"cm-atom\">false</span>\n  },\n  <span class=\"cm-property\">\"metaInfo\"</span>: {\n    <span class=\"cm-property\">\"lastDSQ\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"mixingTxCount\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"lastOutboundAttempt\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"lastOutboundAttemptElapsed\"</span>: <span class=\"cm-number\">1588171300</span>,\n    <span class=\"cm-property\">\"lastOutboundSuccess\"</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"lastOutboundSuccessElapsed\"</span>: <span class=\"cm-number\">1588171300</span>\n  }\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-update-service\"></div>ProTx Update Service<a class=\"fa fa-anchor\" href=\"#section-pro-tx-update-service\"></a></h2>\n<p>The <code>protx update_service</code> RPC creates and sends a ProUpServTx to the network.</p>\n<p><em>Parameter #1---initial provider registration transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the provider transaction as hex in RPC byte order</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---IP Address and port</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ipAndPort</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>IP and port in the form &#39;IP:PORT&#39;.<br>Must be unique on the network.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---operator public key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorPubKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---operator payout address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorPayoutAddress</code></td>\n<td>string (hex)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The Dash address used for operator reward payments. Only allowed when the ProRegTx had a non-zero <code>operatorReward</code> value. If set to an empty string, the currently active payout address is reused.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #5---fee source address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>feeSourceAddress</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, <code>operatorPayoutAddress</code> will be used. The private key belonging to this address must be known in your wallet.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---provider update service transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Provider update service transaction (ProUpServTx) hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx update_service\\\n ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\\\n <span class=\"cm-string\">\"4.3.2.1:4321\"</span>\\\n 4da7e1ea30fb9e55c73ad23df0b9d3d34342acb24facf4b19420e1a26ae272d1</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>5b6cfa1bdd3c8b7e0b9550b9c4e809381f81a410bc7f241d3879dd736fd51270</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-update-registrar\"></div>ProTx Update Registrar<a class=\"fa fa-anchor\" href=\"#section-pro-tx-update-registrar\"></a></h2>\n<p>The <code>protx update_registrar</code> RPC creates and sends a ProUpRegTx to the network.</p>\n<p><em>Parameter #1---initial provider registration transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the provider transaction as hex in RPC byte order</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---operator public key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorPubKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key. The private key does not have to be known. It has to match the private key which is later used when operating the masternode. If set to an empty string, the currently active operator BLS public key is reused.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---voting address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>votingAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting address. The private key does not have to be known by your wallet. It has to match the private key which is later used when voting on proposals. If set to an empty string, the currently active voting key address is reused.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---operator payout address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>payoutAddress</code></td>\n<td>string (hex)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The Dash address to use for masternode reward payments. If set to an empty string, the currently active payout address is reused.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #5---fee source address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>feeSourceAddress</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, <code>payoutAddress</code> will be used. The private key belonging to this address must be known in your wallet.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---provider update registrar transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Provider update registrar transaction (ProUpRegTx) hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx update_registrar\\\n <span class=\"cm-string\">\"ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\"</span>\\\n <span class=\"cm-string\">\"0e02146e9c34cfbcb3f3037574a1abb35525e2ca0c3c6901dbf82ac591e30218d1711223b7ca956edf39f3d984d06d51\"</span>\\\n <span class=\"cm-string\">\"yX2cDS4kcJ4LK4uq9Hd4TG7kURV3sGLZrw\"</span> <span class=\"cm-string\">\"yakx4mMRptKhgfjedNzX5FGQq7kSSBF2e7\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>702390ef06b10c174841ad7b863df23c166c27815e3be2438e2fee6f87882b91</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-revoke\"></div>ProTx Revoke<a class=\"fa fa-anchor\" href=\"#section-pro-tx-revoke\"></a></h2>\n<p>The <code>protx revoke</code> RPC creates and sends a ProUpRevTx to the network.</p>\n<p><em>Parameter #1---initial provider registration transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the provider transaction as hex in RPC byte order</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---operator private key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>operatorPubKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator private key belonging to the registered operator public key.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---reason</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>reason</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The reason for revocation.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---fee source address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>feeSourceAddress</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If specified, the wallet will only use coins from this address to fund the ProTx. If not specified, <code>payoutAddress</code> will be used. The private key belonging to this address must be known in your wallet.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---provider update revoke transaction hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Provider update revoke transaction (ProUpRevTx) hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx revoke\\\n <span class=\"cm-string\">\"ba1b3330e16a0876b7a186e7ceb689f03ec646e611e91d7139de021bbf13afdd\"</span>\\\n <span class=\"cm-string\">\"4da7e1ea30fb9e55c73ad23df0b9d3d34342acb24facf4b19420e1a26ae272d1\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>2aad36dd2ab254bee06b0b5dad51e7603691b72058d5806fd94e1d2d19a7c209</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-pro-tx-diff\"></div>ProTx Diff<a class=\"fa fa-anchor\" href=\"#section-pro-tx-diff\"></a></h2>\n<p>The <code>protx diff</code> RPC calculates a diff and a proof between two masternode list.</p>\n<p><em>Parameter #1---start block height</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>baseBlock</code></td>\n<td>number (int)</td>\n<td>Required<br>(Exactly 1)</td>\n<td></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---end block height</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>block</code></td>\n<td>bool</td>\n<td>Required<br>(Exactly 1)</td>\n<td></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---JSON provider registration transaction details</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects each containing a provider transaction, or JSON <code>null</code> if an error occurred</td>\n</tr>\n<tr>\n<td>\u2192<br><code>baseBlockHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the base block as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192<br><code>blockHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the ending block as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192<br><code>cbTxMerkleTree</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The coinbase transaction merkle tree</td>\n</tr>\n<tr>\n<td>\u2192<br><code>cbTx</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The coinbase transaction</td>\n</tr>\n<tr>\n<td>\u2192<br><code>deletedMNs</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of deleted masternode hashes</td>\n</tr>\n<tr>\n<td>\u2192<br><code>mnlist</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of masternode details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>proRegTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the initial provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>confirmedHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the block where the ProRegTx was mined</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>service</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The IP address/Port of the masternode</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>pubKeyOperator</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The operator public key</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>votingAddress</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The voting address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>isValid</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if masternode is valid</td>\n</tr>\n<tr>\n<td>\u2192<br><code>deletedQuorums</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of deleted quorums</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum type</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum</td>\n</tr>\n<tr>\n<td>\u2192<br><code>newQuorums</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of new quorums</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>version</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum version</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum type</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>signersCount</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of signers for the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>signers</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Bitset representing the aggregated signers of this final commitment</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>validMembersCount</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of valid members in the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>validMembers</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Bitset of valid members in this commitment</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>quorumPublicKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The public key of the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>quorumVvecHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>The SHA256 hash of the quorum verification vector</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>quorumSig</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Recovered threshold signature</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>membersSig</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Aggregated BLS signatures from all included commitments</td>\n</tr>\n<tr>\n<td>\u2192<br><code>merkleRootMNList</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Merkle root of the masternode list</td>\n</tr>\n<tr>\n<td>\u2192<br><code>merkleRootQuorums</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Coinbase Transaction version 2 (Dash Core 0.14.0)</em><br><br>Merkle root of the masternode list</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.16.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> protx <span class=\"cm-builtin\">diff</span> <span class=\"cm-number\">75000</span> <span class=\"cm-number\">76000</span></span>\n</code></pre>\n<p>Result (truncated):</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"baseBlockHash\"</span>: <span class=\"cm-string\">\"0000000003deb00bba101ee581cdc4e1cbd1243ec5cd190472ae93eff07c8881\"</span>,\n  <span class=\"cm-property\">\"blockHash\"</span>: <span class=\"cm-string\">\"0000000000c0279636003ed0042c9a454b4c39e9a6c49bb92d420e0bf4e0f49b\"</span>,\n  <span class=\"cm-property\">\"cbTxMerkleTree\"</span>: <span class=\"cm-string\">\"01000000015ef8245e2a381174f5e2cc701d5d067d9f16945179380a3ce54415114426eb510101\"</span>,\n  <span class=\"cm-property\">\"cbTx\"</span>: <span class=\"cm-string\">\"03000500010000000000000000000000000000000000000000000000000000000000000000ffffffff4c03e02801043619ab5c08fabe6d6d736170747365743a7265737574736574d6e48c2ebd4e147373617074736574730100000000000000380000ae250000000d2f6e6f64655374726174756d2f000000000340230e43000000001976a914cb594917ad4e5849688ec63f29a0f7f3badb5da688ac4cfe1c3e000000001976a91470da282ad16926e127064b7d3d787d7f3793014788acf424f104000000001976a914312d9ccd4e73f2e66006e45701bce17125ba681e88ac00000000260100e0280100d26df127ba2765c8f098ab71199c82c59509418efe26cdf02f7c92ce738e2247\"</span>,\n  <span class=\"cm-property\">\"deletedMNs\"</span>: [\n  ],\n  <span class=\"cm-property\">\"mnList\"</span>: [\n    {\n      <span class=\"cm-property\">\"proRegTxHash\"</span>: <span class=\"cm-string\">\"fef106ff6420f9c6638c9676988a8fc655750caafb506c98cb5ff3d4fea99a41\"</span>,\n      <span class=\"cm-property\">\"confirmedHash\"</span>: <span class=\"cm-string\">\"0000000005d5635228f113b50fb5ad66995a7476ed20374e6e159f1f9e62347b\"</span>,\n      <span class=\"cm-property\">\"service\"</span>: <span class=\"cm-string\">\"45.48.177.222:19999\"</span>,\n      <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"842476e8d82327adfb9b617a7ac3f62868946c0c4b6b0e365747cfb8825b8b79ba0eb1fa62e8583ae7102f59bf70c7c7\"</span>,\n      <span class=\"cm-property\">\"votingAddress\"</span>: <span class=\"cm-string\">\"yf7QHemCfbmKEncwZxroTj8JtShXsC28V6\"</span>,\n      <span class=\"cm-property\">\"isValid\"</span>: <span class=\"cm-atom\">true</span>\n    },\n    {\n      <span class=\"cm-property\">\"proRegTxHash\"</span>: <span class=\"cm-string\">\"7d56a2cf814b344f54ac4b6485a7a5b2b5a439ea796defff67f2a5872c9df5c3\"</span>,\n      <span class=\"cm-property\">\"confirmedHash\"</span>: <span class=\"cm-string\">\"00000c66555eea6272e5c7bcdb2648e1a63fd5b23a6d1d4c3f9dc5df43c6a5a8\"</span>,\n      <span class=\"cm-property\">\"service\"</span>: <span class=\"cm-string\">\"178.151.192.107:19999\"</span>,\n      <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"8631b1ba19ed23fdab61db7a81c9aa1356eaf37d0a29a14cc493e2f863080bf909b4d3e23d536be1d18e4c842566ed67\"</span>,\n      <span class=\"cm-property\">\"votingAddress\"</span>: <span class=\"cm-string\">\"yP2LXCZTVVjBFQiN2bhghQvNwdUQG8NMX8\"</span>,\n      <span class=\"cm-property\">\"isValid\"</span>: <span class=\"cm-atom\">true</span>\n    },\n    {\n      <span class=\"cm-property\">\"proRegTxHash\"</span>: <span class=\"cm-string\">\"be32ec53dbbfb64e5ba29e25e3716f6f4024291914ce4c858cd69f0b4e371dda\"</span>,\n      <span class=\"cm-property\">\"confirmedHash\"</span>: <span class=\"cm-string\">\"0000000015717296254a7c6139a50c34ad481dc8fdf7b0ea4c8320dc3fff2759\"</span>,\n      <span class=\"cm-property\">\"service\"</span>: <span class=\"cm-string\">\"173.61.30.231:19025\"</span>,\n      <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"86ce02e551a46f1ca9a734104b4e387984d733ba99930eb677aae126fa142f201049842422ab2f105e3c9805f1bd54e8\"</span>,\n      <span class=\"cm-property\">\"votingAddress\"</span>: <span class=\"cm-string\">\"ySBU7oXuuTSJqtmUArMRFsKefJPtEDkESG\"</span>,\n      <span class=\"cm-property\">\"isValid\"</span>: <span class=\"cm-atom\">false</span>\n    }\n  ],\n  <span class=\"cm-property\">\"deletedQuorums\"</span>: [\n    {\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"00000000052b95b036c87f82d19878f69bf940e6acf9f03cd818bd07a5686d0e\"</span>\n    },\n    {\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"0000000000e8b557ea26921f4bb143e961dd35209cf8c1c7b73397322c1a5018\"</span>\n    },\n    {\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000b259f422fe3b647b8f1553b846d95dc8c79699d60e48a81dcf14747\"</span>\n    },\n    {\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"00000000143365adb3c3de6a35ae247120df8ca53a61afd82cd6fd4126ca8a4d\"</span>\n    }\n  ],\n  <span class=\"cm-property\">\"newQuorums\"</span>: [\n    {\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"0000000001427858db64213ed3ef32ffb2546ca7f2a096adbefc197437b90612\"</span>,\n      <span class=\"cm-property\">\"signersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"signers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"validMembersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"validMembers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"922e3683358f09a2619efb9e8329f90d5a8a608a18e26db212613ef7f95818eb6f68372fb313edbf96fdd2cdee20a66d\"</span>,\n      <span class=\"cm-property\">\"quorumVvecHash\"</span>: <span class=\"cm-string\">\"2da4253e43adb732b06d88324384025a4cd0c2803bc6400462f9eb89ea314da8\"</span>,\n      <span class=\"cm-property\">\"quorumSig\"</span>: <span class=\"cm-string\">\"949882d7912d7d3fef46dd856bcd6c70a080b2e5484a3c900bea04b902abd12c5f75e78d13cbdc5d352187db0e15c1b40715b9d89e998bb99437ad7ae97a1b23f922d55b6fc5cca290c05b44eda564782a3440c7ef3756fc3e9895d1ac34d3d0\"</span>,\n      <span class=\"cm-property\">\"membersSig\"</span>: <span class=\"cm-string\">\"9736d9cbc7ff7189f6ef543fabc9bfc2785f60ffd4493ea4c272343da51fa61ec9867cd46b681c82a1c22a9830f8b86b0a02e34e9e71212010231024fd61cb95143591be2cace53760dba03a325e178e5fcae6a748073fadf3ab34268c8ed2bc\"</span>\n    },\n    {\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000148a6fced08763f3f31dd68a3d88d2d4f2d48eef44eb9311de66129\"</span>,\n      <span class=\"cm-property\">\"signersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"signers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"validMembersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"validMembers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"814973fcf54892fa4edbf9e732341ff1227e2a89bf59cb22b52082e940f7c3ac8a7c25163cb375b3cfe3654e86eaa65d\"</span>,\n      <span class=\"cm-property\">\"quorumVvecHash\"</span>: <span class=\"cm-string\">\"a91c4721c576850971313b9eb5ee7a886fd4dd4564e98ac0094e7a46e4351240\"</span>,\n      <span class=\"cm-property\">\"quorumSig\"</span>: <span class=\"cm-string\">\"16abcfa4137c1900899970533cd52b0c264000b48ca6bd1d29cc9baab1ef883b378d5cdb8c1dd8bb7765e154bcc8ee360cfcdc008584e2d7c29f5be8361fecf3a4cafcdea29f1cb2e75c5d67057d0557e0d6cfa65cf85ae6ed65971b8f29a913\"</span>,\n      <span class=\"cm-property\">\"membersSig\"</span>: <span class=\"cm-string\">\"18151a0b15e9ec892ae7ebc97b9e014bbe8a7f8344d24fe9f2925dae094e01500c6d5eb13b1ac6a8487be63e181a2b73053658f6b6374a01d183be1d4258ddaf0b18a4268a8a1e7d0c7ecfa414ad075d915beff5750d8ecef48b446b9c0d1da6\"</span>\n    },\n    {\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"0000000009931a8a6dcdf21a869739356e7715eb155c1a18a58c8bf13382ac33\"</span>,\n      <span class=\"cm-property\">\"signersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"signers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"validMembersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"validMembers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"0694b46d8581423f2f68196dcc2d06be0b6b365a4100b54e351ab42f5828d09fd03941f8a1255363753a53d32b43f63b\"</span>,\n      <span class=\"cm-property\">\"quorumVvecHash\"</span>: <span class=\"cm-string\">\"e0f2853af9fffc937af96264316982728fbbe483a36bff161c606f764ad9d8b9\"</span>,\n      <span class=\"cm-property\">\"quorumSig\"</span>: <span class=\"cm-string\">\"16898292e519f01681c1a57606c54b7366275fa01a4912f8623eae73517ae1d3fd1607b7e8edcee43ce23141deba29fb00398d60f319adca9d460b972653715a4c5025a92141f065d92a0494cf211aa7485d6e4819514012efb107e8e2b9ba2e\"</span>,\n      <span class=\"cm-property\">\"membersSig\"</span>: <span class=\"cm-string\">\"884a01e0ed65b745076198183883535d7bf636c7ebf9e13deb662ec4f4b202041fa826c978c9973380d614d11fd4071e0cf97abb3a7dd3a24f2eda0d8d7b179ab1a5837a78c53673567565aa3aaa72122d0e0bb8b6f2df092ca3da626c2b2800\"</span>\n    },\n    {\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"0000000006097e9d08a4ca9bedbe4a97bb9bf3fe8d09372d18d2398f185cff5d\"</span>,\n      <span class=\"cm-property\">\"signersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"signers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"validMembersCount\"</span>: <span class=\"cm-number\">50</span>,\n      <span class=\"cm-property\">\"validMembers\"</span>: <span class=\"cm-string\">\"ffffffffffff03\"</span>,\n      <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"10d0488558afd929508cd2d11bda7564333a904aa23c8b4a1ed57d86b217e3181497469e7220e9421e14f645a00940fc\"</span>,\n      <span class=\"cm-property\">\"quorumVvecHash\"</span>: <span class=\"cm-string\">\"fbe6b3ae8d002bd648788b3173753c9cec3d4634b7df55f19b34d632b438aa70\"</span>,\n      <span class=\"cm-property\">\"quorumSig\"</span>: <span class=\"cm-string\">\"17d3c06ae24312c9cda1b0f5db10b16e1d1a356f6bb050827d066c5026ecd3cd26fbd2479d781c88a2755aa78f9e16a50882bf18c75e1ab96ff1514b1f283d4fb3b10b4dcd13f8f267ec449250e7d195bc27351a74c8c456a6fcf7d847535f05\"</span>,\n      <span class=\"cm-property\">\"membersSig\"</span>: <span class=\"cm-string\">\"0afd25e67d72d59c2dfbc671ae4e8163bfa2e75cda50b0c86800be5e1dd393abf8a717b147392688855f505d237154f8195b2bb30605d0ca18407e4552b7573cb08a6cb53eaf2a71894fb937af1f7783dbf5e6cb80b0cb903ea4f76266c039e7\"</span>\n    }\n  ],\n  <span class=\"cm-property\">\"merkleRootMNList\"</span>: <span class=\"cm-string\">\"47228e73ce927c2ff0cd26fe8e410995c5829c1971ab98f0c86527ba27f16dd2\"</span>\n}</span>\n</code></pre>\n<p><em>See also: none</em></p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum\"></div>Quorum<a class=\"fa fa-anchor\" href=\"#section-quorum\"></a></h1>\n<p><em>Added in Dash Core 0.14.0</em></p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-evo#section-quorum\"><code>quorum</code> RPC</a> provides a set of commands for quorums (LLMQs).</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-list\"></div>Quorum List<a class=\"fa fa-anchor\" href=\"#section-quorum-list\"></a></h2>\n<p>The <code>quorum list</code> RPC displays a list of on-chain quorums.</p>\n<p><em>Parameter #1---quorum count</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>count</code></td>\n<td>number</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Number of quorums to list. Will list active quorums if <code>count</code> is not specified.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---a list of quorums</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>Quorum list</td>\n</tr>\n<tr>\n<td>\u2192<br>Quorum</td>\n<td>array</td>\n<td>Required<br>(1 or more)</td>\n<td>Array of quorum details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br>Quorum Hash</td>\n<td>string (hex)</td>\n<td>Optional<br>(0 or more)</td>\n<td>A quorum hash</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.14.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum list</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"llmq_50_60\"</span>: [\n    <span class=\"cm-string\">\"00000000023cc6dde69bed898c83fe2328ef38b1ea9da14a599efa14caef0b7d\"</span>,\n    <span class=\"cm-string\">\"000000002b968fb3b2fc2ff18d6e89611e366b4d38a6d0437e99bd7c37f2fd83\"</span>,\n    <span class=\"cm-string\">\"000000000301054c038b07b5b51493d5efc3f078e3aede6eb603c47943d1cc78\"</span>,\n    <span class=\"cm-string\">\"000000000e901278c00c896754a06f8d45d0268c6aff6e72ffb3007d07c10e73\"</span>,\n    <span class=\"cm-string\">\"000000001bc592f2a8676203835bc6ad442abeadb9c22b8d6a2999db07354b01\"</span>,\n    <span class=\"cm-string\">\"000000000896c37ef8a32318ee871589394f1578473b8825275b610690e47db0\"</span>,\n    <span class=\"cm-string\">\"00000000133b192b2319a0716ad18e5788981fff51856f61205af5d6a634ba41\"</span>,\n    <span class=\"cm-string\">\"0000000004946f3f9f82a298985f73080d62627d51f6f4ba77f3cd8c6788b3d0\"</span>,\n    <span class=\"cm-string\">\"0000000005cb014d3df9bac0ba379f1d5b8b75f0e6d7c408d43ac1db330ec641\"</span>,\n    <span class=\"cm-string\">\"0000000006c1653c7ee747f140dd7daa1da23a541e67a0fc0dc88db3482ec4d5\"</span>\n  ],\n  <span class=\"cm-property\">\"llmq_400_60\"</span>: [\n    <span class=\"cm-string\">\"0000000007697fd69a799bfa26576a177e817bc0e45b9fcfbf48b362b05aeff2\"</span>\n  ],\n  <span class=\"cm-property\">\"llmq_400_85\"</span>: [\n  ]\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-info\"></div>Quorum Info<a class=\"fa fa-anchor\" href=\"#section-quorum-info\"></a></h2>\n<p>The <code>quorum info</code> RPC returns information about a specific quorum.</p>\n<p><em>Parameter #1---LLMQ Type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorums</a> to list:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---quorum hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The block hash of the quorum</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---secret key share</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>includeSkShare</code></td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Include the secret key share (default: <code>false</code>)</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---information about a quorum</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>Quorum list</td>\n</tr>\n<tr>\n<td>\u2192<br><code>height</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Block height of the quorum</td>\n</tr>\n<tr>\n<td>\u2192<br><code>type</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>Type of LLMQ</td>\n</tr>\n<tr>\n<td>\u2192<br><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum</td>\n</tr>\n<tr>\n<td>\u2192<br><code>minedBlock</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the block that established the quorum</td>\n</tr>\n<tr>\n<td>\u2192<br><code>members</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array containing quorum member details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br>Member</td>\n<td>object</td>\n<td>Required<br>(1 or more)</td>\n<td>An object describing a particular member</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The masternode&#39;s Provider Registration transaction hash</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>pubKeyOperator</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><em>Added in Dash Core 0.15.0</em><br><br>The masternode&#39;s Operator public key</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>valid</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Indicates if the member is valid</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>pubKeyShare</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Member public key share</td>\n</tr>\n<tr>\n<td>\u2192<br><code>quorumPublicKey</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>Quorum public key</td>\n</tr>\n<tr>\n<td>\u2192<br><code>secretKeyShare</code></td>\n<td>string</td>\n<td>Optional<br>(exactly 1)</td>\n<td>Quorum secret key share</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.15.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum info <span class=\"cm-number\">1</span> \\\n  000004bfc56646880bfeb80a0b89ad955e557ead7b0f09bcc61e56c8473eaea9 <span class=\"cm-atom\">true</span></span>\n</code></pre>\n<p>Result (truncated):</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"height\"</span>: <span class=\"cm-number\">264072</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"llmq_50_60\"</span>,\n  <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000004bfc56646880bfeb80a0b89ad955e557ead7b0f09bcc61e56c8473eaea9\"</span>,\n  <span class=\"cm-property\">\"minedBlock\"</span>: <span class=\"cm-string\">\"000006113a77b35a0ed606b08ecb8e37f1ac7e2d773c365bd07064a72ae9a61d\"</span>,\n  <span class=\"cm-property\">\"members\"</span>: [\n    {\n      <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"6c91363d97b286e921afb5cf7672c88a2f1614d36d32058c34bef8b44e026007\"</span>,\n      <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"81749ba8363e5c03e9d6318b0491e38305cf59d9d57cea2295a86ecfa696622571f266c28bacc78666e8b9b0fb2b3121\"</span>,\n      <span class=\"cm-property\">\"valid\"</span>: <span class=\"cm-atom\">true</span>\n    },\n    {\n      <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"274ae6ab38ea0f3b8fe726b3e52d998443ba0d77e85d88c20d179d4fecd0b96e\"</span>,\n      <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"0db6da5d8ee9fb8925f0818df7553062bf35ec9d62114144bc395980c29fcd06b738beca63faf265d7480106fc6cceea\"</span>,\n      <span class=\"cm-property\">\"valid\"</span>: <span class=\"cm-atom\">true</span>\n    },\n    {<span class=\"cm-property\">\"Truncated data\"</span>:<span class=\"cm-string\">\"...\"</span>},\n    {\n      <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"3ecdbedf3d9a13822f437a1f0c5ea44f290ab90f7c3bb42c1b5fd785b5f9596a\"</span>,\n      <span class=\"cm-property\">\"pubKeyOperator\"</span>: <span class=\"cm-string\">\"0634f8b926631cb2b14c81720c6130b3f6f5429da1c9dc9c33918b2474b7ffff239caa9b59c7b1a782565052232d052a\"</span>,\n      <span class=\"cm-property\">\"valid\"</span>: <span class=\"cm-atom\">true</span>\n    }\n  ],\n  <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"0644ff153b9b92c6a59e2adf4ef0b9836f7f6af05fe432ffdcb69bc9e300a2a70af4a8d9fc61323f6b81074d740033d2\"</span>,\n  <span class=\"cm-property\">\"secretKeyShare\"</span>: <span class=\"cm-string\">\"3da0d8f532309660f7f44aa0ed42c1569773b39c70f5771ce5604be77e50759e\"</span>\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-dkg-status\"></div>Quorum DKGStatus<a class=\"fa fa-anchor\" href=\"#section-quorum-dkg-status\"></a></h2>\n<p>The <code>quorum list</code> RPC displays the status of the current DKG process.</p>\n<p><em>Parameter #1---detail level</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>detail_level</code></td>\n<td>number</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Detail level of output (default: 0):<br><code>0</code> - Only show counts (<em>default</em>)<br><code>1</code> - Show member indexes<br><code>2</code> - Show member&#39;s ProTxHashes<br><br><em>Note: Works only when Spork 17 is enabled and only displays details related to the node running the command.</em></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result (if detail level was 0 or omitted)---JSON DKG details</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects each containing a provider transaction, or JSON <code>null</code> if an error occurred</td>\n</tr>\n<tr>\n<td>\u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the initial provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192<br><code>time</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The Unix epoch time</td>\n</tr>\n<tr>\n<td>\u2192<br><code>timeStr</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The UTC time as a string</td>\n</tr>\n<tr>\n<td>\u2192<br><code>session</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>Object containing DKG Session information</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br>LLMQ Type</td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>Object</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorum</a>:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The block hash of the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>quorumHeight</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The block height of the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>phase</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The active DKG phase<br><code>1</code> - Initialized<br><code>2</code> - Contributing<br><code>3</code> - Complaining<br><code>4</code> - Justifying<br><code>5</code> - Committing<br><code>6</code> - Finalizing</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>sentContributions</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True when contributions have been sent</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>sentComplaint</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True when complaints have been sent</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>sentJustification</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True when justifications have been sent</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>sentPrematureCommitment</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True when premature commitments have been sent</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>aborted</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True if the DKG session has been aborted</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>badMembers</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Number of bad members</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>weComplain</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Number of complaints sent</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedContributions</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Number of contributions received</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedComplaints</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Number of complaints received</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedJustifications</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Number of justifications received</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedPrematureCommitments</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Number of premature commitments received</td>\n</tr>\n<tr>\n<td>\u2192<br><code>minableCommitments</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>Object containing minable commitments</td>\n</tr>\n<tr>\n<td>\u2192<br><code>quorumConnections</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Object containing quorum connection information</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br>Connection</td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>An object describing a quorum connection</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>The hash of the quorum member&#39;s provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>connected</code></td>\n<td>boolean</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Whether or not the connection is active</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>address</code></td>\n<td>string</td>\n<td>Optional<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Address</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>outbound</code></td>\n<td>boolean</td>\n<td>Required<br>(exactly 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>Whether or not this is an outbound connection</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result (if detail level was 1)---JSON DKG details including member index</em></p>\n<p>Note: detail level 1 includes all level 0 fields and expands the following fields.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>badMembers</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing the member index for each bad member</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>weComplain</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing the member index for each complaint sent</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedContributions</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing the member index for each contribution received</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedComplaints</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing the member index for each complaint received</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedJustifications</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing the member index for each justification received</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedPrematureCommitments</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing the member index for each commitment received</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result (if detail level was 2)---JSON DKG details including member index and ProTx hash</em></p>\n<p>Note: detail level 2 includes all level 0 fields, adds the <code>allMembers</code> field, and expands several fields.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>badMembers</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects with each object containing the member index and ProTx hash for a bad member</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br>Member</td>\n<td>object</td>\n<td>Required<br>(0 or more)</td>\n<td>An object describing quorum member details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>memberIndex</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum member&#39;s index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum member&#39;s provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>weComplain</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects with each object containing the member index and ProTx hash for a member being complained about</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br>Member</td>\n<td>object</td>\n<td>Required<br>(0 or more)</td>\n<td>An object describing quorum member details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>memberIndex</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum member&#39;s index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum member&#39;s provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedContributions</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects with each object containing the member index and ProTx hash for a member a contribution was received from</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br>Member</td>\n<td>object</td>\n<td>Required<br>(0 or more)</td>\n<td>An object describing quorum member details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>memberIndex</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum member&#39;s index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum member&#39;s provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedComplaints</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects with each object containing the member index and ProTx hash for a member a complaint was received from</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br>Member</td>\n<td>object</td>\n<td>Required<br>(0 or more)</td>\n<td>An object describing quorum member details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>memberIndex</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum member&#39;s index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum member&#39;s provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedJustifications</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects with each object containing the member index and ProTx hash for a member a justification was received from</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br>Member</td>\n<td>object</td>\n<td>Required<br>(0 or more)</td>\n<td>An object describing quorum member details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>memberIndex</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum member&#39;s index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum member&#39;s provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>receivedPrematureCommitments</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array of objects with each object containing the member index and ProTx hash for a member a premature commitment was received from</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192<br>Member</td>\n<td>object</td>\n<td>Required<br>(0 or more)</td>\n<td>An object describing quorum member details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>memberIndex</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>The quorum member&#39;s index</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192 \u2192 \u2192<br><code>proTxHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum member&#39;s provider registration transaction as hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192 \u2192<br><code>allMembers</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing the provider registration transaction hash for all quorum members</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.14.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum dkgstatus</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"</span>,\n  <span class=\"cm-property\">\"time\"</span>: <span class=\"cm-number\">1555172494</span>,\n  <span class=\"cm-property\">\"timeStr\"</span>: <span class=\"cm-string\">\"2019-04-13 16:21:34\"</span>,\n  <span class=\"cm-property\">\"session\"</span>: {\n    <span class=\"cm-property\">\"llmq_50_60\"</span>: {\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\"</span>,\n      <span class=\"cm-property\">\"quorumHeight\"</span>: <span class=\"cm-number\">79368</span>,\n      <span class=\"cm-property\">\"phase\"</span>: <span class=\"cm-number\">6</span>,\n      <span class=\"cm-property\">\"sentContributions\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"sentComplaint\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"sentJustification\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"sentPrematureCommitment\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"aborted\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"badMembers\"</span>: <span class=\"cm-number\">2</span>,\n      <span class=\"cm-property\">\"weComplain\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"receivedContributions\"</span>: <span class=\"cm-number\">48</span>,\n      <span class=\"cm-property\">\"receivedComplaints\"</span>: <span class=\"cm-number\">44</span>,\n      <span class=\"cm-property\">\"receivedJustifications\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"receivedPrematureCommitments\"</span>: <span class=\"cm-number\">44</span>\n    }\n  },\n  <span class=\"cm-property\">\"minableCommitments\"</span>: {\n    <span class=\"cm-property\">\"llmq_50_60\"</span>: {\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\"</span>,\n      <span class=\"cm-property\">\"signersCount\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"validMembersCount\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"</span>\n    }\n  }\n}</span>\n</code></pre>\n<p><em>Example from Dash Core 0.14.0 (detail_level: 1)</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum dkgstatus <span class=\"cm-number\">1</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"</span>,\n  <span class=\"cm-property\">\"time\"</span>: <span class=\"cm-number\">1555172494</span>,\n  <span class=\"cm-property\">\"timeStr\"</span>: <span class=\"cm-string\">\"2019-04-13 16:21:34\"</span>,\n  <span class=\"cm-property\">\"session\"</span>: {\n    <span class=\"cm-property\">\"llmq_50_60\"</span>: {\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\"</span>,\n      <span class=\"cm-property\">\"quorumHeight\"</span>: <span class=\"cm-number\">79368</span>,\n      <span class=\"cm-property\">\"phase\"</span>: <span class=\"cm-number\">6</span>,\n      <span class=\"cm-property\">\"sentContributions\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"sentComplaint\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"sentJustification\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"sentPrematureCommitment\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"aborted\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"badMembers\"</span>: [\n        <span class=\"cm-number\">35</span>,\n        <span class=\"cm-number\">42</span>\n      ],\n      <span class=\"cm-property\">\"weComplain\"</span>: [\n      ],\n      <span class=\"cm-property\">\"receivedContributions\"</span>: [\n        <span class=\"cm-number\">0</span>,\n        <span class=\"cm-number\">1</span>,\n        <span class=\"cm-number\">2</span>,\n        <span class=\"cm-number\">3</span>,\n        <span class=\"cm-number\">4</span>,\n        <span class=\"cm-number\">5</span>,\n        <span class=\"cm-number\">6</span>,\n        <span class=\"cm-number\">7</span>,\n        <span class=\"cm-number\">8</span>,\n        <span class=\"cm-number\">9</span>,\n        <span class=\"cm-number\">10</span>,\n        <span class=\"cm-number\">11</span>,\n        <span class=\"cm-number\">12</span>,\n        <span class=\"cm-number\">13</span>,\n        <span class=\"cm-number\">14</span>,\n        <span class=\"cm-number\">15</span>,\n        <span class=\"cm-number\">16</span>,\n        <span class=\"cm-number\">17</span>,\n        <span class=\"cm-number\">18</span>,\n        <span class=\"cm-number\">19</span>,\n        <span class=\"cm-number\">20</span>,\n        <span class=\"cm-number\">21</span>,\n        <span class=\"cm-number\">22</span>,\n        <span class=\"cm-number\">23</span>,\n        <span class=\"cm-number\">24</span>,\n        <span class=\"cm-number\">25</span>,\n        <span class=\"cm-number\">26</span>,\n        <span class=\"cm-number\">27</span>,\n        <span class=\"cm-number\">28</span>,\n        <span class=\"cm-number\">29</span>,\n        <span class=\"cm-number\">30</span>,\n        <span class=\"cm-number\">31</span>,\n        <span class=\"cm-number\">32</span>,\n        <span class=\"cm-number\">33</span>,\n        <span class=\"cm-number\">34</span>,\n        <span class=\"cm-number\">36</span>,\n        <span class=\"cm-number\">37</span>,\n        <span class=\"cm-number\">38</span>,\n        <span class=\"cm-number\">39</span>,\n        <span class=\"cm-number\">40</span>,\n        <span class=\"cm-number\">41</span>,\n        <span class=\"cm-number\">43</span>,\n        <span class=\"cm-number\">44</span>,\n        <span class=\"cm-number\">45</span>,\n        <span class=\"cm-number\">46</span>,\n        <span class=\"cm-number\">47</span>,\n        <span class=\"cm-number\">48</span>,\n        <span class=\"cm-number\">49</span>\n      ],\n      <span class=\"cm-property\">\"receivedComplaints\"</span>: [\n        <span class=\"cm-number\">0</span>,\n        <span class=\"cm-number\">1</span>,\n        <span class=\"cm-number\">2</span>,\n        <span class=\"cm-number\">3</span>,\n        <span class=\"cm-number\">4</span>,\n        <span class=\"cm-number\">5</span>,\n        <span class=\"cm-number\">6</span>,\n        <span class=\"cm-number\">7</span>,\n        <span class=\"cm-number\">8</span>,\n        <span class=\"cm-number\">9</span>,\n        <span class=\"cm-number\">10</span>,\n        <span class=\"cm-number\">11</span>,\n        <span class=\"cm-number\">12</span>,\n        <span class=\"cm-number\">14</span>,\n        <span class=\"cm-number\">15</span>,\n        <span class=\"cm-number\">16</span>,\n        <span class=\"cm-number\">17</span>,\n        <span class=\"cm-number\">18</span>,\n        <span class=\"cm-number\">19</span>,\n        <span class=\"cm-number\">20</span>,\n        <span class=\"cm-number\">21</span>,\n        <span class=\"cm-number\">24</span>,\n        <span class=\"cm-number\">25</span>,\n        <span class=\"cm-number\">26</span>,\n        <span class=\"cm-number\">27</span>,\n        <span class=\"cm-number\">28</span>,\n        <span class=\"cm-number\">29</span>,\n        <span class=\"cm-number\">30</span>,\n        <span class=\"cm-number\">31</span>,\n        <span class=\"cm-number\">33</span>,\n        <span class=\"cm-number\">34</span>,\n        <span class=\"cm-number\">36</span>,\n        <span class=\"cm-number\">37</span>,\n        <span class=\"cm-number\">38</span>,\n        <span class=\"cm-number\">39</span>,\n        <span class=\"cm-number\">40</span>,\n        <span class=\"cm-number\">41</span>,\n        <span class=\"cm-number\">43</span>,\n        <span class=\"cm-number\">44</span>,\n        <span class=\"cm-number\">45</span>,\n        <span class=\"cm-number\">46</span>,\n        <span class=\"cm-number\">47</span>,\n        <span class=\"cm-number\">48</span>,\n        <span class=\"cm-number\">49</span>\n      ],\n      <span class=\"cm-property\">\"receivedJustifications\"</span>: [\n      ],\n      <span class=\"cm-property\">\"receivedPrematureCommitments\"</span>: [\n        <span class=\"cm-number\">0</span>,\n        <span class=\"cm-number\">1</span>,\n        <span class=\"cm-number\">2</span>,\n        <span class=\"cm-number\">3</span>,\n        <span class=\"cm-number\">4</span>,\n        <span class=\"cm-number\">5</span>,\n        <span class=\"cm-number\">6</span>,\n        <span class=\"cm-number\">7</span>,\n        <span class=\"cm-number\">8</span>,\n        <span class=\"cm-number\">9</span>,\n        <span class=\"cm-number\">10</span>,\n        <span class=\"cm-number\">11</span>,\n        <span class=\"cm-number\">12</span>,\n        <span class=\"cm-number\">14</span>,\n        <span class=\"cm-number\">15</span>,\n        <span class=\"cm-number\">16</span>,\n        <span class=\"cm-number\">17</span>,\n        <span class=\"cm-number\">18</span>,\n        <span class=\"cm-number\">19</span>,\n        <span class=\"cm-number\">20</span>,\n        <span class=\"cm-number\">21</span>,\n        <span class=\"cm-number\">24</span>,\n        <span class=\"cm-number\">25</span>,\n        <span class=\"cm-number\">26</span>,\n        <span class=\"cm-number\">27</span>,\n        <span class=\"cm-number\">28</span>,\n        <span class=\"cm-number\">29</span>,\n        <span class=\"cm-number\">30</span>,\n        <span class=\"cm-number\">31</span>,\n        <span class=\"cm-number\">33</span>,\n        <span class=\"cm-number\">34</span>,\n        <span class=\"cm-number\">36</span>,\n        <span class=\"cm-number\">37</span>,\n        <span class=\"cm-number\">38</span>,\n        <span class=\"cm-number\">39</span>,\n        <span class=\"cm-number\">40</span>,\n        <span class=\"cm-number\">41</span>,\n        <span class=\"cm-number\">43</span>,\n        <span class=\"cm-number\">44</span>,\n        <span class=\"cm-number\">45</span>,\n        <span class=\"cm-number\">46</span>,\n        <span class=\"cm-number\">47</span>,\n        <span class=\"cm-number\">48</span>,\n        <span class=\"cm-number\">49</span>\n      ]\n    }\n  },\n  <span class=\"cm-property\">\"minableCommitments\"</span>: {\n    <span class=\"cm-property\">\"llmq_50_60\"</span>: {\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\"</span>,\n      <span class=\"cm-property\">\"signersCount\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"validMembersCount\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"</span>\n    }\n  }\n}</span>\n</code></pre>\n<p><em>Example from Dash Core 0.14.0 (detail_level: 2)</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum dkgstatus <span class=\"cm-number\">2</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"</span>,\n  <span class=\"cm-property\">\"time\"</span>: <span class=\"cm-number\">1555172494</span>,\n  <span class=\"cm-property\">\"timeStr\"</span>: <span class=\"cm-string\">\"2019-04-13 16:21:34\"</span>,\n  <span class=\"cm-property\">\"session\"</span>: {\n    <span class=\"cm-property\">\"llmq_50_60\"</span>: {\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\"</span>,\n      <span class=\"cm-property\">\"quorumHeight\"</span>: <span class=\"cm-number\">79368</span>,\n      <span class=\"cm-property\">\"phase\"</span>: <span class=\"cm-number\">6</span>,\n      <span class=\"cm-property\">\"sentContributions\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"sentComplaint\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"sentJustification\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"sentPrematureCommitment\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"aborted\"</span>: <span class=\"cm-atom\">false</span>,\n      <span class=\"cm-property\">\"badMembers\"</span>: [\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">35</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"c24aea30305d539887223fd923df775644b1d86db0aac8c654026e823b549cd7\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">42</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f0567069d4f2a2e536e46173a097b318daf03edef989f6875ca06f5c4d49abc9\"</span>\n        }\n      ],\n      <span class=\"cm-property\">\"weComplain\"</span>: [\n      ],\n      <span class=\"cm-property\">\"receivedContributions\"</span>: [\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">0</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">1</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">2</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">3</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">4</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">5</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">6</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">7</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">8</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">9</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">10</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">11</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">12</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">13</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f443dd87ec7981e8630ae957f295d9d226d4bd3895f59dbd80b30137a92b3735\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">14</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">15</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">16</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">17</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">18</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">19</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">20</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">21</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">22</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"11eabc1e72394af02bbe86815975d054816fe69006fdc64c6d7a06b585e5c311\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">23</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"71cf5017c4c5f69db5c17a8cfb4c28ffc14ad1715dba2a83f0c30e534291f828\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">24</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">25</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">26</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">27</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">28</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">29</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">30</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">31</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">32</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"c98c6303af03f7f3b2673ceece962134088e5dcc3c69a0977069c6201b26dc9b\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">33</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">34</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">36</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">37</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">38</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">39</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">40</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">41</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">43</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">44</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">45</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">46</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">47</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">48</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">49</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"</span>\n        }\n      ],\n      <span class=\"cm-property\">\"receivedComplaints\"</span>: [\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">0</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">1</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">2</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">3</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">4</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">5</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">6</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">7</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">8</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">9</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">10</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">11</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">12</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">14</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">15</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">16</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">17</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">18</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">19</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">20</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">21</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">24</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">25</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">26</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">27</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">28</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">29</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">30</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">31</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">33</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">34</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">36</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">37</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">38</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">39</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">40</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">41</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">43</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">44</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">45</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">46</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">47</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">48</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">49</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"</span>\n        }\n      ],\n      <span class=\"cm-property\">\"receivedJustifications\"</span>: [\n      ],\n      <span class=\"cm-property\">\"receivedPrematureCommitments\"</span>: [\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">0</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">1</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">2</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">3</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">4</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">5</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">6</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">7</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">8</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">9</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">10</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">11</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">12</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">14</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">15</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">16</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">17</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">18</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">19</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">20</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">21</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">24</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">25</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">26</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">27</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">28</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">29</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">30</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">31</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">33</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">34</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">36</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">37</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">38</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">39</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">40</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">41</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">43</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">44</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">45</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">46</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">47</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">48</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\"</span>\n        },\n        {\n          <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">49</span>,\n          <span class=\"cm-property\">\"proTxHash\"</span>: <span class=\"cm-string\">\"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"</span>\n        }\n      ],\n      <span class=\"cm-property\">\"allMembers\"</span>: [\n        <span class=\"cm-string\">\"a6670caf2842a4ae5cb4bb78b3c10343456922b500693f6da043af541d58d9cb\"</span>,\n        <span class=\"cm-string\">\"77c0615fb5eb946f7f731a44eb36dc37ee77bf959e7205937d88186cacfbdc7e\"</span>,\n        <span class=\"cm-string\">\"8070c631ce9ac8850d2e95d4ed7be70171ead22ccd7f4bc9c3aee0a227f323c9\"</span>,\n        <span class=\"cm-string\">\"596be0851532a66037744afa694e4de6485f326f4638e704db93cc726866cda3\"</span>,\n        <span class=\"cm-string\">\"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"</span>,\n        <span class=\"cm-string\">\"9f4f9f83ecbcd5739d7f1479ee14b508f2414d044a717acba0960566c4e6091d\"</span>,\n        <span class=\"cm-string\">\"21c0923badd20f953360c586edfcbb1a830be83206e30b3f65765f7794f2a640\"</span>,\n        <span class=\"cm-string\">\"cc36055f36345b85a2b8176e79feff0ff822c490691c7f8e8d3348b4b1a1d8ac\"</span>,\n        <span class=\"cm-string\">\"4636ed7acbacbc76aba60aa7a1011688fe9ad5fd701d0bf8fc42a502ea3e6543\"</span>,\n        <span class=\"cm-string\">\"32e5ad5cf9a06eb13e0f65cb7ecde1a93ef24995d07355fac2ff05ebd5b9ddbf\"</span>,\n        <span class=\"cm-string\">\"0022afbe93054ca11ce9b67892661af4558597bacff0ab82bff05a2b4a89ca2d\"</span>,\n        <span class=\"cm-string\">\"2523dc6e034911b9004862e87b4d23a32ed6198aec177915df7893f51cd645bd\"</span>,\n        <span class=\"cm-string\">\"abe5d16432915b201cf6f11299a1abd62e5f69a2c4e8717694d1e42d96dbd580\"</span>,\n        <span class=\"cm-string\">\"f443dd87ec7981e8630ae957f295d9d226d4bd3895f59dbd80b30137a92b3735\"</span>,\n        <span class=\"cm-string\">\"6a5be5c068a0be432b7db0772b25094a59ce1f433dd2df0d410511ac641c3768\"</span>,\n        <span class=\"cm-string\">\"84435c41688c8021a25a644e6b94c9f5159aff5658ee2e12f5cea5c714c21aa3\"</span>,\n        <span class=\"cm-string\">\"2db238aa40837319ca13e27aae4333d1248475546be6cfad985a3785c0ac9bd6\"</span>,\n        <span class=\"cm-string\">\"cefb7c69f75d9fbba21f648c6205bebf9b16325956404c70af03144c1135c7d7\"</span>,\n        <span class=\"cm-string\">\"cc7041c869c7c1c0bae7c137f0cda708ad492bc89c4b8f7a40a353d90335febf\"</span>,\n        <span class=\"cm-string\">\"24e642275f5d5f17f67db502d905153cfd83ffbd3d49c90196ec01200917fb31\"</span>,\n        <span class=\"cm-string\">\"bc5c77926b0ccfcb742123a1edf2c27147888f694701df399982a862309921c8\"</span>,\n        <span class=\"cm-string\">\"04d06d16b3eca2f104ef9749d0c1c17d183eb1b4fe3a16808fd70464f03bcd63\"</span>,\n        <span class=\"cm-string\">\"11eabc1e72394af02bbe86815975d054816fe69006fdc64c6d7a06b585e5c311\"</span>,\n        <span class=\"cm-string\">\"71cf5017c4c5f69db5c17a8cfb4c28ffc14ad1715dba2a83f0c30e534291f828\"</span>,\n        <span class=\"cm-string\">\"d567ac9cc7437848210365a0225271ec26a6a6c7d852544a6e9cbd40756075b3\"</span>,\n        <span class=\"cm-string\">\"16ef804605595f67a0e078f7ffbdd93ac55bcd22d9094cb8b61ef527c48f4c44\"</span>,\n        <span class=\"cm-string\">\"f51b426420ac4c518ad07c2bb03e434389337b4e2977d39233114d5e8ef21f69\"</span>,\n        <span class=\"cm-string\">\"2460848868c210d23c68460050f83f47a7ad00db2c47ad6f223a9b1eb04c8d54\"</span>,\n        <span class=\"cm-string\">\"49d94e4c584929320cfe159faf4f6e398f1b2d1fdaa413c01345ce23870d2ca9\"</span>,\n        <span class=\"cm-string\">\"e8b039ce3f1016b7caf781d1b0efbc11191860ec3b131fc49591402a260ba638\"</span>,\n        <span class=\"cm-string\">\"5ab82a5348b5d4c126b0c172665d364352be37c96ce442e710d4a844a6f80bf9\"</span>,\n        <span class=\"cm-string\">\"05b83104eea971582c803ded305109ecb734b582da93b8e301c6f00d6be6c496\"</span>,\n        <span class=\"cm-string\">\"c98c6303af03f7f3b2673ceece962134088e5dcc3c69a0977069c6201b26dc9b\"</span>,\n        <span class=\"cm-string\">\"f933d592d677f3409274646ddea2ffaaca77dfd4ceab7c54037a04e05fc7ee8b\"</span>,\n        <span class=\"cm-string\">\"5d40e68f65e7263d91e114b644ff7f8c9c376db63550d5ef9bc4228870c4f053\"</span>,\n        <span class=\"cm-string\">\"c24aea30305d539887223fd923df775644b1d86db0aac8c654026e823b549cd7\"</span>,\n        <span class=\"cm-string\">\"a36edfac56f7f1b0f58aa793115fbd53d792315857033fb32a862507a3f060ff\"</span>,\n        <span class=\"cm-string\">\"c9d43a69bd9effdaed579edc901c5d848711481047c9cc76bad8232d8f329dcd\"</span>,\n        <span class=\"cm-string\">\"d82152084615c73d79f3eb8b0ec6a61e6d0f94c4cdcf26f773f0e42b72176f6f\"</span>,\n        <span class=\"cm-string\">\"869f7f2054a6ed4241967afb74c3b1a07701d2772b368eb0bbfd2e3365adf6f3\"</span>,\n        <span class=\"cm-string\">\"5f1a70a350d21f673d93fae45a50c0362947366e46c96bade51b7933f0cada3e\"</span>,\n        <span class=\"cm-string\">\"024608d03beb6a6065f14a29a837c68ae449ac1e17056819366ca0b72b6dd81f\"</span>,\n        <span class=\"cm-string\">\"f0567069d4f2a2e536e46173a097b318daf03edef989f6875ca06f5c4d49abc9\"</span>,\n        <span class=\"cm-string\">\"254bcd3b28d696ce9d468cd521e6be3f7eb01da32d8bf9fdf34868baaf09d9e7\"</span>,\n        <span class=\"cm-string\">\"0ae626ed4ee06c1f042b2eaa9669302a2e60a0df8137843b39de53f2c3e265aa\"</span>,\n        <span class=\"cm-string\">\"cfa6f7b58c78f827c15e8f1b6a5a2a3a92140101719006d8226a363e2c0c8e5c\"</span>,\n        <span class=\"cm-string\">\"03811a53a20289799f56227f576915492d2cede48522cd1b3f67c6c89cdacf83\"</span>,\n        <span class=\"cm-string\">\"f989866b2fadb674a1ca63746ff8bb97232d6843c95f9e805b8bc2a5ae8e768d\"</span>,\n        <span class=\"cm-string\">\"9de76b8291d00026ab0af86306023c7b90f8e9229dc04916fe1335bf5e11f15d\"</span>,\n        <span class=\"cm-string\">\"e441bbb2f056d471ae9fad83b4dd0fa691a0574eb4a373a0e59d6108614ee07e\"</span>\n      ]\n    }\n  },\n  <span class=\"cm-property\">\"minableCommitments\"</span>: {\n    <span class=\"cm-property\">\"llmq_50_60\"</span>: {\n      <span class=\"cm-property\">\"version\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"000000000122768294b19a5f6750094f6e9caa135c0826372d0538d4ceb910bc\"</span>,\n      <span class=\"cm-property\">\"signersCount\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"validMembersCount\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"</span>\n    }\n  }\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-sign\"></div>Quorum Sign<a class=\"fa fa-anchor\" href=\"#section-quorum-sign\"></a></h2>\n<p>The <code>quorum sign</code> RPC requests threshold-signing for a message.</p>\n\n</div>\n<div class=\"magic-block-callout type-warning \">\n\t<h3><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i>Regtest Network Only\n\t</h3>\n\t<div class=\"callout-body\"><p>Note: Used for RegTest testing only.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><em>Parameter #1---LLMQ Type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorum</a>:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---id</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Signing request ID</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---message hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>msgHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Hash of the message to be signed</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---quorum hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Optional<br>(0 or 1)</td>\n<td><strong>Added in Dash Core 0.16.0</strong><br><br>The quorum identifier. Used by <a href=\"https://dashplatform.readme.io/docs/introduction-what-is-dash-platform\">Dash Platform</a> to direct layer 2 signing requests to a specific quorum.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---status</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>result</td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True or false depending on success</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.14.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum sign <span class=\"cm-number\">1</span> \\\n  <span class=\"cm-string\">\"abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234\"</span> \\\n  <span class=\"cm-string\">\"51c11d287dfa85aef3eebb5420834c8e443e01d15c0b0a8e397d67e2e51aa239\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-atom\">false</span></span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-get-rec-sig\"></div>Quorum GetRecSig<a class=\"fa fa-anchor\" href=\"#section-quorum-get-rec-sig\"></a></h2>\n<p>The <code>quorum getrecsig</code> RPC gets the recovered signature for a previous threshold-signing message request.</p>\n<p><em>Parameter #1---LLMQ Type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorum</a>:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---id</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Signing request ID</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---message hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>msgHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Hash of the message to be signed</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---recovered signature</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>result</td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Recovered signature details</td>\n</tr>\n<tr>\n<td>\u2192<br><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorum</a>:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n<tr>\n<td>\u2192<br><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The block hash of the quorum  </td>\n</tr>\n<tr>\n<td>\u2192<br><code>id</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The signing session ID</td>\n</tr>\n<tr>\n<td>\u2192<br><code>msgHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The message hash</td>\n</tr>\n<tr>\n<td>\u2192<br><code>sig</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The recovered signature</td>\n</tr>\n<tr>\n<td>\u2192<br><code>hash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the recovered signature</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.14.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum getrecsig <span class=\"cm-number\">1</span> \\\n  <span class=\"cm-string\">\"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\"</span> \\\n  <span class=\"cm-string\">\"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"llmqType\"</span>: <span class=\"cm-number\">1</span>,\n  <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"00000000008344da08e4d262773ea545472fbf625f78b3ebfe5fc067c33b1d22\"</span>,\n  <span class=\"cm-property\">\"id\"</span>: <span class=\"cm-string\">\"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\"</span>,\n  <span class=\"cm-property\">\"msgHash\"</span>: <span class=\"cm-string\">\"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\"</span>,\n  <span class=\"cm-property\">\"sig\"</span>: <span class=\"cm-string\">\"1365171c408d686af2ca8f5fae91cdf9cf0b5eec60b0b161b9288a1c68e2cd68f225495a787415c924c5953a6282d131178aa6baf4c2673d19549fc627740cf71d295f8a38b9970525a7f248d54a548e16da285b5c1f3ec0740ad40edbcc8615\"</span>,\n  <span class=\"cm-property\">\"hash\"</span>: <span class=\"cm-string\">\"d9b7f7904746fbb3eeaeec36fadc79b351f6a854cd22ee9e607592aee972fcb2\"</span>\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-has-rec-sig\"></div>Quorum HasRecSig<a class=\"fa fa-anchor\" href=\"#section-quorum-has-rec-sig\"></a></h2>\n<p>The <code>quorum hasrecsig</code> RPC checks for a recovered signature for a previous threshold-signing message request.</p>\n\n</div>\n<div class=\"magic-block-callout type-warning \">\n\t<h3><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i>Regtest Network Only\n\t</h3>\n\t<div class=\"callout-body\"><p>Note: Used for RegTest testing only.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><em>Parameter #1---LLMQ Type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorum</a>:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---id</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Signing request ID</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---message hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>msgHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Hash of the message to be signed</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---status</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>result</td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True or false depending on success</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.14.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum hasrecsig <span class=\"cm-number\">1</span> \\\n  <span class=\"cm-string\">\"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\"</span> \\\n  <span class=\"cm-string\">\"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-atom\">true</span></span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-is-conflicting\"></div>Quorum IsConflicting<a class=\"fa fa-anchor\" href=\"#section-quorum-is-conflicting\"></a></h2>\n<p>The <code>quorum isconflicting</code> RPC checks if there is a conflict for a threshold-signing message request.</p>\n\n</div>\n<div class=\"magic-block-callout type-warning \">\n\t<h3><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i>Regtest Network Only\n\t</h3>\n\t<div class=\"callout-body\"><p>Note: Used for RegTest testing only.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><em>Parameter #1---LLMQ Type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorum</a>:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---id</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Signing request ID</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---message hash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>msgHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Hash of the message to be signed</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---status</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>result</td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>True or false depending on success</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.14.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum isconflicting <span class=\"cm-number\">1</span> \\\n  <span class=\"cm-string\">\"e980ebf295b42f24b03321ffb255818753b2b211e8c46b61c0b6fde91242d12f\"</span> \\\n  <span class=\"cm-string\">\"907087d4720850e639b7b5cc41d7a6d020e5a50debb3bc3974f0cb3d7d378ea4\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-atom\">false</span></span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-member-of\"></div>Quorum MemberOf<a class=\"fa fa-anchor\" href=\"#section-quorum-member-of\"></a></h2>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-evo#section-quorum\"><code>quorum</code> RPC</a> checks which quorums the given masternode is a member of.</p>\n<p><em>Parameter #1---proTxHash</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>proTxHash</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>ProTxHash of the masternode.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---scanQuorumsCount</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>scanQuorumsCount</td>\n<td>number</td>\n<td>Optional</td>\n<td>Number of quorums to scan for. If not specified, the active quorum count for each specific quorum type is used.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---list of quorums the masternode is a member of</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>Array of objects</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing info for quorum&#39;s the masternode belongs to</td>\n</tr>\n<tr>\n<td>\u2192<br>Quorum</td>\n<td>object</td>\n<td>Required<br>(0 or more)</td>\n<td>An object describing quorum details</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>height</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Block height of the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>type</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorum</a></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>minedBlock</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the block that established the quorum</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>quorumPublicKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Quorum public key</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>isValidMember</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Indicates if the member is valid</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>memberIndex</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td>Index of the member within the quorum</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.15.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum memberof <span class=\"cm-number\">1</span> \\\n  39c07d2c9c6d0ead56f52726b63c15e295cb5c3ecf7fe1fefcfb23b2e3cfed1f <span class=\"cm-number\">1</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n  {\n    <span class=\"cm-property\">\"height\"</span>: <span class=\"cm-number\">72000</span>,\n    <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"llmq_400_60\"</span>,\n    <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"0000000007697fd69a799bfa26576a177e817bc0e45b9fcfbf48b362b05aeff2\"</span>,\n    <span class=\"cm-property\">\"minedBlock\"</span>: <span class=\"cm-string\">\"00000000014d910dca80944b52aa3f522d5604254043b8354d641912aace4343\"</span>,\n    <span class=\"cm-property\">\"quorumPublicKey\"</span>: <span class=\"cm-string\">\"03a3fbbe99d80a9be8fc59fd4fe43dfbeba9119b688e97493664716cdf15ae47fad70fea7cb93f20fba10d689f9e3c02\"</span>,\n    <span class=\"cm-property\">\"isValidMember\"</span>: <span class=\"cm-atom\">true</span>,\n    <span class=\"cm-property\">\"memberIndex\"</span>: <span class=\"cm-number\">80</span>\n  }\n]</span>\n</code></pre>\n<p><em>See also: none</em></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-quorum-select-quorum\"></div>Quorum SelectQuorum<a class=\"fa fa-anchor\" href=\"#section-quorum-select-quorum\"></a></h2>\n<p>The <code>quorum selectquorum</code> RPC returns information about the quorum that would/should sign a request.</p>\n<p><em>Parameter #1---LLMQ Type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>llmqType</code></td>\n<td>number</td>\n<td>Required<br>(exactly 1)</td>\n<td><a href=\"https://github.com/dashpay/dips/blob/master/dip-0006.md#current-llmq-types\">Type of quorums</a> to list:<br><code>1</code> - LLMQ_50_60<br><code>2</code> - LLMQ_400_60<br><code>3</code> - LLMQ_400_85</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---request id</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The request ID</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---quorum hash and list of quorum members</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>Array of objects</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing info for quorum&#39;s the masternode belongs to</td>\n</tr>\n<tr>\n<td>\u2192<br><code>quorumHash</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the quorum</td>\n</tr>\n<tr>\n<td>\u2192\u2192<br><code>recoveryMembers</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>Array containing ProRegTx hashes</td>\n</tr>\n<tr>\n<td>\u2192\u2192\u2192<br>ProRegTx Hash</td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The hash of the provider transaction as hex in RPC byte order</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.16.0</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> quorum selectquorum <span class=\"cm-number\">1</span> \\\n  b95205c3bba72e9edfbe7380ec91fe5a97e16a189e28f39b03c6822757ad1a34</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"quorumHash\"</span>: <span class=\"cm-string\">\"00000ba8932486c66ed0742fd6b0f4e65afc75ab1e7886c6ef84580dfb7da34f\"</span>,\n  <span class=\"cm-property\">\"recoveryMembers\"</span>: [\n    <span class=\"cm-string\">\"0130c115522681b87082db1f45c38423d1a018a8e1559c2491103931e891c220\"</span>,\n    <span class=\"cm-string\">\"dcd5dd71c4bd50c76d428f72b4a5731bd819720fbc656fff717548e2fe8cbd09\"</span>,\n    <span class=\"cm-string\">\"a25c2f4549da0135411122ee9c2d37e8375577dc97431a282a5c374b4c71463a\"</span>,\n    <span class=\"cm-string\">\"a1aaa653e5183d6a4525abfd0a76fc7d6a68393a1c4259117028dfce4fd215e1\"</span>,\n    <span class=\"cm-string\">\"4c9eb7849590cca2aa18bf9aeeb1e4196c833740de2b111a7690eb62319b0735\"</span>,\n    <span class=\"cm-string\">\"f38b8c5cb6c9e712aeeb150b9591cbdc70e99f9f26c1516955dd506b20dd9876\"</span>,\n    <span class=\"cm-string\">\"afe12673c32de351e9f5a29178cd55656f03e64357be872536eb50b059032fe0\"</span>,\n    <span class=\"cm-string\">\"651d56765c77b8c16b829a4a68f6d39cab40c913d0d365d7b7fd254ccc6cb2f1\"</span>,\n    <span class=\"cm-string\">\"f88d0e5349d0bf7e4426a7461d7931d09f54c13edb6d83306c2521d19eb0b14b\"</span>,\n    <span class=\"cm-string\">\"bdba1f169ab1e73c4dc96f4133b337c36907976e26a4612ffa5ae18869eba96c\"</span>,\n    <span class=\"cm-string\">\"94044c070f9ce6bdd05c2b655ad2383c8402a74c10e0a9a3099d759b33cb7630\"</span>,\n    <span class=\"cm-string\">\"515f77efd5983a765dc5740b0e0d3fae6e867917ca384467b24e31dda68c7369\"</span>,\n    <span class=\"cm-string\">\"d1ebecfb816f5b4b5f34c91c0aab9c1b643c8567473e6ee35e02e01c9f2304c0\"</span>,\n    <span class=\"cm-string\">\"2755d546b114aaec98589cf5b946e408a8996e4837234d2eee97e1da8c71e9ce\"</span>,\n    <span class=\"cm-string\">\"b04b5240a8fc5ae62865dfa2e2558894f4b53d82fe88771e5345407b560d59bc\"</span>,\n    <span class=\"cm-string\">\"53750150229202353bfbc3a2c866b993dd33a4c749d8f18ddcb1f5caf7e901ef\"</span>,\n    <span class=\"cm-string\">\"7a5d1e05d4772feede8b9e71e17e013f99e77c622f13897b8a96339d6d06e1fc\"</span>,\n    <span class=\"cm-string\">\"24f6fae5b5afd001d1046425f38e6ef523140afafc83013468bd31feb343f307\"</span>,\n    <span class=\"cm-string\">\"18f2e176adf88043c41b406d0c97a2dd529d5daaca8b8ac49f72e6da30334926\"</span>,\n    <span class=\"cm-string\">\"73191708ab5b21cc7ede9b12bc1e79de97ad5c4b9717a4fbf5de0ed1f3a5836a\"</span>,\n    <span class=\"cm-string\">\"b57da176c0b6deae786afd318a8e00e351bed0f47ceac28f5b6d3d502f1c68d7\"</span>,\n    <span class=\"cm-string\">\"161b2dcf8243162d11065eefd0948cb79d96dfa8ae869e34763a2bbd7d1d5d55\"</span>,\n    <span class=\"cm-string\">\"fac81f18b3a968f5f881324d8eb38983f3f892c4999c2f46809c4de620b784d2\"</span>,\n    <span class=\"cm-string\">\"42267d2c50a68350c880a488ec25ba0eac4e7cd436eb97c686fe0a6d035d25d3\"</span>,\n    <span class=\"cm-string\">\"0be00b051c77fd4b6dac46a63b939f73726dc61dd80616e4573a9465f1aafa93\"</span>\n  ]\n}</span>\n</code></pre>\n<p><em>See also: none</em></p>\n\n</div>"
}