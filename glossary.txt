Majority Hash Rate Attack
The ability of someone controlling a majority of network hash rate to revise transaction history and prevent new transactions from confirming.
base58check
The method used in Dash for converting 160-bit hashes into P2PKH and P2SH addresses. Also used in other parts of Dash, such as encoding private keys for backup in WIP format. Not the same as other base58 implementations.
Dash address encoding
The method used in Dash for converting 160-bit hashes into P2PKH and P2SH addresses. Also used in other parts of Dash, such as encoding private keys for backup in WIP format. Not the same as other base58 implementations.
address
A 20-byte hash formatted using base58check to produce either a P2PKH or P2SH Dash address. Currently the most common way users exchange payment information.
51 percent attack
The ability of someone controlling a majority of network hash rate to revise transaction history and prevent new transactions from confirming.
block chain
A chain of blocks with each block referencing the block that preceded it. The most-difficult-to-recreate chain is the best block chain.
block header
An 80-byte header belonging to a single block which is hashed repeatedly to create proof of work.
block height
The number of blocks preceding a particular block on a block chain. For example, the genesis block has a height of zero because zero block preceded it.
block reward
The amount that miners may claim as a reward for creating a block. Equal to the sum of the block subsidy (newly available duffs) plus the transactions fees paid by transactions included in the block.
blocks-first
Synchronizing the block chain by downloading each block from a peer and then validating it.
block size limit
The maximum size in bytes that the consensus rules allow a block to be. The current block size limit is 2000000 bytes.
block
One or more transactions prefaced by a block header and protected by proof of work. Blocks are the data stored on the block chain.
bloom filter
A filter used primarily by SPV clients to request only matching transactions and merkle blocks from full nodes.
chain code
In HD wallets, 256 bits of entropy added to the public and private keys to help them generate secure child keys; the master chain code is usually derived from a seed along with the master private key
ChainLocks
ChainLocks are a feature enabling near instant consensus on the valid chain. ChainLocks use Long-Living Masternode Quroums to mitigate 51 percent attacks and reduce uncertainty when receiving funds.
change
An output in a transaction which returns duffs to the spender, thus preventing too much of the input value from going to transaction fees.
child key
In HD wallets, a key derived from a parent key. The key can be either a private key or a public key, and the key derivation may also require a chain code.
coinbase transaction
The first transaction in a block. Always created by a miner, it includes a single coinbase.
coinbase
A special field used as the sole input for coinbase transactions. The coinbase allows claiming the block reward and provides up to 100 bytes for arbitrary data.
CompactSize unsigned integer
A type of variable-length integer commonly used in the Dash P2P protocol and Dash serialized data structures.
compressed public key
An ECDSA public key that is 33 bytes long rather than the 65 bytes of an uncompressed public key.
confirmation score
A score indicating the number of blocks on the best block chain that would need to be modified to remove or modify a particular transaction. A confirmed transaction has a confirmation score of one or higher.
consensus rules
The block validation rules that full nodes follow to stay in consensus with other nodes.
consensus
When several nodes (usually most nodes on the network) all have the same blocks in their locally-validated best block chain.
child pays for parent
Selecting transactions for mining not just based on their fees but also based on the fees of their ancestors (parents) and descendants (children).
cpfp
Selecting transactions for mining not just based on their fees but also based on the fees of their ancestors (parents) and descendants (children).
Dark Gravity Wave
An open source difficulty-adjusting algorithm for Bitcoin-based cryptocurrencies that was first used in Dash. Difficulty adjusts every block based on historical statistical data to ensure consistent block issuance regardless of hash rate fluctuation.
denominations
Denominations of Dash value, usually measured in fractions of a dash but sometimes measured in multiples of a duff. One dash equals 100,000,000 duffs.
devnet
A development environment in which developers can obtain and spend duffs that have no real-world value on a network that is very similar to the Dash mainnet. Multiple independent devnets can coexist without interference. Devnets can be either public or private.
Decentralized Governance By Blockchain
The method used in Dash for funding development and making decisions regarding the project direction and priorities.
difficulty
How difficult it is to find a block relative to the difficulty of finding the easiest possible block. The easiest possible block has a proof-of-work difficulty of 1.
DNS seed
A DNS server which returns IP addresses of full nodes on the Dash network to assist in peer discovery.
double spend
A transaction that uses the same input as an already broadcast transaction. The attempt of duplication, deceit, or conversion, will be adjudicated when only one of the transactions is recorded in the blockchain.
escrow contract
A transaction in which a spender and receiver place funds in a 2-of-2 (or other m-of-n) multisig output so that neither can spend the funds until they're both satisfied with some external outcome.
Evolution
Code name for a decentralized currency platform built on the Dash blockchain technology. The goal is to provide simple access to the unique features and benefits of Dash to assist in the creation of decentralized technology.
extended key
In the context of HD wallets, a public key or private key extended with the chain code to allow them to derive child keys.
fork
When two or more blocks have the same block height, forking the block chain. Typically occurs when two or more miners find blocks at nearly the same time. Can also happen as part of an attack.
genesis block
The first block in the Dash block chain.
hardened extended key
A variation on HD wallet extended keys where only the hardened extended private key can derive child keys. This prevents compromise of the chain code plus any private key from putting the whole wallet at risk.
hard fork
A permanent divergence in the block chain, commonly occurs when non-upgraded nodes can't validate blocks created by upgraded nodes that follow newer consensus rules.
HD protocol
The Hierarchical Deterministic (HD) key creation and transfer protocol (BIP32), which allows creating child keys from parent keys in a hierarchy. Wallets using the HD protocol are called HD wallets.
HD wallet
The Hierarchical Deterministic (HD) key creation and transfer protocol (BIP32), which allows creating child keys from parent keys in a hierarchy. Wallets using the HD protocol are called HD wallets.
BIP32
The Hierarchical Deterministic (HD) key creation and transfer protocol (BIP32), which allows creating child keys from parent keys in a hierarchy. Wallets using the HD protocol are called HD wallets.
HD wallet seed
A potentially-short value used as a seed to generate the master private key and master chain code for an HD wallet.
header chain
A chain of block headers with each header linking to the header that preceded it; the most-difficult-to-recreate chain is the best header chain
headers-first
Synchronizing the block chain by downloading block headers before downloading the full blocks.
high-priority transaction
Transactions that don't have to pay a transaction fee because their inputs have been idle long enough to accumulated large amounts of priority. Note: As of Dash Core 0.12.3, all transactions require a fee. Also, coin age priority logic was removed in Dash Core 0.14.0.
initial block download
The process used by a new node (or long-offline node) to download a large number of blocks to catch up to the tip of the best block chain.
IBD
The process used by a new node (or long-offline node) to download a large number of blocks to catch up to the tip of the best block chain.
input
An input in a transaction which contains three fields: an outpoint, a signature script, and a sequence number. The outpoint references a previous output and the signature script allows spending it.
InstantSend
InstantSend is a service that allows for near-instant transactions. Through this system, inputs can be locked to specific transactions and verified by consensus of the masternode network.
internal byte order
The standard order in which hash digests are displayed as strings---the same format used in serialized blocks and transactions.
inventory
A data type identifier and a hash; used to identify transactions, blocks, and objects available for download through the Dash P2P network.
locktime
Part of a transaction which indicates the earliest time or earliest block when that transaction may be added to the block chain.
nLockTime
Part of a transaction which indicates the earliest time or earliest block when that transaction may be added to the block chain.
Long-Living Masternode Quorum
Long-Living Masternode Quorums (LLMQs) are a Dash innovation that enable masternodes to perform threshold signing of consensus-related messages (e.g. InstantSend transactions). LLMQs provide a more scalable, general use quorum system than the ephemeral ones used prior to Dash Core version 0.14.
LLMQ
Long-Living Masternode Quorums (LLMQs) are a Dash innovation that enable masternodes to perform threshold signing of consensus-related messages (e.g. InstantSend transactions). LLMQs provide a more scalable, general use quorum system than the ephemeral ones used prior to Dash Core version 0.14.
mainnet
The original and main network for Dash transactions, where duffs have real economic value.
malleability
The ability of someone to change (mutate) unconfirmed transactions without making them invalid, which changes the transaction's txid, making child transactions invalid.
MASF
A Soft Fork activated by through miner signalling.
master chain code and private key
In HD wallets, the master chain code and master private key are the two pieces of data derived from the root seed.
masternode
A computer that provides second-tier Dash functionality (InstantSend, PrivateSend, decentralized governance). Masternodes are incentivized by receiving part of the block reward, but must hold 1000 Dash as collateral to prevent sybil attacks.
merkle block
A partial merkle tree connecting transactions matching a bloom filter to the merkle root of a block.
merkle root
The root node of a merkle tree, a descendant of all the hashed pairs in the tree. Block headers must include a valid merkle root descended from all transactions in that block.
merkle tree
A tree constructed by hashing paired data (the leaves), then pairing and hashing the results until a single hash remains, the merkle root. In Dash, the leaves are almost always transactions from a single block.
message header
The four header fields prefixed to all messages on the Dash P2P network.
minimum relay fee
The minimum transaction fee a transaction must pay for a full node to relay that transaction to other nodes. There is no one minimum relay fee---each node chooses its own policy.
mining
Mining is the act of creating valid Dash blocks, which requires demonstrating proof of work, and miners are devices that mine or people who own those devices.
multisig
A pubkey script that provides *n* number of pubkeys and requires the corresponding signature script provide *m* minimum number signatures corresponding to the provided pubkeys.
M-of-N multisig
A pubkey script that provides *n* number of pubkeys and requires the corresponding signature script provide *m* minimum number signatures corresponding to the provided pubkeys.
nBits
The target is the threshold below which a block header hash must be in order for the block to be valid, and nBits is the encoded form of the target threshold as it appears in the block header.
target threshold
The target is the threshold below which a block header hash must be in order for the block to be valid, and nBits is the encoded form of the target threshold as it appears in the block header.
node
A computer that connects to the Dash network.
null data (OP_RETURN) transaction
A transaction type that adds arbitrary data to a provably unspendable pubkey script that full nodes don't have to store in their UTXO database.
opcode
Operation codes from the Dash Script language which push data or perform functions within a pubkey script or signature script.
orphan block
Blocks whose parent block has not been processed by the local node, so they can't be fully validated yet.
outpoint
The data structure used to refer to a particular transaction output, consisting of a 32-byte TXID and a 4-byte output index number (vout).
output
An output in a transaction which contains two fields: a value field for transferring zero or more duffs and a pubkey script for indicating what conditions must be fulfilled for those duffs to be further spent.
P2PKH address
A Dash payment address comprising a hashed public key, allowing the spender to create a standard pubkey script that Pays To PubKey Hash (P2PKH).
Pay To PubKey Hash
A Dash payment address comprising a hashed public key, allowing the spender to create a standard pubkey script that Pays To PubKey Hash (P2PKH).
P2SH address
A Dash payment address comprising a hashed script, allowing the spender to create a standard pubkey script that Pays To Script Hash (P2SH). The script can be almost any valid pubkey script.
Pay To Script Hash
A Dash payment address comprising a hashed script, allowing the spender to create a standard pubkey script that Pays To Script Hash (P2SH). The script can be almost any valid pubkey script.
P2SH multisig
A P2SH output where the redeem script uses one of the multisig opcodes. Up until Bitcoin Core 0.10.0, P2SH multisig scripts were standard transactions, but most other P2SH scripts were not.
parent key
In HD wallets, a key used to derive child keys. The key can be either a private key or a public key, and the key derivation may also require a chain code.
payment protocol
The protocol defined in BIP70 (and other BIPs) which lets spenders get signed payment details from receivers.
private key
The private portion of a keypair which can create signatures that other people can verify using the public key.
PrivateSend
PrivateSend is a masternode managage, decentralized mixer for creating an on-demand system of removing the history from coins on the network. PrivateSend mixes inputs while allowing each participant to retain control of their coins at all times so the process can be done without trusting a third party.
proof of work
A hash below a target value which can only be obtained, on average, by performing a certain amount of brute force work---therefore demonstrating proof of work.
pubkey script
A script included in outputs which sets the conditions that must be fulfilled for those duffs to be spent. Data for fulfilling the conditions can be provided in a signature script. Pubkey Scripts are called a scriptPubKey in code.
public key
The public portion of a keypair which can be used to verify signatures made with the private portion of the keypair.
RBF
NOT IMPLEMENTED IN DASH. Replacing one version of an unconfirmed transaction with a different version of the transaction that pays a higher transaction fee. May use BIP125 signaling.
replace-by-fee
NOT IMPLEMENTED IN DASH. Replacing one version of an unconfirmed transaction with a different version of the transaction that pays a higher transaction fee. May use BIP125 signaling.
redeem script
A script similar in function to a pubkey script. One copy of it is hashed to create a P2SH address (used in an actual pubkey script) and another copy is placed in the spending signature script to enforce its conditions.
regression test mode
A local testing environment in which developers can almost instantly generate blocks on demand for testing events, and can create private duffs with no real-world value.
RPC byte order
A hash digest displayed with the byte order reversed; used in Dash Core RPCs, many block explorers, and other software.
Sentinel
An autonomous agent for persisting, processing and automating Dash governance objects and tasks, and for expanded functions in Dash Evolution.
sequence number
Part of all transactions. A number intended to allow unconfirmed time-locked transactions to be updated before being finalized; not currently used except to disable locktime in a transaction
serialized block
A complete block in its binary format---the same format used to calculate total block byte size; often represented using hexadecimal.
raw block
A complete block in its binary format---the same format used to calculate total block byte size; often represented using hexadecimal.
serialized transaction
Complete transactions in their binary format; often represented using hexadecimal. Sometimes called raw format because of the various Dash Core commands with "raw" in their names.
raw transaction
Complete transactions in their binary format; often represented using hexadecimal. Sometimes called raw format because of the various Dash Core commands with "raw" in their names.
SIGHASH_ALL
Default signature hash type which signs the entire transaction except any signature scripts, preventing modification of the signed parts.
SIGHASH_ANYONECANPAY
A signature hash type which signs only the current input.
SIGHASH_NONE
Signature hash type which only signs the inputs, allowing anyone to change the outputs however they'd like.
SIGHASH_SINGLE
Signature hash type that signs the output corresponding to this input (the one with the same index value), this input, and any other inputs partially. Allows modification of other outputs and the sequence number of other inputs.
signature hash
A flag to Dash signatures that indicates what parts of the transaction the signature signs. (The default is SIGHASH_ALL.) The unsigned parts of the transaction may be modified.
signature script
Data generated by a spender which is almost always used as variables to satisfy a pubkey script. Signature Scripts are called scriptSig in code.
scriptSig
Data generated by a spender which is almost always used as variables to satisfy a pubkey script. Signature Scripts are called scriptSig in code.
signature
A value related to a public key which could only have reasonably been created by someone who has the private key that created that public key. Used in Dash to authorize spending duffs previously sent to a public key.
SPV
A method for verifying if particular transactions are included in a block without downloading the entire block. The method is used by some lightweight clients.
Simplified Payment Verification
A method for verifying if particular transactions are included in a block without downloading the entire block. The method is used by some lightweight clients.
soft fork
A softfork is a change to the dash protocol wherein only previously valid blocks/transactions are made invalid. Since old nodes will recognise the new blocks as valid, a softfork is backward-compatible.
special transactions
Special Transactions provide a way to include non-financial, consensus-assisting metadata (e.g. masternode lists) on-chain.
spork
A spork is a mechanism unique to Dash used to safely deploy new features to the network through network-level variables to avoid the risk of unintended network forking during upgrades.
multi-phased fork
A spork is a mechanism unique to Dash used to safely deploy new features to the network through network-level variables to avoid the risk of unintended network forking during upgrades.
stale block
Blocks which were successfully mined but which aren't included on the current best block chain, likely because some other block at the same height had its chain extended first.
standard transaction
A transaction that passes Dash Core's IsStandard() and IsStandardTx() tests. Only standard transactions are mined or broadcast by peers running the default Dash Core software.
start string
Four defined bytes which start every message in the Dash P2P protocol to allow seeking to the next message.
network magic
Four defined bytes which start every message in the Dash P2P protocol to allow seeking to the next message.
superblock
Special blocks that pay out funded budget proposals approved by masternode votes via the decentralized governance system. Superblocks are issued monthly and have a coinbase that can be much larger than normal. The superblock value is provided by the 10% of block rewards set aside for superblock payouts.
testnet
A global testing environment in which developers can obtain and spend duffs that have no real-world value on a network that is very similar to the Dash mainnet.
transaction fee
The amount remaining when the value of all outputs in a transaction are subtracted from all inputs in a transaction; the fee is paid to the miner who includes that transaction in a block.
miner fee
The amount remaining when the value of all outputs in a transaction are subtracted from all inputs in a transaction; the fee is paid to the miner who includes that transaction in a block.
User Activated Soft Fork
A Soft Fork activated by flag day or node enforcement instead of miner signalling.
UASF
A Soft Fork activated by flag day or node enforcement instead of miner signalling.
unspent transaction output
An Unspent Transaction Output (UTXO) that can be spent as an input in a new transaction.
UXTO
An Unspent Transaction Output (UTXO) that can be spent as an input in a new transaction.
Wallet Import Format
A data interchange format designed to allow exporting and importing a single private key with a flag indicating whether or not it uses a compressed public key.
wallet
Software that stores private keys and monitors the block chain (sometimes as a client of a server that does the processing) to allow users to spend and receive duffs.
watch-only address
An address or pubkey script stored in the wallet without the corresponding private key, allowing the wallet to watch for outputs but not spend them.
X11
Chained hashing algorithm created by Evan Duffield that utilizes a sequence of eleven scientific hashing algorithms for the proof-of-work.
transaction identifiers
Identifiers used to uniquely identify a particular transaction; specifically, the sha256d hash of the transaction.
miner
Mining is the act of creating valid Dash blocks, which requires demonstrating proof of work, and miners are devices that mine or people who own those devices.
Miner Activated Soft Fork
A Soft Fork activated by through miner signalling.
P2PKH
A Dash payment address comprising a hashed public key, allowing the spender to create a standard pubkey script that Pays To PubKey Hash (P2PKH).
blocktransactions
A P2P Networking data structure used to provide some of the transactions in a block as requested.
blocktransactionsrequest
A P2P Networking data structure used to list transaction indexes in a block being requested by a peer.
coinbase block height
The current block's height encoded into the first bytes of the coinbase field.
data-pushing opcode
Any opcode from 0x01 to 0x4e which pushes data on to the script evaluation stack.
headerandshortids
A P2P Networking data structure used to relay a block header, the short transactions IDs used for matching already-available transactions, and a select few transactions which a peer may be missing.
key index
An index number used in the HD wallet formula to generate child keys from a parent key.
key pair
A private key and its derived public key.
network
The Dash P2P network which broadcasts transactions and blocks.
output index
The sequentially-numbered index of outputs in a single transaction starting from 0.
point function
The ECDSA function used to create a public key from a private key.
prefilledtransaction
A P2P Networking data structure used to represent a vector of a few transactions.
previous block header hash
A field in the block header which contains the SHA256(SHA256()) hash of the previous block's header.
proper money handling
Bitcoin amounts need to be correctly processed without introducing rounding errors that could cause monetary loss.
standard block relay
The regular block relay method: announcing a block with an inv message and waiting for a response.
transaction
A transaction spending satoshis.
transaction version number
A version number prefixed to transactions to allow upgrading.
transactions
A transaction spending satoshis.
unencrypted wallet
A wallet that has not been encrypted with the encryptwallet RPC.
unique addresses
Address which are only used once to protect privacy and increase security.
unlocked wallet
An encrypted wallet that has been unlocked with the walletpassphrase RPC.
unsolicited block push
When a miner sends a block message without sending an inv message first.
v2 block
The current version of Bitcoin blocks.
wallet support
A Dash Core ./configure option that enables (default) or disables the wallet.
P2SH
A Dash payment address comprising a hashed script, allowing the spender to create a standard pubkey script that Pays To Script Hash (P2SH). The script can be almost any valid pubkey script.
change address
An output in a transaction which returns duffs to the spender, thus preventing too much of the input value from going to transaction fees.
change output
An output in a transaction which returns duffs to the spender, thus preventing too much of the input value from going to transaction fees.
point()
The ECDSA function used to create a public key from a private key.
child public key
In HD wallets, a key derived from a parent key. The key can be either a private key or a public key, and the key derivation may also require a chain code.
child private key
In HD wallets, a key derived from a parent key. The key can be either a private key or a public key, and the key derivation may also require a chain code.
parent public key
In HD wallets, a key used to derive child keys. The key can be either a private key or a public key, and the key derivation may also require a chain code.
parent private key
In HD wallets, a key used to derive child keys. The key can be either a private key or a public key, and the key derivation may also require a chain code.
extended private key
In the context of HD wallets, a public key or private key extended with the chain code to allow them to derive child keys.
extended public key
In the context of HD wallets, a public key or private key extended with the chain code to allow them to derive child keys.
master chain code
In HD wallets, the master chain code and master private key are the two pieces of data derived from the root seed.
master private key
In HD wallets, the master chain code and master private key are the two pieces of data derived from the root seed.
root seed
A potentially-short value used as a seed to generate the master private key and master chain code for an HD wallet.
hardened extended private key
A variation on HD wallet extended keys where only the hardened extended private key can derive child keys. This prevents compromise of the chain code plus any private key from putting the whole wallet at risk.
DNS seeds
DNS servers which return IP addresses of full nodes on the Dash network to assist in peer discovery.
raw format
Complete transactions in their binary format; often represented using hexadecimal. Sometimes called raw format because of the various Dash Core commands with "raw" in their names.
MSG_TX
The TXID data type identifier of an inventory on the P2P network.
MSG_BLOCK
The block header hash data type identifier of an inventory on the P2P network.
MSG_FILTERED_BLOCK
An alternative to the block header hash data type identifier of an inventory on the P2P network used to request a merkle block.
MSG_CLSIG
The ChainLock Signature data type identifier of an inventory on the P2P network.
MSG_LEGACY_TXLOCK_REQUEST
The InstantSend TX Lock request data type identifier of an inventory on the P2P network
MSG_ISLOCK
The LLMQ-based InstantSend Lock data type identifier of an inventory on the P2P network.
MSG_SPORK
The Spork ID data type identifier of an inventory on the P2P network.
MSG_DSTX
PrivateSend TX broadcast data type identifier of an inventory on the P2P network.
MSG_GOVERNANCE_OBJECT
Governance object data type identifier of an inventory on the P2P network.
MSG_GOVERNANCE_OBJECT_VOTE
Governance object vote data type identifier of an inventory on the P2P network.
MSG_CMPCT_BLOCK
An alternative to the block header hash data type identifier of an inventory on the P2P network used to request a compact block.
MSG_QUORUM_FINAL_COMMITMENT
The Long-Living Masternode Quorum Final Commitment data type identifier of an inventory on the P2P network.
MSG_QUORUM_CONTRIB
The Long-Living Masternode Quorum Contribution data type identifier of an inventory on the P2P network.
MSG_QUORUM_COMPLAINT
The Long-Living Masternode Quorum Complaint data type identifier of an inventory on the P2P network.
MSG_QUORUM_JUSTIFICATION
The Long-Living Masternode Quorum Justification data type identifier of an inventory on the P2P network.
MSG_QUORUM_PREMATURE_COMMITMENT
The Long-Living Masternode Quorum Premature Commitment data type identifier of an inventory on the P2P network.
MSG_QUORUM_RECOVERED_SIG
The Long-Living Masternode Quorum Recovered Signature data type identifier of an inventory on the P2P network.
MSG_TXLOCK_VOTE
The InstantSend TX Lock vote data type identifier of an inventory on the P2P network.
MSG_MASTERNODE_PAYMENT_VOTE
Masternode Payment Vote data type identifier of an inventory on the P2P network.
MSG_MASTERNODE_PAYMENT_BLOCK
Masternode Payment Block data type identifier of an inventory on the P2P network.
MSG_BUDGET_VOTE
Deprecated budget related data type identifier of an inventory on the P2P network.
MSG_BUDGET_PROPOSAL
Deprecated budget related data type identifier of an inventory on the P2P network.
MSG_BUDGET_FINALIZED
Deprecated budget related data type identifier of an inventory on the P2P network.
MSG_BUDGET_FINALIZED_VOTE
Deprecated budget related data type identifier of an inventory on the P2P network.
MSG_MASTERNODE_QUORUM
Not implemented.
MSG_MASTERNODE_ANNOUNCE
Masternode broadcast data type identifier of an inventory on the P2P network.
MSG_MASTERNODE_PING
Masternode Ping data type identifier of an inventory on the P2P network.
MSG_MASTERNODE_VERIFY
Masternode Verify data type identifier of an inventory on the P2P network.
MSG_QUORUM_DEBUG_STATUS
The Long-Living Masternode Quorum Debug Status data type identifier of an inventory on the P2P network.
MSG_TXLOCK_REQUEST
The InstantSend TX Lock request data type identifier of an inventory on the P2P network.
inventories
A data type identifier and a hash; used to identify transactions, blocks, and objects available for download through the Dash P2P network.
Start String
Four defined bytes which start every message in the Dash P2P protocol to allow seeking to the next message.
coinbase field
A special field used as the sole input for coinbase transactions. The coinbase allows claiming the block reward and provides up to 100 bytes for arbitrary data.
Base58Check
The method used in Dash for converting 160-bit hashes into P2PKH and P2SH addresses. Also used in other parts of Dash, such as encoding private keys for backup in WIP format. Not the same as other base58 implementations.
private keys
The private portion of a keypair which can create signatures that other people can verify using the public key.
OP_CHECKMULTISIG
Opcode which returns true if one or more provided signatures (m) sign the correct parts of a transaction and match one or more provided public keys (n).
OP_CHECKSIG
Opcode which returns true if a signature signs the correct parts of a transaction and matches a provided public key.
OP_DUP
Operation which duplicates the entry below it on the stack.
OP_EQUAL
Operation which returns true if the two entries below it on the stack are equivalent.
OP_EQUALVERIFY
Operation which terminates the script in failure unless the two entries below it on the stack are equivalent.
OP_HASH160
Operation which converts the entry below it on the stack into a RIPEMD(SHA256()) hashed version of itself.
OP_RETURN
Operation which terminates the script in failure.
OP_VERIFY
Operation which terminates the script if the entry below it on the stack is non-true (zero).
parent chain code
In HD wallets, 256 bits of entropy added to the public and private keys to help them generate secure child keys; the master chain code is usually derived from a seed along with the master private key
index
An index number used in the HD wallet formula to generate child keys from a parent key
Unsolicited Block Push
When a miner sends a block message without sending an inv message first
Standard Block Relay
The regular block relay method: announcing a block with an inv message and waiting for a response
point
The ECDSA function used to create a public key from a private key
Block headers
An 80-byte header belonging to a single block which is hashed repeatedly to create proof of work.
node
A computer that connects to the Dash network.
nodes
A computer that connects to the Dash network.
header
An 80-byte header belonging to a single block which is hashed repeatedly to create proof of work.
ECDSA signatures
A value related to a public key which could only have reasonably been created by someone who has the private key that created that public key. Used in Dash to authorize spending duffs previously sent to a public key.
TXID
An identifier used to uniquely identify a particular transaction; specifically, the sha256d hash of the transaction.
TXIDs
An identifier used to uniquely identify a particular transaction; specifically, the sha256d hash of the transaction.
target
The target is the threshold below which a block header hash must be in order for the block to valid, and nBits is the encoded form of the target threshold as it appears in the block header.
compactSize uint
A type of variable-length integer commonly used in the Dash P2P protocol and Dash serialized data structures.
Miners
Mining is the act of creating valid Dash blocks, which requires demonstrating proof of work, and miners are devices that mine or people who own those devices.
Masternodes
A computer that provides second-tier Dash functionality (InstantSend, PrivateSend, decentralized governance). Masternodes are incentivized by receiving part of the block reward, but must hold 1000 Dash as collateral to prevent sybil attacks.
masternodes
A computer that provides second-tier Dash functionality (InstantSend, PrivateSend, decentralized governance). Masternodes are incentivized by receiving part of the block reward, but must hold 1000 Dash as collateral to prevent sybil attacks.
opcodes
Operation codes from the Dash Script language which push data or perform functions within a pubkey script or signature script.
signatures
A value related to a public key which could only have reasonably been created by someone who has the private key that created that public key. Used in Dash to authorize spending duffs previously sent to a public key.
public keys
The public portion of a keypair which can be used to verify signatures made with the private portion of the keypair.
SIGHASH flag
A flag to Dash signatures that indicates what parts of the transaction the signature signs. (The default is SIGHASH_ALL.) The unsigned parts of the transaction may be modified.
ECDSA private key
The private portion of a keypair which can create signatures that other people can verify using the public key.
secp256k1 signatures
A value related to a public key which could only have reasonably been created by someone who has the private key that created that public key. Used in Dash to authorize spending duffs previously sent to a public key.
Signature scripts
Data generated by a spender which is almost always used as variables to satisfy a pubkey script. Signature Scripts are called scriptSig in code.
P2SH pubkey script
A Dash payment address comprising a hashed script, allowing the spender to create a standard pubkey script that Pays To Script Hash (P2SH). The script can be almost any valid pubkey script.
P2SH outputs
A Dash payment address comprising a hashed script, allowing the spender to create a standard pubkey script that Pays To Script Hash (P2SH). The script can be almost any valid pubkey script.
addresses
A 20-byte hash formatted using base58check to produce either a P2PKH or P2SH Dash address. Currently the most common way users exchange payment information.
raw transactions
Complete transactions in their binary format; often represented using hexadecimal. Sometimes called raw format because of the various Dash Core commands with "raw" in their names.
P2PKH addresses
A Dash payment address comprising a hashed public key, allowing the spender to create a standard pubkey script that Pays To PubKey Hash (P2PKH).
P2SH addresses
A Dash payment address comprising a hashed script, allowing the spender to create a standard pubkey script that Pays To Script Hash (P2SH). The script can be almost any valid pubkey script.
base58
The method used in Dash for converting 160-bit hashes into P2PKH and P2SH addresses. Also used in other parts of Dash, such as encoding private keys for backup in WIP format. Not the same as other base58 implementations.
peer
A computer that connects to the Dash network.
peers
A computer that connects to the Dash network.
soft forks
A softfork is a change to the dash protocol wherein only previously valid blocks/transactions are made invalid. Since old nodes will recognise the new blocks as valid, a softfork is backward-compatible.
inputs
An input in a transaction which contains three fields: an outpoint, a signature script, and a sequence number. The outpoint references a previous output and the signature script allows spending it.
outputs
An output in a transaction which contains two fields: a value field for transferring zero or more duffs and a pubkey script for indicating what conditions must be fulfilled for those duffs to be further spent.
CompactSize unsigned integers
A type of variable-length integer commonly used in the Dash P2P protocol and Dash serialized data structures.
duffs
Denominations of Dash value, usually measured in fractions of a dash but sometimes measured in multiples of a duff. One dash equals 100,000,000 duffs.
Special Transactions
Special Transactions provide a way to include non-financial, consensus-assisting metadata (e.g. masternode lists) on-chain.
BIP70 payment protocol
The protocol defined in BIP70 (and other BIPs) which lets spenders get signed payment details from receivers.
Spork
A spork is a mechanism unique to Dash used to safely deploy new features to the network through network-level variables to avoid the risk of unintended network forking during upgrades.
merkle blocks
A partial merkle tree connecting transactions matching a bloom filter to the merkle root of a block.
blocks
One or more transactions prefaced by a block header and protected by proof of work. Blocks are the data stored on the block chain.
headers
An 80-byte header belonging to a single block which is hashed repeatedly to create proof of work.
unconfirmed transaction
A score indicating the number of blocks on the best block chain that would need to be modified to remove or modify a particular transaction. A confirmed transaction has a confirmation score of one or higher.
stale blocks
Blocks which were successfully mined but which aren't included on the current best block chain, likely because some other block at the same height had its chain extended first.
confirmations
A score indicating the number of blocks on the best block chain that would need to be modified to remove or modify a particular transaction. A confirmed transaction has a confirmation score of one or higher.
ChainLock
ChainLocks are a feature enabling near instant consensus on the valid chain. ChainLocks use Long-Living Masternode Quroums to mitigate 51 percent attacks and reduce uncertainty when receiving funds.
orphan blocks
Blocks whose parent block has not been processed by the local node, so they can't be fully validated yet.
